<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>





<head>

<title>Agent Overview</title>



 <meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=524>
<meta name=layout-width content=900>
<meta name=x-ignored-words content="TLS;Uptime;uptime;Unix;SecureSpan;cert;francis;LDAP;firewall;policy.templates;admin;popup;user(s;CTRL;Login;SSL;WS;username;Username;Xml-based;DMZ;non-invasively;Linux;Solaris;internetworking;WSDL;SOAPAction;Beatty;ext;GUI-based;GUI;scalable;PKI-based;offloads;toolset;WS-Security;Services@https;servername;namespace;Gateway(s;AES">




 <link rel="StyleSheet" href="../console.css">



 <META NAME="generator" CONTENT="RoboHelp by eHelp Corporation www.ehelp.com">
</head>




<body>

<h1>SecureSpan<symbol name=Trademark>&#8482; 
 Agent Overview</h1>

<p>The SecureSpan<symbol name=Trademark>&#8482; 
 Agent exists to simplify the task of layering security onto Web services 
 transactions. The Agent follows the policy directives of the Gateway. 
 The administrator’s policy changes are instantly loaded and applied on 
 the Agent without changing a line of code in the application. The Agent 
 also manages client-side certificates issued by the Gateway, providing 
 the benefits of strong authentication, digital signing, and message-based 
 encryption. </p>

<p>The Agent loads policies from the Gateway the first time a service is 
 called. For every SOAP message the Proxy receives, it decorates the message 
 according to the rules defined in the policy. For example, the policy 
 may demand that the message body be encrypted with AES encryption under 
 the WS-Security standard, and that the entire message body be signed by 
 the client’s private key. The Agent will interpret this policy and modify 
 the transaction accordingly before sending it downstream to the Gateway. 
 </p>

</body>

</html>
