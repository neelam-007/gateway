<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>





<head>

<title>Policy Organization</title>



 <meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=topic-status content="In Progress">
<meta name=topic-priority content=0>
<meta name=topic-time-estimate content=0>
<meta name=topic-comment content>
<meta name=topic-id content="Creating Policies">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2551>
<meta name=layout-width content=849>
<meta name=x-ignored-words content="SecureSpan;Workflow;LDAP;IIP;WSS;TLS;SiteMinder;Symantec;JMS;SAML;FIP;CIDR;Namespace;EIPs;XPath;GenericLDAP;Timeout;IP;MSAD;SSL;Login;Tivoli;TivoliLDAP;Uptime;WS;WSDL;XSLT;HTTP(S;screenshots;ui;asc;desc;int;BFILENAME;FROM_TZ;NUMTODSINTERVAL;NUMTOYMINTERVAL;TO_TIMESTAMP_TZ;TZ_OFFSET;timestamp;add-ons;Netegrity;NotOnOrAfter;saml;requestor;soapenv;timestamps;uptime;Unix;cert;francis;firewall;policy.templates;exp;provider(s;assertion(s;encapsules;admin;popup;user(s;CTRL;username;Username;Xml-based;DMZ;non-invasively;Linux;Solaris;internetworking;SOAPAction;Beatty;ext;GUI-based;GUI;scalable;PKI-based;offloads;toolset;WS-Security;Services@https;servername;namespace;Gateway(s;tempuri.org;Name.wsdl;yourcompany.com;MyWebService.wsdl.;schemas.xmlsoap.org;wsdl;URIs;GetQuoteResponse;stockSymbol;StockInfo;getQuote;getQuoteRequest;getQuoteResponse;operation(s;StockServiceSOAPBinding;StockQuote;localhost;ws;TCP;IIPs;criteria--username;headers--for;SHA;form--for;cleartext;folder(s;SSL-TLS;yuk;workflow;detail(s;AES;node(s;Avg;min;CDE;Kunststoff;login;timeout;SSGAdmin;hostname;Admin;substring;DN;myLDAP;ldap;ldapserver;dc=com;myMSAD;ou=Layer;dc=LOCAL;hostname.domain;mygateway;mycompany.com;mygateway.mycompany.com.;IIS;mail.abc.com;ou=ABC;dc=ABC;mybrowse;mypassword;LdapErr;vece;findAllHeaders;myName;myPassword;myCompany;SLA;ReType;Inc;SNMP;ssg;conf;serverconfig_override.properties;Hostname;IANA;OID;UsernameToken;PEM;cred;certs;Xml;HttpClientCert;n.m;xxxx;System.NullReferenceException;C;IPAddress;MyGateway;MyGateway.MyCompany.com.;MyGateway.MyCompany.com;servername.company.com.;SLL;Wsdl;searchability;JGoodies;XP;connection(s;WebSphere;MQ;JNDI;requestors;JMS-to-JMS;iJMS;oJMS;Requestor;requestor-designated;JMS-to-HTTP;HTTP-to-JMS;cn=GatewayQueue;GatewayQueue;servername.company.com;dc=companydomain;QueueConnectionFactory;cn=QueueConnectionFactoryJNDIName;QueueConnectionFactoryJNDIName;com.sun.jndi.ldap.LdapCtxFactory.;unregister;Expiry;PDF;www.zvon.org;xxl;XPathTutorial;www.purpletech.com;xpe;index.jsp;xpath;pls;Stylesheet;eXtensible;elementName;attributeName;local-name(;xpath#function-local-name;examples.html;WSDL-based;namespaces;boolean(s;CID;Namespaces;attachment(s;KB;URL(s;machinename.domain.com;machinename.domain.com.;URLs;LIPs;expiry;Uncheck;Ctrl;group(s;SSL-secured;metadata;ACL;init;workflows;CN=;NameIdentifier;Format=;windowsDomain;emailAddress;DNs;O=ACME;OU=Anvils;CN=*;CN=Name;CN=user;BinarySecurityToken;AttributeStatement;CAs;DNS;IPs;failover;balancer;Failover;IV_USER;non-SecureSpan;usernametoken;Kerberos;SRP;PGP;SPKI;XKMS;SecurityContextToken;WS-SecureConversation;SAML-specified;SAML-supported;www.oasis-open.org;Manager.sh;Extranet;SandraV;SandraLV;SandraLV's;MilanV">




 <link rel="StyleSheet" href="JavaHelp.css">



 <META NAME="generator" CONTENT="RoboHelp by eHelp Corporation www.ehelp.com">
</head>




<body>

<h1>Policy Organization</h1>

<p>In the SecureSpan™ Manager, a policy includes assertions that determine 
 the essential authentication method, identity credentials, transport method, 
 and routing method for the Web service or XML application. The specific 
 types of assertions, their relative location, and the other assertions 
 determine the properties and validity of a policy.</p>

<p class="quicklinks">&nbsp;</p>

<p>The assertions in the [Assertions] tab are organized into categories 
 corresponding to the main requirements of a policy: </p>

<p>&nbsp;</p>

<div style="padding: 5px;
			background-color: #f8fbdd;
			margin-right: 4px;
			margin-top: 4px;
			margin-bottom: 4px;
			float: none;
			width: 550px;
			margin-left: 4px;">
<p class="tipsnotes"><b><span style="font-weight: bold;"><B><img src="TIPfinal.gif" x-maintain-ratio="TRUE" style="border: none;
	border-style: none;
	width: 16px;
	height: 16px;
	float: none;
	border-style: none;" width="16" height="16" border="0"></b> 
 &nbsp;TIP:</B></span> 
 For in-depth information about the assertions in the [Assertions] tab, 
 see <a HREF="About_Policy_Assertions.htm">About Policy Assertions</a>.</p>
</div>

<p>&nbsp;</p>

<ul style="list-style: disc;"
	type=disc>
	
	<li class="kadov-p"><p style="margin-top: 4.5pt;">Authentication </p></li>
	
	<li class="kadov-p"><p>Transport Layer Security (TLS) </p></li>
	
	<li class="kadov-p"><p>XML Security </p></li>
	
	<li class="kadov-p"><p>Message Validation/Transformation </p></li>
	
	<li class="kadov-p"><p>Message Routing </p></li>
	
	<li class="kadov-p"><p>Service Availability </p></li>
	
	<li class="kadov-p"><p>Logging and Auditing</p></li>
	
	<li class="kadov-p"><p>Policy Logic. </p></li>
</ul>

<p>&nbsp;</p>

<p>A policy is constructed by moving assertions from the [Assertions] tab 
 into a meaningful and ordered tree structure in the Policy Development 
 window. During processing, the SecureSpan™ Gateway scans the policy assertions 
 one-by-one and from top to bottom. The message processing model for a 
 typical policy is:</p>

<p>&nbsp;</p>

<ol style="list-style: decimal;"
	type=1>
	
	<li class="kadov-p"><p>Service request arrives.</p></li>
	
	<li class="kadov-p"><p>Request is run through the WS-Security processor: 
 </p></li>
</ol>

<ul>
	
	<ul>
		
		<li style="list-style: disc;" type="disc" class="kadov-p"><p>Encrypted sections are decrypted and WS-Security 
 Signatures are verified. The sign and/or encrypt order is chosen by the 
 sender </p></li>
		
		<li style="list-style: disc;" type="disc" class="kadov-p"><p>Default security header is removed.</p></li>
	</ul>
</ul>

<ol start=3
	style="list-style: decimal;"
	type=1>
	
	<li class="kadov-p"><p>Request is run through the policy assertions:</p></li>
</ol>

<ul>
	
	<ul>
		
		<li style="list-style: disc;" type="disc" class="kadov-p"><p>Routing assertion sends a request to the service 
 server </p></li>
		
		<li style="list-style: disc;" type="disc" class="kadov-p"><p>Remainder of policy assertions are applied 
 to the service response.</p></li>
	</ul>
</ul>

<ol start=4
	style="list-style: decimal;"
	type=1>
	
	<li class="kadov-p"><p>Response is run through the WS-Security decorator: 
 </p></li>
</ol>

<ul>
	
	<ul>
		
		<li style="list-style: disc;" type="disc" class="kadov-p"><p>Default security header is created </p></li>
		
		<li style="list-style: disc;" type="disc" class="kadov-p"><p>Signatures specified by the policy are applied 
 </p></li>
		
		<li style="list-style: disc;" type="disc" class="kadov-p"><p>Encryption specified by the policy is performed.</p></li>
	</ul>
</ul>

<ol start=5
	style="list-style: decimal;"
	type=1>
	
	<li class="kadov-p"><p>Response is sent back to the client.</p></li>
</ol>

<p>&nbsp;</p>

<p>Each processed assertion has an outcome: It either succeeds or fails. 
 When assertions are grouped into an &quot;At least one assertion must 
 evaluate to true&quot; folder in the Policy Development window, each successive 
 child assertion is processed until a single assertion succeeds, yielding 
 a success outcome for the folder. If all child assertions in an &quot;At 
 least one assertion must evaluate to true&quot; folder fail, then the 
 overall folder fails. Similarly, when assertions are grouped into an &quot;All 
 assertions must evaluate to true&quot; folder, each successive child assertion 
 is processed until all assertions succeed, yielding a success outcome 
 for the folder. Processing in the &quot;All assertions must evaluate to 
 true&quot; folder will stop when the first child assertion fails, yielding 
 a fail outcome for the folder. Each policy contains an implicit &quot;all 
 must be true&quot; assertion that requires that all first-level (non-child) 
 assertions (including first-level folders) succeed in order for the overall 
 policy to succeed. If all first-level assertions succeed, then the service 
 requestor will receive a response message. If a first-level assertion 
 fails, then the service requestor will receive an error message.</p>

<p>&nbsp;</p>

<div style="padding: 5px;
			background-color: #f8fbdd;
			margin-right: 4px;
			margin-top: 4px;
			margin-bottom: 4px;
			float: none;
			width: 550px;
			margin-left: 4px;">
<p class="tipsnotes"><b><span style="font-weight: bold;"><B><img src="TIPfinal.gif" x-maintain-ratio="TRUE" style="border: none;
	width: 16px;
	height: 16px;
	float: none;
	border-style: none;
	border-style: none;" width="16" height="16" border="0"></b> 
 &nbsp;TIP:</B></span> 
 If you do not want the failure of an &quot;At least one assertion must 
 evaluate to true&quot; folder to fail the entire policy, then add a Continue 
 Processing assertion into the assertion folder (see <a href="Policy_Logic_Assertions.htm">Configure 
 and Edit Policy Logic Assertions</a>). The Continuing Processing assertion 
 will always evaluate to true, preventing the failure of a policy due to 
 the failure of a non-essential or conditional assertion.</p>
</div>

<p>&nbsp;</p>

<p><img src="LevelSS.gif" x-maintain-ratio="TRUE" style="border: none;
				margin-left: 0px;
				margin-right: 0px;
				margin-top: 10px;
				margin-bottom: 4px;
				width: 505px;
				height: 350px;
				float: none;
				border-style: none;
				border-style: none;" width="505" height="350" border="0"></p>

<h6 style="margin-bottom: 10pt;
			color: #7c7c7c;
			margin-top: 2pt;">A Policy Assertion Tree in the Policy Development 
 Window</h6>

<p>&nbsp;</p>

<p>Some policy assertions work together and require the presence of each 
 other to succeed. The Grant Access to Users/Groups assertion &quot;User: 
 SandraLV,&quot; for example, requires the presence of an authentication 
 assertion, such as HTTP Basic, to provide the credentials for validating 
 SandraLV's identity. This arrangement will fail unless the authentication 
 assertion appears before the identity that it is providing credentials 
 for. In a policy, therefore, both the presence and relative locations 
 of dependent assertions determines their individual success and the overall 
 validity of the policy.</p>

<p>&nbsp;</p>

<p style="margin-bottom: 9pt;">Since each policy contains an inherent &quot;All&quot; 
 assertion for first-level assertions and folders, and since an authentication 
 assertion (such as HTTP Basic) can only provide credentials for a single 
 user or group, there should not be more than one first-level Grant Access 
 to Users/Groups assertion in a policy or within an assertion folder. To 
 grant access to more than one user or group, place each individual Grant 
 Access to Users/Groups assertion in an individual &quot;At least one assertion 
 must evaluate to true&quot; or &quot;All assertions must evaluate to true&quot; 
 folder with an authentication assertion (and other assertions, as required). 
 In the following policy excerpt, for example, the credentials for user 
 &quot;SandraLV&quot; are authenticated by the HTTP Basic method, and the 
 credentials for user &quot;MilanV&quot; are authenticated by the SSL with 
 Client Certificate Authentication method. In each user-specific assertion 
 folder, the authentication assertion appears before the user assertion, 
 and the other user-specific assertions are organized according to their 
 individual organization and dependency rules (see <a HREF="About_Policy_Assertions.htm">About 
 Policy Assertions</a>). </p>

<p>&nbsp;</p>

<p><img src="SecPoliExcerpt.gif" x-maintain-ratio="TRUE" style="border: none;
				margin-left: 0px;
				margin-right: 0px;
				margin-top: 10px;
				margin-bottom: 4px;
				width: 690px;
				height: 133px;
				float: none;
				border-style: none;
				border-style: none;" width="690" height="133" border="0"></p>

<h6 class="space" style="margin-bottom: 10pt;
			color: #7c7c7c;
			margin-top: 0pt;">A Policy with Multiple Identities</h6>

<p>&nbsp;</p>

<p>All assertions — except for the Sign Response Element, Encrypt Response 
 Element, XSL Transformation, and Validate XML Schema assertions — must 
 be placed before the message routing assertion in a policy. Since assertions 
 in the policy tree are processed from top to bottom, the location of the 
 routing assertion at the end of the policy ensures that the other assertion 
 requirements are met before the request is routed to the protected Web 
 service or XML application. </p>

<p>&nbsp;</p>

<p>Additional organization, configuration, and dependency information is 
 provided by the Policy Validation Messages window during the policy construction 
 process and in the individual assertion instructions. See <a HREF="About_Policy_Assertions.htm">About 
 Policy Assertions</a> and <a href="Configure_Edit_Policies.htm">Configure 
 and Edit Policies</a> for more information. </p>

<p>&nbsp;</p>

<h4>Next Topic: </h4>

<p><a HREF="Configure_Edit_Policies.htm">Configure and Edit Policies</a></p>

<p>&nbsp;</p>

</body>

</html>
