#//---------Assertion descriptions -----------------\\
# The file contains Assertion descriptions (short, long)
# in the java.util.MessageFormat fgormat.
# The keys are constructed from the assertion class, and
# the 'short'/'long' suffix are appended to it.
#
# note:
# if you modify any of the message parameters ( {0}, {1} etc..) 
# make sure the apropriate code changes are applied too 
# If you wish to modify the message text  but not the parameters, 
# including parameter position you may  do so here.
#---------------------------------------------------------

# 'All' composite Assertion description
#
com.l7tech.policy.assertion.composite.AllAssertion.short = \
All children must evaluate to true
com.l7tech.policy.assertion.composite.AllAssertion.long = \
All child assertions must evaluate to true

# 'OneOrMore' composite Assertion description
#
com.l7tech.policy.assertion.composite.OneOrMoreAssertion.short = \
At least one child must evaluate to true
com.l7tech.policy.assertion.composite.OneOrMoreAssertion.long = \
At least one child assertion must evaluate to true

# SSL Assertion description
#
com.l7tech.policy.assertion.SslAssertion.short = \
Requires SSL transport
com.l7tech.policy.assertion.SslAssertion.long = \
The incoming request must use SSL transport

# HTTP Basic authentication
#
com.l7tech.policy.assertion.credential.http.HttpBasic.short = \
HTTP Basic authentication method
com.l7tech.policy.assertion.credential.http.HttpBasic.long = \
The requestor must provide credentials using the HTTP BASIC authentication method

# HTTP Digest authentication
#
com.l7tech.policy.assertion.credential.http.HttpDigest.short = \
HTTP Digest authentication method
com.l7tech.policy.assertion.credential.http.HttpDigest.long = \
The requestor must provide credentials using the HTTP DIGEST authentication method


# HTTP Client certificate authentication
#
com.l7tech.policy.assertion.credential.http.HttpClientCert.short = \
HTTP client certificate
com.l7tech.policy.assertion.credential.http.HttpClientCert.long = \
The requestor must use a client cert as part of the SSL handshake

# WSS Replay protection
#
com.l7tech.policy.assertion.xmlsec.RequestWssReplayProtection.short = WSS Replay Protection
com.l7tech.policy.assertion.xmlsec.RequestWssReplayProtection.long = \
The soap request must contain a WSS signed timestamp with a fresh and unique Created date

# WSS Signature
#
com.l7tech.policy.assertion.xmlsec.RequestWssX509Cert.short = WSS Signature
com.l7tech.policy.assertion.xmlsec.RequestWssX509Cert.long = \
The soap request must contain a WSS signature with an X509 BinarySecurityToken

# WSS Basic authentication
#
com.l7tech.policy.assertion.credential.wss.WssBasic.short = \
WSS Basic authentication method
com.l7tech.policy.assertion.credential.wss.WssBasic.long = \
The requestor must provide BASIC credentials in a WSS Username Token

# WSS Digest authentication
#
com.l7tech.policy.assertion.credential.wss.WssDigest.short = \
WSS Digest authentication method
com.l7tech.policy.assertion.credential.wss.WssDigest.long = \
The requestor must provide credentials using the WSS DIGEST authentication method

#SOAP Request with Attachment
#
com.l7tech.policy.assertion.RequestSwAAssertion.short = \
SOAP Request with Attachment
com.l7tech.policy.assertion.RequestSwAAssertion.long = \
The request must fulfill the specified attachment requirements.

# Specific user/identity
#
com.l7tech.policy.assertion.identity.SpecificUser.short = \
Identity is {0}
com.l7tech.policy.assertion.identity.SpecificUser.long = \
The requestor must be specified identity {0} to access the protected service

# Member of group
#
com.l7tech.policy.assertion.identity.MemberOfGroup.short = \
Group membership {0}
com.l7tech.policy.assertion.identity.MemberOfGroup.long = \
The requestor must be member of group {0} to access the protected service

# Routing assertions, HTTP and JMS
#
com.l7tech.policy.assertion.HttpRoutingAssertion.short = \
Route to {0}
com.l7tech.policy.assertion.HttpRoutingAssertion.long = \
The incoming message will be routed to protected service at {0}

com.l7tech.policy.assertion.JmsRoutingAssertion.short = \
Route to JMS Queue {0}
com.l7tech.policy.assertion.JmsRoutingAssertion.long = \
The incoming message will be routed to protected service at JMS Queue {0}

# Request WSS Integrity
#
com.l7tech.policy.assertion.xmlsec.RequestWssIntegrity.short = \
XML Request Integrity
com.l7tech.policy.assertion.xmlsec.RequestWssIntegrity.long = \
Requestor must sign an element of the SOAP request

# Request WSS Confidentiality
#
com.l7tech.policy.assertion.xmlsec.RequestWssConfidentiality.short = \
XML Request Confidentiality
com.l7tech.policy.assertion.xmlsec.RequestWssConfidentiality.long = \
Requestor must encrypt an element of the SOAP request

# Response WSS Integrity
#
com.l7tech.policy.assertion.xmlsec.ResponseWssIntegrity.short = \
XML Response Integrity
com.l7tech.policy.assertion.xmlsec.ResponseWssIntegrity.long = \
Server will sign an element of the SOAP response

# Response WSS Confidentiality
#
com.l7tech.policy.assertion.xmlsec.ResponseWssConfidentiality.short = \
XML Response Confidentiality
com.l7tech.policy.assertion.xmlsec.ResponseWssConfidentiality.long = \
Server will encrypt an element of the SOAP response

# SAML security
#
com.l7tech.policy.assertion.xmlsec.SamlSecurity.short = \
SAML Security properties
com.l7tech.policy.assertion.xmlsec.SamlSecurity.long = \
Gateway checks for the SAML security properties

# True assertion - anonymous access
#
com.l7tech.policy.assertion.TrueAssertion.short = Anonymous access
com.l7tech.policy.assertion.TrueAssertion.long = Anonymous access

# Request XPath assertion
#
com.l7tech.policy.assertion.RequestXpathAssertion.short = \
Request XPath pattern
com.l7tech.policy.assertion.RequestXpathAssertion.long = \
The request must match a specified XPath pattern

# Response XPath assertion
#
com.l7tech.policy.assertion.ResponseXpathAssertion.short = \
Response XPath pattern
com.l7tech.policy.assertion.ResponseXpathAssertion.long = \
The response must match a specified XPath pattern

# Schema Validation assertion
#
com.l7tech.policy.assertion.xml.SchemaValidation.short = \
Validate xml schema
com.l7tech.policy.assertion.xml.SchemaValidation.long = \
Validate soap messages' bodies with specified xml schema.

# XSL Transformation Assertion
#
com.l7tech.policy.assertion.xml.XslTransformation.short = \
XSL Transformation
com.l7tech.policy.assertion.xml.XslTransformation.long = \
XSL Transformation of a SOAP message.

# Custom Assertion
#
com.l7tech.policy.assertion.CustomAssertionHolder.short = \
Custom Assertion
com.l7tech.policy.assertion.CustomAssertionHolder.long = \
Custom Assertion

# Audit assertion
#
#
com.l7tech.policy.assertion.AuditAssertion.short = \
Audit Assertion
com.l7tech.policy.assertion.AuditAssertion.long = \
Audit Assertion

# TimeRange assertion
#
com.l7tech.policy.assertion.TimeRange.short = \
Time/Day Availability
com.l7tech.policy.assertion.TimeRange.long = \
Time/Day Availability

# RemoteIpRange assertion
#
com.l7tech.policy.assertion.RemoteIpRange.short = \
IP Address Range
com.l7tech.policy.assertion.RemoteIpRange.long = \
Restrict Requestor's IP Address Range

# SecureConversation assertion
#
com.l7tech.policy.assertion.xmlsec.SecureConversation.short = \
Secure Conversation
com.l7tech.policy.assertion.xmlsec.SecureConversation.long = \
Requires Requests and Responses to use WS Secure Conversation protocol

# Unknown assertion
#
com.l7tech.policy.assertion.UnknownAssertion.short = \
Unresolved assertion type
com.l7tech.policy.assertion.UnknownAssertion.long = \
This assertion type does not exist on this system

