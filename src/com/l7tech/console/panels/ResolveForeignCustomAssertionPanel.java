package com.l7tech.console.panels;

import com.l7tech.policy.exporter.CustomAssertionReference;

import javax.swing.*;
import java.awt.*;

/**
 * This panel allows an administrator to take the appropriate action when a policy
 * being imported contains custom assertions whose type is not installed on the
 * target system.
 *
 * Because custom assertions cannot be installed through the ssm, the
 * supported actions are simply "ignore" or "delete".
 *
 * <p/>
 * <br/><br/>
 * LAYER 7 TECHNOLOGIES, INC<br/>
 * User: flascell<br/>
 * Date: Jul 28, 2004<br/>
 * $Id$<br/>
 */
public class ResolveForeignCustomAssertionPanel extends WizardStepPanel {
    private CustomAssertionReference foreignRef;
    private JPanel mainPanel;
    private JTextField assNameTxtField;
    private JRadioButton removeRadio;
    private JRadioButton ignoreRadio;

    public ResolveForeignCustomAssertionPanel(WizardStepPanel next, CustomAssertionReference foreignRef) {
        super(next);
        this.foreignRef = foreignRef;
        initialize();
    }

    public String getDescription() {
        return getStepLabel();
    }

    public String getStepLabel() {
        return "Unknown assertion type " + foreignRef.getCustomAssertionName();
    }

    public boolean canFinish() {
        if (hasNextPanel()) return false;
        return true;
    }

    private void initialize() {
        setLayout(new BorderLayout());
        add(mainPanel);

        // show details (not much there)
        assNameTxtField.setText(foreignRef.getCustomAssertionName());

        // group the radios
        ButtonGroup actionGroup = new ButtonGroup();
        actionGroup.add(removeRadio);
        actionGroup.add(ignoreRadio);
        removeRadio.setSelected(true);
    }

    public boolean onNextButton() {
        // collect actions details and store in the reference for resolution
        if (removeRadio.isSelected()) {
            foreignRef.setLocalizeDelete();
        } else if (ignoreRadio.isSelected()) {
            foreignRef.setLocalizeIgnore();
        }
        return true;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     */
    private void $$$setupUI$$$() {
        final JPanel _1;
        _1 = new JPanel();
        mainPanel = _1;
        _1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel _2;
        _2 = new JPanel();
        _2.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        _1.add(_2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        _2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Missing Custom Assertion Type Details"));
        final JLabel _3;
        _3 = new JLabel();
        _3.setText("Custom Assertion Type");
        _2.add(_3, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 8, 0, 0, 0, null, null, null));
        final JTextField _4;
        _4 = new JTextField();
        assNameTxtField = _4;
        _4.setEditable(false);
        _2.add(_4, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, 8, 1, 6, 0, null, new Dimension(150, -1), null));
        final JPanel _5;
        _5 = new JPanel();
        _5.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        _1.add(_5, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        _5.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Action"));
        final JRadioButton _6;
        _6 = new JRadioButton();
        removeRadio = _6;
        _6.setText("Remove custom assertions of unknown type");
        _5.add(_6, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final JRadioButton _7;
        _7 = new JRadioButton();
        ignoreRadio = _7;
        _7.setText("Import erroneous assertions as-is");
        _5.add(_7, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, 8, 0, 3, 0, null, null, null));
    }

}
