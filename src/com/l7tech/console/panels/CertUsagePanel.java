package com.l7tech.console.panels;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.l7tech.common.security.TrustedCert;

import javax.swing.*;
import java.awt.*;
import java.util.ResourceBundle;
import java.util.Locale;
import java.util.logging.Logger;

/**
 * <p> Copyright (C) 2004 Layer 7 Technologies Inc.</p>
 * <p/>
 * $Id$
 */
public class CertUsagePanel extends WizardStepPanel{
    private JPanel mainPanel;
    private JPanel certUsagePane;
    private JCheckBox signingCertOutboundSSLConnCheckBox;
    private JCheckBox signingSAMLTokenCheckBox;
    private JCheckBox signingClientCertCheckBox;
    private JCheckBox outboundSSLConnCheckBox;
    private static Logger logger = Logger.getLogger(CertUsagePanel.class.getName());
    private static ResourceBundle resources = ResourceBundle.getBundle("com.l7tech.console.resources.CertificateDialog", Locale.getDefault());

    public CertUsagePanel(WizardStepPanel next) {
        super(next);
        initialize();
    }

    private void initialize() {
        setLayout(new BorderLayout());
        add(mainPanel);
    }

    /**
     * Store the values of all fields on the panel to the wizard object which is a used for
     * keeping all the modified values. The wizard object will be used for providing the
     * updated values when updating the server.
     *
     * @param settings the object representing wizard panel state
     */
    public void storeSettings(Object settings) {

        if (settings != null) {

            if (settings instanceof TrustedCert) {
                TrustedCert tc = (TrustedCert) settings;

                tc.setTrustedForSigningClientCerts(signingClientCertCheckBox.isSelected());
                tc.setTrustedForSigningSamlTokens(signingSAMLTokenCheckBox.isSelected());
                tc.setTrustedForSigningServerCerts(signingCertOutboundSSLConnCheckBox.isSelected());
                tc.setTrustedForSsl(outboundSSLConnCheckBox.isSelected());
            }
        }
    }

    /**
     * @return the wizard step label
     */
    public String getStepLabel() {
        return "Specify Certificate Usage";
    }

     /**
     * Test whether the step is finished and it is safe to finish the wizard.
     *
     * @return true if the panel is valid, false otherwis
     */
     public boolean canFinish() {
        return true;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     */
    private void $$$setupUI$$$() {
        final JPanel _1;
        _1 = new JPanel();
        mainPanel = _1;
        _1.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel _2;
        _2 = new JPanel();
        certUsagePane = _2;
        _2.setLayout(new GridLayoutManager(5, 1, new Insets(0, 0, 0, 0), -1, -1));
        _1.add(_2, new GridConstraints(0, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        final JCheckBox _3;
        _3 = new JCheckBox();
        outboundSSLConnCheckBox = _3;
        _3.setText("Outbound SSL Connections ");
        _2.add(_3, new GridConstraints(1, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final JCheckBox _4;
        _4 = new JCheckBox();
        signingClientCertCheckBox = _4;
        _4.setText("Signing Client Certificates");
        _2.add(_4, new GridConstraints(2, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final JCheckBox _5;
        _5 = new JCheckBox();
        signingSAMLTokenCheckBox = _5;
        _5.setText("Signing SAML Tokens");
        _2.add(_5, new GridConstraints(3, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final JCheckBox _6;
        _6 = new JCheckBox();
        signingCertOutboundSSLConnCheckBox = _6;
        _6.setText("Signing Certificates for Outbound SSL Connections");
        _2.add(_6, new GridConstraints(4, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final JPanel _7;
        _7 = new JPanel();
        _7.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        _2.add(_7, new GridConstraints(0, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        final JLabel _8;
        _8 = new JLabel();
        _8.setText("The certificate is intented for:");
        _7.add(_8, new GridConstraints(1, 0, 1, 1, 8, 0, 0, 0, null, null, null));
        final com.intellij.uiDesigner.core.Spacer _9;
        _9 = new com.intellij.uiDesigner.core.Spacer();
        _7.add(_9, new GridConstraints(2, 0, 1, 1, 0, 2, 1, 6, new Dimension(-1, 10), new Dimension(-1, 10), null));
        final com.intellij.uiDesigner.core.Spacer _10;
        _10 = new com.intellij.uiDesigner.core.Spacer();
        _7.add(_10, new GridConstraints(0, 0, 1, 1, 0, 2, 1, 6, new Dimension(-1, 10), null, null));
        final com.intellij.uiDesigner.core.Spacer _11;
        _11 = new com.intellij.uiDesigner.core.Spacer();
        _1.add(_11, new GridConstraints(1, 0, 1, 1, 0, 2, 1, 6, null, null, null));
    }

}