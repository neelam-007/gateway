package com.l7tech.console.panels;

import com.l7tech.identity.fed.FederatedIdentityProviderConfig;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 * <p> Copyright (C) 2004 Layer 7 Technologies Inc.</p>
 * <p> @author fpang </p>
 * $Id$
 */
public class FederatedIPSamlPanel extends IdentityProviderStepPanel {
    private JPanel mainPanel;
    private JCheckBox emailCheckbox;
    private JCheckBox x509SubjectNameCheckbox;
    private JCheckBox domainNameCheckbox;
    private JCheckBox senderVouchesCheckbox;
    private JCheckBox holderOfKeyCheckbox;
    private JTextField nameQualifierTextField;
    private JTextField domainNameTextField;

    /**
     * Constructor
     * @param next  The next step panel
     */
    public FederatedIPSamlPanel(WizardStepPanel next) {
        super(next);
        initComponents();
    }

    /**
     *  Initialize the components
     */
    private void initComponents() {
        setLayout(new BorderLayout());
        add(mainPanel, BorderLayout.CENTER);

        domainNameCheckbox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {
                 domainNameTextField.setEnabled(domainNameCheckbox.isSelected());
            }
        });
    }

    public String getDescription() {
        return "Select or enter the settings of SAML credentital source that can be handled by this identity provider, " +
                "such as the name idenetitier format, confirmation method etc.";
    }

    /**
     * Test whether the step is finished and it is safe to finish the wizard.
     *
     * @return true if the panel is valid, false otherwis
     */
    public boolean canFinish() {
        return false;
    }

    /**
     * @return the wizard step label
     */
    public String getStepLabel() {
        return "Configure SAML Credential Source";
    }

    /**
     * Populate the configuration data from the wizard input object to the visual components of the panel.
     *
     * @param settings The current value of configuration items in the wizard input object.
     * @throws IllegalArgumentException if the data provided by the wizard are not valid.
     */
    public void readSettings(Object settings) throws IllegalArgumentException {
        if (!(settings instanceof FederatedIdentityProviderConfig))
            throw new IllegalArgumentException("The settings object must be FederatedIdentityProviderConfig");

        FederatedIdentityProviderConfig iProviderConfig = (FederatedIdentityProviderConfig) settings;

        emailCheckbox.setSelected(iProviderConfig.getSamlConfig().isNameIdEmail());
        x509SubjectNameCheckbox.setSelected(iProviderConfig.getSamlConfig().isNameIdX509SubjectName());
        holderOfKeyCheckbox.setSelected(iProviderConfig.getSamlConfig().isSubjConfHolderOfKey());
        domainNameCheckbox.setSelected(iProviderConfig.getSamlConfig().isNameIdWindowsDomain());
        senderVouchesCheckbox.setSelected(iProviderConfig.getSamlConfig().isSubjConfSenderVouches());

        if (iProviderConfig.getOid() != -1) {
            nameQualifierTextField.setText(iProviderConfig.getSamlConfig().getNameQualifier());
            domainNameTextField.setText(iProviderConfig.getSamlConfig().getNameIdWindowsDomainName());
        }
        
        domainNameTextField.setEnabled(domainNameCheckbox.isSelected());

    }


    /**
     * Store the values of all fields on the panel to the wizard object which is a used for
     * keeping all the modified values. The wizard object will be used for providing the
     * updated values when updating the server.
     *
     * @param settings the object representing wizard panel state
     */
    public void storeSettings(Object settings) {
        if (!(settings instanceof FederatedIdentityProviderConfig))
            throw new IllegalArgumentException("The settings object must be FederatedIdentityProviderConfig");

        FederatedIdentityProviderConfig iProviderConfig = (FederatedIdentityProviderConfig) settings;

        iProviderConfig.getSamlConfig().setNameIdEmail(emailCheckbox.isSelected());
        iProviderConfig.getSamlConfig().setNameIdX509SubjectName(x509SubjectNameCheckbox.isSelected());
        iProviderConfig.getSamlConfig().setSubjConfHolderOfKey(holderOfKeyCheckbox.isSelected());
        iProviderConfig.getSamlConfig().setSubjConfSenderVouches(senderVouchesCheckbox.isSelected());
        iProviderConfig.getSamlConfig().setNameQualifier(nameQualifierTextField.getText().trim());
        iProviderConfig.getSamlConfig().setNameIdWindowsDomain(domainNameCheckbox.isSelected());
        iProviderConfig.getSamlConfig().setNameIdWindowsDomainName(domainNameTextField.getText().trim());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     */
    private void $$$setupUI$$$() {
        final JPanel _1;
        _1 = new JPanel();
        mainPanel = _1;
        _1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel _2;
        _2 = new JPanel();
        _2.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        _1.add(_2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        final JPanel _3;
        _3 = new JPanel();
        _3.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        _2.add(_3, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        final JPanel _4;
        _4 = new JPanel();
        _4.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(5, 5, 5, 5), -1, -1));
        _3.add(_4, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 0, 3, 3, 0, null, null, null));
        _4.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "  Name Identifier  "));
        final JPanel _5;
        _5 = new JPanel();
        _5.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        _4.add(_5, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        final JLabel _6;
        _6 = new JLabel();
        _6.setText("Name Qualifier:");
        _5.add(_6, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 8, 0, 0, 0, null, null, null));
        final JPanel _7;
        _7 = new JPanel();
        _7.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        _5.add(_7, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, 0, 3, 3, 3, null, null, null));
        final JCheckBox _8;
        _8 = new JCheckBox();
        emailCheckbox = _8;
        _8.setText("Email");
        _7.add(_8, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final JPanel _9;
        _9 = new JPanel();
        _9.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        _7.add(_9, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        final JCheckBox _10;
        _10 = new JCheckBox();
        domainNameCheckbox = _10;
        _10.setText("Windows Qualified Domain Name");
        _9.add(_10, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final JPanel _11;
        _11 = new JPanel();
        _11.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        _9.add(_11, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        final com.intellij.uiDesigner.core.Spacer _12;
        _12 = new com.intellij.uiDesigner.core.Spacer();
        _11.add(_12, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 0, 1, 0, 1, new Dimension(20, -1), new Dimension(20, -1), new Dimension(20, -1)));
        final JPanel _13;
        _13 = new JPanel();
        _13.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 10, 0), -1, -1));
        _11.add(_13, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, 0, 3, 3, 3, null, null, null));
        final JTextField _14;
        _14 = new JTextField();
        domainNameTextField = _14;
        _13.add(_14, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 8, 1, 6, 0, null, new Dimension(150, -1), null));
        final com.intellij.uiDesigner.core.Spacer _15;
        _15 = new com.intellij.uiDesigner.core.Spacer();
        _9.add(_15, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, 0, 1, 0, 1, new Dimension(30, -1), new Dimension(30, -1), new Dimension(30, -1)));
        final JCheckBox _16;
        _16 = new JCheckBox();
        x509SubjectNameCheckbox = _16;
        _16.setText("X.509 Subject Name");
        _7.add(_16, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final JPanel _17;
        _17 = new JPanel();
        _17.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        _5.add(_17, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        final com.intellij.uiDesigner.core.Spacer _18;
        _18 = new com.intellij.uiDesigner.core.Spacer();
        _17.add(_18, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, 0, 2, 1, 6, null, null, null));
        final JLabel _19;
        _19 = new JLabel();
        _19.setText("Format:");
        _17.add(_19, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 8, 0, 0, 0, null, null, null));
        final JTextField _20;
        _20 = new JTextField();
        nameQualifierTextField = _20;
        _20.setToolTipText("The secuirity or administrative domain that qualifies the name of the subject");
        _5.add(_20, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, 8, 1, 6, 0, null, new Dimension(150, -1), null));
        final JPanel _21;
        _21 = new JPanel();
        _21.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        _3.add(_21, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, 0, 3, 3, 3, null, null, null));
        _21.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "  Confirmation Method  "));
        final JPanel _22;
        _22 = new JPanel();
        _22.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        _21.add(_22, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 0, 3, 0, 0, null, null, null));
        final JCheckBox _23;
        _23 = new JCheckBox();
        holderOfKeyCheckbox = _23;
        _23.setText("Holder of Key");
        _22.add(_23, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final JCheckBox _24;
        _24 = new JCheckBox();
        senderVouchesCheckbox = _24;
        _24.setText("Sender Vouches");
        _22.add(_24, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, 8, 0, 3, 0, null, null, null));
        final com.intellij.uiDesigner.core.Spacer _25;
        _25 = new com.intellij.uiDesigner.core.Spacer();
        _22.add(_25, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, 0, 2, 1, 6, null, null, null));
        final JPanel _26;
        _26 = new JPanel();
        _26.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(5, 0, 10, 0), -1, -1));
        _2.add(_26, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 0, 3, 3, 3, null, null, null));
        final JLabel _27;
        _27 = new JLabel();
        _27.setText("SAML Credential Source Configuration");
        _26.add(_27, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, 8, 0, 0, 0, null, null, null));
        final com.intellij.uiDesigner.core.Spacer _28;
        _28 = new com.intellij.uiDesigner.core.Spacer();
        _2.add(_28, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, 0, 2, 1, 6, null, null, null));
    }


}
