package com.l7tech.console.panels;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

/**
 * The WSDL create overview panel. This is a support class for the
 * <i>WsdlCreateOverview.form</i>
 * <p/>
 *
 * @author <a href="mailto:emarceta@layer7-tech.com">Emil Marceta</a>
 * @version 1.0
 */
public class WsdlCreateOverviewPanel extends WizardStepPanel {
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR call it in your
     * code!
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout( new GridLayoutManager( 1, 1, new Insets( 0, 0, 0, 0 ), -1, -1 ) );
        final JPanel panel1 = new JPanel();
        panel1.setLayout( new GridLayoutManager( 14, 4, new Insets( 0, 0, 0, 0 ), -1, -1 ) );
        mainPanel.add( panel1, new GridConstraints( 0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null ) );
        panelHeader = new JLabel();
        panelHeader.setText( "Overview" );
        panel1.add( panelHeader, new GridConstraints( 1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null ) );
        final Spacer spacer1 = new Spacer();
        panel1.add( spacer1, new GridConstraints( 12, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null ) );
        final JLabel label1 = new JLabel();
        label1.setText( "You will be asked to provide:" );
        panel1.add( label1, new GridConstraints( 4, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null ) );
        final JLabel label2 = new JLabel();
        label2.setText( "This Wizard will guide you through the steps required to generate WSDL for a new Web service." );
        panel1.add( label2, new GridConstraints( 2, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null ) );
        final JLabel label3 = new JLabel();
        label3.setText( "- A service definition" );
        panel1.add( label3, new GridConstraints( 6, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null ) );
        final JLabel label4 = new JLabel();
        label4.setText( "- The operations, operations messages, and message parts involved in the Web service" );
        panel1.add( label4, new GridConstraints( 8, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null ) );
        final Spacer spacer2 = new Spacer();
        panel1.add( spacer2, new GridConstraints( 7, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, new Dimension( -1, 10 ), new Dimension( -1, 10 ), new Dimension( -1, 10 ) ) );
        final JLabel label5 = new JLabel();
        label5.setText( "" );
        panel1.add( label5, new GridConstraints( 11, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null ) );
        final Spacer spacer3 = new Spacer();
        panel1.add( spacer3, new GridConstraints( 9, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, new Dimension( -1, 10 ), new Dimension( -1, 10 ), new Dimension( -1, 10 ) ) );
        final Spacer spacer4 = new Spacer();
        panel1.add( spacer4, new GridConstraints( 5, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, new Dimension( -1, 10 ), new Dimension( -1, 10 ), new Dimension( -1, 10 ) ) );
        final Spacer spacer5 = new Spacer();
        panel1.add( spacer5, new GridConstraints( 3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, new Dimension( -1, 10 ), new Dimension( -1, 10 ), new Dimension( -1, 10 ) ) );
        final Spacer spacer6 = new Spacer();
        panel1.add( spacer6, new GridConstraints( 1, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null ) );
        final JLabel label6 = new JLabel();
        label6.setText( "- A service endpoint address and the SOAPAction operation attributes." );
        panel1.add( label6, new GridConstraints( 10, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null ) );
    }

    private JPanel mainPanel;
    private JLabel panelHeader;


    public WsdlCreateOverviewPanel(WizardStepPanel next) {
        super(next);
        setLayout(new BorderLayout());
        /** Set content pane */
        add(mainPanel, BorderLayout.CENTER);
        panelHeader.setFont(new java.awt.Font("Dialog", 1, 16));
    }

    /**
     * @return the wizard step description
     */
    public String getDescription() {
        return "";
    }

    /**
     * Test whether the step is finished and it is safe to proceed to the next
     * one.
     * If the step is valid, the "Next" (or "Finish") button will be enabled.
     *
     * @return true if the panel is valid, false otherwis
     */
    public boolean isValid() {
        return true;
    }

    /**
     * Test whether the step is finished and it is safe to finish the wizard.
     *
     * @return true if the panel is valid, false otherwis
     */

    public boolean canFinish() {
        return false;
    }

    /**
     * @return the wizard step label
     */
    public String getStepLabel() {
        return "Overview";
    }

}
