<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation= "http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <bean name="systemProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="properties">
            <!-- default properties if not overridden by system properties -->
            <map>
                <entry key="com.l7tech.ems.httpPort" value="8182"/>
                <entry key="com.l7tech.ems.httpsPort" value="8545"/>
            </map>
        </property>
    </bean>

    <bean name="restComponent" class="com.l7tech.server.ems.LifecycleSpringComponent">
        <property name="defaultTarget" ref="restRouter"/>
        <property name="server" ref="restServer"/>
        <property name="client" value="CLAP"/> <!-- Protocol.CLAP, for loading resources from class path -->
    </bean>
    <bean name="restServer" class="org.restlet.ext.spring.SpringServer" depends-on="systemProperties">
        <constructor-arg index="0" value="http"/>
        <constructor-arg index="1" value="${com.l7tech.ems.httpPort}"/>
    </bean>
    <bean name="restComponent.context" class="org.springframework.beans.factory.config.PropertyPathFactoryBean"/>
    <bean name="restApplication" class="org.restlet.Application">
        <constructor-arg ref="restComponent.context"/>
    </bean>

    <!-- Restlet context of top level Application.  Not to be confused with the Spring ApplicationContext. -->
    <bean name="restApplication.context" class="org.springframework.beans.factory.config.PropertyPathFactoryBean" />

    <!-- Exposes the resources/images classpath subdirectory as a Restlet Directory.  Ignores query vars when resolving files. -->
    <bean name="restImagesDirectory" class="com.l7tech.server.ems.StripQueryFilter">
        <constructor-arg index="0" ref="restApplication.context"/>
        <constructor-arg index="1">
            <bean class="org.restlet.Directory">
                <constructor-arg index="0" type="org.restlet.Context" ref="restApplication.context"/>
                <constructor-arg index="1" type="org.restlet.data.Reference">
                    <bean class="org.restlet.data.LocalReference">
                        <constructor-arg type="java.lang.String"
                                         value="clap://thread/com/l7tech/server/ems/resources/images"/>
                    </bean>
                </constructor-arg>

                <!-- content negotation won't work with classpath directories since they aren't listable -->
                <property name="negotiateContent" value="false"/>
            </bean>
        </constructor-arg>
    </bean>

    <!-- Exposes templates in the temlates subdirectory as a Restlet Directory. -->
    <bean name="restTemplatesDirectory" class="com.l7tech.server.ems.TemplateFinder">
        <constructor-arg index="0" ref="restApplication.context"/>
        <constructor-arg index="1" ref="templateDataModel" />
        <constructor-arg index="2" value="/com/l7tech/server/ems/resources/templates"/>
        <constructor-arg index="3">
            <list>
                <value>Setup.html</value>
                <value>Gateways.html</value>
                <value>Audits.html</value>
                <value>Backup.html</value>
                <value>Help.html</value>
                <value>Login.html</value>
                <value>Logs.html</value>
                <value>Notifications.html</value>
                <value>PolicyApproval.html</value>
                <value>PolicyMapping.html</value>
                <value>PolicyMigration.html</value>
                <value>PolicySubmission.html</value>
                <value>Reports.html</value>
                <value>Restore.html</value>
                <value>Setup.html</value>
                <value>SystemSettings.html</value>
                <value>TestWebService.html</value>
                <value>UserSettings.html</value>
            </list>
        </constructor-arg>
    </bean>

    <!-- Resource instantiated for requests to the home page. -->
    <bean name="restEmsHomePageResource" class="com.l7tech.server.ems.EmsHomePage" scope="prototype">
        <constructor-arg ref="licenseManager"/>
    </bean>

    <bean name="restEmsHomePageRoute" class="org.restlet.Route">
        <constructor-arg index="0" type="org.restlet.Router" ref="restRouter"/>
        <constructor-arg index="1" type="java.lang.String" value=""/>
        <constructor-arg index="2" type="org.restlet.Restlet">
            <bean class="org.restlet.ext.spring.SpringFinder">
                <lookup-method name="createResource" bean="restEmsHomePageResource" />
            </bean>
        </constructor-arg>
    </bean>

    <!-- Handle posts from Setup.html -->
    <bean name="restSetupResource" class="com.l7tech.server.ems.SetupResource" scope="prototype">
        <constructor-arg ref="setupManager"/>
    </bean>

    <!-- Provide REST access to the current EMS license. -->
    <bean name="restLicenseResource" class="com.l7tech.server.ems.LicenseResource" scope="prototype">
        <constructor-arg ref="licenseManager"/>
    </bean>


    <!-- The root level URI router for the EMS application. -->
    <bean name="restRouter" class="org.restlet.ext.spring.SpringRouter">
        <property name="attachments">
            <map>
                <entry key="/setup"><bean class="org.restlet.ext.spring.SpringFinder"><lookup-method name="createResource" bean="restSetupResource"/></bean></entry>
                <entry key="/license"><bean class="org.restlet.ext.spring.SpringFinder"><lookup-method name="createResource" bean="restLicenseResource"/></bean></entry>
                <entry key="/images/" value-ref="restImagesDirectory"/>
                <entry key="/ems/{templateName}" value-ref="restTemplatesDirectory"/>
            </map>
        </property>
        <property name="defaultRoute" ref="restEmsHomePageRoute" />
    </bean>

</beans>