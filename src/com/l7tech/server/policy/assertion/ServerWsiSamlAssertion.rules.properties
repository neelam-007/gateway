#
# Rules for WS-I SAML Token Profile
#
# Author: $Author$
# Version: $Revision$
#
# Each rule has a description and an XPath expression with a boolean result.
#

#
# Namespaces
#
Namespace.soap = http://schemas.xmlsoap.org/soap/envelope/
Namespace.wsse = http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
Namespace.wsu = http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
Namespace.ds = http://www.w3.org/2000/09/xmldsig#
Namespace.saml = urn:oasis:names:tc:SAML:1.0:assertion
Namespace.samlp = urn:oasis:names:tc:SAML:1.0:protocol
Namespace.xsi = http://www.w3.org/2001/XMLSchema-instance

#
# General Rules (Checks for invalid namespace, etc)
#
E0001.rule = Invalid SOAP namespace
E0001.path = 0=count(//*[namespace-uri()='http://www.w3.org/2001/06/soap-envelope' or namespace-uri()='http://www.w3.org/2001/09/soap-envelope' or namespace-uri()='http://www.w3.org/2003/05/soap-envelope' or namespace-uri()='urn:schemas-xmlsoap-org:soap.v1'])
E0002.rule = Invalid WS-Security Namespace
E0002.path = 0=count(//*[namespace-uri()='http://schemas.xmlsoap.org/ws/2002/12/secext' or namespace-uri()='http://schemas.xmlsoap.org/ws/2002/07/secext' or namespace-uri()='http://schemas.xmlsoap.org/ws/2002/xx/secext' or namespace-uri()='http://schemas.xmlsoap.org/ws/2003/06/secext' or namespace-uri()='http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd'])
E0003.rule = Invalid Utility namespace
E0003.path = 0=count(//*[namespace-uri()='http://schemas.xmlsoap.org/ws/2002/07/utility' or namespace-uri()='http://schemas.xmlsoap.org/ws/2003/06/utility'])
E0004.rule = Invalid SAML Assertion namespace
E0004.path = 0=count(//*[namespace-uri()='urn:oasis:names:tc:SAML:2.0:assertion'])
E0005.rule = SAML Assertion should be in a Security header
E0005.path = count(//saml:Assertion)=count(/soap:Envelope/soap:Header/wsse:Security/saml:Assertion)
E0006.rule = SAML Assertion should be version 1.1
E0006.path = 0=count(//saml:Assertion[@MajorVersion!='1' or @MinorVersion!='1'])

#
# WS-I SAML Token Profile Rules (for 2006/01/20 DRAFT)
#
R6601.rule = Any SAML_SC_KEY_INFO MUST NOT contain a reference to a SAML_TOKEN.
R6601.path = 0=count(//saml:SubjectConfirmation/ds:KeyInfo/wsse:SecurityTokenReference[wsse:KeyIdentifer|wsse:Reference]/*[@ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAML' or @ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID'])
# cannot be implemented as a single XPath (for X saml tokens)
#R6602.rule = Any STR_KEY_IDENTIFIER that references a INTERNAL_SAML_TOKEN MUST include a ValueType.
#R6602.path = 0=1
# cannot be implemented as a single XPath (for X saml tokens)
#R6603.rule = Any STR_KEY_IDENTIFIER ValueType attribute that references SAML_TOKEN MUST have a value of "http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID"
#R6603.path = 0=1
R6604.rule = Any STR_KEY_IDENTIFIER that references a SAML_TOKEN MUST NOT include an EncodingType attribute.
R6604.path = 0=count(//wsse:SecurityTokenReference/wsse:KeyIdentifier[@ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID' and @EncodingType])
R6605.rule = Any STR_KEY_IDENTIFIER that references a SAML_TOKEN MUST have a value encoded as an xs:string.
R6605.path = 0=count(//wsse:SecurityTokenReference/wsse:KeyIdentifier[@ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID']/* | //wsse:SecurityTokenReference/wsse:KeyIdentifier[@ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID' and @xsi:type and not(substring(@xsi:type, string-length(@xsi:type) - string-length('string') + 1, string-length('string')) = 'string')] | //wsse:SecurityTokenReference/wsse:KeyIdentifier[@ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID' and string-length(normalize-space(string(text()))) = 0])
# cannot be implemented as a single XPath (for X saml tokens)
#R6606.rule = Any STR_KEY_IDENTIFIER that references an EXTERNAL_SAML_TOKEN MUST contain a SAML_AUTHORITY_BINDING.
#R6606.path = 0=1
R6607.rule = Any AuthorityKind attribute of a SAML_AUTHORITY_BINDING MUST have a value of samlp:AssertionIdReference.
R6607.path = 0=count(//saml:AuthorityBinding[not(substring(@AuthorityKind, string-length(@AuthorityKind) - string-length('AssertionIdReference') + 1, string-length('AssertionIdReference')) = 'AssertionIdReference')])
# cannot be implemented as a single XPath (for X saml tokens)
#R6608.rule = Any SECURITY_TOKEN_REFERENCE that references an INTERNAL_SAML_TOKEN MUST NOT contain a SAML_AUTHORITY_BINDING.
#R6608.path = 0=1
#R6609.rule = Any STR_KEY_IDENTIFIER that references a EXTERNAL_SAML_TOKEN MUST include a ValueType attribute.
#R6609.path = 0=1