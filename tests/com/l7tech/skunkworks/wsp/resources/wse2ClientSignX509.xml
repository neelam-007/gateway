<!-- LYONSM: This is a policy expression that calls for a message to be signed using the specified certificate. -->
<!-- LYONSM: This policy expression would typically be combined with other expressions to produce
             the Effective Policy for a message.  The combination is a simple wrapping of all of them in a wsp:All. -->
<!-- LYONSM: Note that MS is using their own idiosyncratic wse URI for the wse:Timestamp header requirement. -->
<wsp:Policy wsu:Id="Sign-X.509"
    xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
    xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"
    xmlns:wssp="http://schemas.xmlsoap.org/ws/2002/12/secext"
    xmlns:wse="http://schemas.microsoft.com/wse/2003/06/Policy"
    xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing">
    <!-- MS: MessagePredicate is used to require headers. This assertion should be used along with
             the Integrity assertion when the presence of the signed element is required.
             NOTE: this assertion does not do anything for enforcement (send-side) policy.-->
    <!-- LYONSM: I haven't figured out what is meant by "enforcement (send-side) policy", above.
                 It could be that our use of the terms "application" vs. "enforcement" differs.
                 The wizard that created this was going through the "Secure a client" path though. -->
    <wsp:MessagePredicate wsp:Usage="wsp:Required" Dialect="http://schemas.xmlsoap.org/2002/12/wsse#part">wsp:Body() wsp:Header(wsa:To) wsp:Header(wsa:Action) wsp:Header(wsa:MessageID) wse:Timestamp()</wsp:MessagePredicate>
    <!-- MS: The Integrity assertion is used to ensure that the message is signed with X.509.
             Many Web services will also use the token for authorization, such as by using the
             <wse:Role> claim or specific X.509 claims. -->
    <wssp:Integrity wsp:Usage="wsp:Required">
        <wssp:TokenInfo>
            <!-- MS: The SecurityToken element within the TokenInfo element describes which token type must be used for Signing. -->
            <wssp:SecurityToken>
                <wssp:TokenType>http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3</wssp:TokenType>
                <wssp:TokenIssuer>CN=root.data.l7tech.com</wssp:TokenIssuer>
                <wssp:Claims>
                    <!-- MS: By specifying the SubjectName claim, the policy system can look for a certificate with this
                             subject name in the certificate store indicated in the application's configuration,
                             such as LocalMachine or CurrentUser.

                             The WSE X.509 Certificate Tool is useful for finding the correct values for this field. -->
                    <wssp:SubjectName MatchType="wssp:Exact">CN=mike</wssp:SubjectName>
                    <wssp:X509Extension OID="2.5.29.14" MatchType="wssp:Exact">w10+mFSGarGpEoTubJyKk1pl5Js=</wssp:X509Extension>
                </wssp:Claims>
            </wssp:SecurityToken>
        </wssp:TokenInfo>
        <wssp:MessageParts Dialect="http://schemas.xmlsoap.org/2002/12/wsse#part">wsp:Body() wsp:Header(wsa:Action) wsp:Header(wsa:FaultTo) wsp:Header(wsa:From) wsp:Header(wsa:MessageID) wsp:Header(wsa:RelatesTo) wsp:Header(wsa:ReplyTo) wsp:Header(wsa:To) wse:Timestamp()</wssp:MessageParts>
    </wssp:Integrity>
</wsp:Policy>