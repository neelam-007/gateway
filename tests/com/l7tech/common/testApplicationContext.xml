<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC  "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
    <!-- test bean definitions -->


<beans>
<!--
     * singleton using the factory method. This is transitional, as it is referencef from
     * too many places.
     -->
    <bean id="serverConfig" class="com.l7tech.server.ServerConfig" factory-method="getInstance"/>

    <!-- server side identity provider factory (same as the prod)-->
    <bean id="identityProviderFactory" class="com.l7tech.server.identity.IdentityProviderFactory">
    </bean>

    <!-- test identity configuration manager -->
    <bean id="identityProviderConfigManager" class="com.l7tech.server.identity.TestIdentityProviderConfigManager">
        <property name="identityProviderFactory">
            <ref bean='identityProviderFactory'/>
        </property>
    </bean>

<!--
        Test Identity Provider
    -->
    <bean id="testIdentityProvider" factory-bean="identityProviderFactory" factory-method="createProviderInstance"
          class="com.l7tech.identity.TestIdentityProvider" singleton="false">
    </bean>

    <!--  test service admin -->
    <bean id="serviceAdmin" class="com.l7tech.service.ServiceAdminStub">
        <property name="policyValidator">
            <ref bean="policyValidator"/>
        </property>
        <property name="serviceManager">
            <ref bean="serviceManager"/>
        </property>
    </bean>

    <!-- server side service manager -->
    <bean id="serviceCache" class="com.l7tech.server.service.ServiceCache">
        <constructor-arg>
            <ref bean="policyFactory"/>
        </constructor-arg>
    </bean>

    <!-- server side service manager -->
    <bean id="serviceManager" class="com.l7tech.service.ServiceManagerStub">
        <property name="serviceCache">
            <ref bean='serviceCache'/>
        </property>
    </bean>

    <!-- test config uses the policy validator without persistence -->
    <bean id="policyValidator" class="com.l7tech.policy.validator.DefaultPolicyValidator">
    </bean>

    <!-- server side policy factory -->
    <bean id="policyFactory" class="com.l7tech.server.policy.ServerPolicyFactory">
    </bean>

    <!-- server side trusted cert manager -->
    <bean id="trustedCertManager" class="com.l7tech.server.identity.cert.TestTrustedCertManager">
    </bean>

    <!-- server side client cert manager -->
    <bean id="clientCertManager" class="com.l7tech.server.identity.cert.ClientCertManagerStub">
    </bean>
    <!-- stub audit record manager -->
    <bean id="auditRecordManager" class="com.l7tech.server.audit.AuditRecordManagerStub">
    </bean>

    <!-- server side HTTP routing client trust manager -->
    <bean id="httpRoutingAssertionTrustManager" class="com.l7tech.server.transport.http.SslClientTrustManager">
        <property name="trustedCertManager">
            <ref bean="trustedCertManager"/>
        </property>
    </bean>

    <!-- create test keys -->
    <bean id="testKeys" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod">
            <value>com.l7tech.common.security.Keys.createTestSsgKeystoreProperties</value>
        </property>
    </bean>

    <!-- ssl config  -->
    <bean id="keystore" class="com.l7tech.common.util.KeystoreUtils" depends-on="testKeys">
        <constructor-arg>
            <ref bean="serverConfig"/>
        </constructor-arg>
    </bean>

    <bean id="sslKeystoreType" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref local='keystore'/>
        </property>
        <property name="targetMethod">
            <value>getKeyStoreType</value>
        </property>
    </bean>

    <bean id="sslKeystorePassword" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref local='keystore'/>
        </property>
        <property name="targetMethod">
            <value>getSslKeystorePasswd</value>
        </property>
    </bean>

    <bean id="sslKeystoreFile" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref local='keystore'/>
        </property>
        <property name="targetMethod">
            <value>getSslKeystorePath</value>
        </property>
    </bean>

    <bean id="sslKeystoreCertificate" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref local='keystore'/>
        </property>
        <property name="targetMethod">
            <value>getSslCert</value>
        </property>
    </bean>

    <bean id="sslKeystorePrivateKey" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref local='keystore'/>
        </property>
        <property name="targetMethod">
            <value>getSSLPrivateKey</value>
        </property>
    </bean>

    <!-- server Wss Decorator -->
    <bean id="wssDecorator" class="com.l7tech.common.security.xml.decorator.WssDecoratorImpl">
    </bean>
    <!-- server side Event Manager target -->
    <bean id="eventManager" class="com.l7tech.server.event.EventManager">
    </bean>

    <!-- server Message Processor -->
    <bean id="messageProcessor" class="com.l7tech.server.MessageProcessor">
        <constructor-arg>
            <ref bean="serviceManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="wssDecorator"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="sslKeystorePrivateKey"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="sslKeystoreCertificate"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="eventManager"/>
        </constructor-arg>
    </bean>

    <!-- server side policy filter manager  -->
    <bean id="policyFilterManager" class="com.l7tech.server.policy.filter.FilterManager">
        <constructor-arg>
            <ref bean="identityProviderConfigManager"/>
        </constructor-arg>
        <constructor-arg>
            <list>
                <value>com.l7tech.server.policy.filter.IdentityRule</value>
                <value>com.l7tech.server.policy.filter.HideUnsupportedClientAssertions</value>
            </list>
        </constructor-arg>
    </bean>


    <bean id="auditContext" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces"><value>com.l7tech.server.audit.AuditContext</value></property>
        <property name="targetSource">
            <ref local="auditContextTargetSource"/>
        </property>
    </bean>

    <bean id="auditContextTarget" class="com.l7tech.server.audit.AuditContextStub" singleton="false">
    </bean>

    <bean id="auditContextTargetSource" class="org.springframework.aop.target.ThreadLocalTargetSource">
        <property name="targetBeanName">
            <value>auditContextTarget</value>
        </property>
    </bean>
</beans>