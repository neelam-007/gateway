<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC  "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

    <!--
    The Admin Services Context contains the definitions that describe and export The Admin Services.
    Things such as RMI exports, SSL admin configuration are deifned here.
 -->


<beans>
    <!-- the internal rmi/ssl trust failue handler that allows connection to self -->
    <bean id="internalSslTrustFailureHandler"
          class="com.l7tech.spring.remoting.rmi.ssl.CertificateTrustedTrustFailureHandler">
        <constructor-arg>
            <ref bean="sslKeystoreCertificate"/>
        </constructor-arg>
    </bean>

    <!--
    set the internal trust failurte handler. This is required when the ssl connection to self is attempted,
    such as when connection to the local rmi registry.
    -->
    <bean id="setInternalTrustFailureHandler"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod">
            <value>com.l7tech.spring.remoting.rmi.ssl.SslRMIClientSocketFactory.setTrustFailureHandler</value>
        </property>
        <property name="arguments">
            <list>
                <ref local="internalSslTrustFailureHandler"/>
            </list>
        </property>
    </bean>
    <!-- Handler for SSL RMI Client certificates -->
    <bean id="setNode2NodeInternalTrustFailureHandler"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod">
            <value>com.l7tech.spring.remoting.rmi.ssl.SslRMIServerSocketFactory.setTrustFailureHandler</value>
        </property>
        <property name="arguments">
            <list>
                <ref local="internalSslTrustFailureHandler"/>
            </list>
        </property>
    </bean>

    <!-- admin services, Rmi socket factories -->
    <bean id="rmiServerSocketFactory" class="com.l7tech.spring.remoting.rmi.ssl.SslRMIServerSocketFactory"
          depends-on="setNode2NodeInternalTrustFailureHandler">
        <property name="keyStoreType">
            <ref bean='sslKeystoreType'/>
        </property>
        <property name="keyStoreFile">
            <ref bean='sslKeystoreFile'/>
        </property>
        <property name="keyStorePassword">
            <ref bean='sslKeystorePassword'/>
        </property>
    </bean>

    <bean id="rmiClientSocketFactory" class="com.l7tech.spring.remoting.rmi.ssl.SslRMIClientSocketFactory"
          depends-on="setKeyManagerFactoryForNodeToNodeRMI, setInternalTrustFailureHandler, setNode2NodeInternalTrustFailureHandler">
        <property name="host">
            <!-- Extract host name from this nodes cluster node info -->
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetObject">
                    <!-- Get this nodes info -->
                    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                        <property name="targetObject">
                            <ref bean="clusterInfoManager"/>
                        </property>
                        <property name="targetMethod">
                            <value>getSelfNodeInf</value>
                        </property>
                    </bean>
                </property>
                <property name="targetMethod">
                    <value>getAddress</value>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="adminSessionInvocationFactory" class="com.l7tech.spring.remoting.rmi.AdminSessionInvocationFactory"/>

    <bean id="rmiRegistryInit" class="com.l7tech.spring.remoting.rmi.RmiRegistryInitializer">
        <property name="port">
            <value>2124</value>
        </property>
        <property name="clientSocketFactory">
            <ref bean="rmiClientSocketFactory"/>
        </property>
        <property name="serverSocketFactory">
            <ref bean="rmiServerSocketFactory"/>
        </property>
    </bean>

    <bean id="rmiRegistry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean" depends-on="rmiRegistryInit">
        <property name="port">
            <value>2124</value>
        </property>
        <property name="clientSocketFactory">
            <ref bean="rmiClientSocketFactory"/>
        </property>
        <property name="serverSocketFactory">
            <ref bean="rmiServerSocketFactory"/>
        </property>
    </bean>

    <!--    shared export properties, inherited with parent= -->
    <bean id="sharedClusterExportProperties" abstract="true">
        <property name="registry">
            <ref bean="rmiRegistry"/>
        </property>
        <property name="servicePort">
            <value>2124</value>
        </property>
        <property name="clientSocketFactory">
            <ref bean="rmiClientSocketFactory"/>
        </property>
        <property name="serverSocketFactory">
            <ref bean="rmiServerSocketFactory"/>
        </property>
        <property name="stubRemoteInvocationFactory">
            <ref bean="adminSessionInvocationFactory"/>
        </property>
        <property name="remoteInvocationExecutor">
            <bean class="com.l7tech.spring.remoting.rmi.ClusterRemoteInvocationExecutor">
                <constructor-arg>
                    <ref bean="clusterInfoManager"/>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!-- cluster login exporter -->
    <bean class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean" parent="sharedClusterExportProperties">
        <property name="serviceName">
            <value>ClusterLogin</value>
        </property>
        <property name="service">
            <ref bean="clusterLogin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.cluster.ClusterLogin</value>
        </property>
    </bean>
    <!-- cluster login servant -->
    <bean id="clusterLogin" class="com.l7tech.cluster.rmi.ClusterLoginImpl"/>

    <!-- cluster context exporter -->
    <bean id="clusterContextRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedClusterExportProperties">
        <property name="service">
            <ref bean="clusterContext"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.cluster.ClusterContext</value>
        </property>
        <property name="singleton">
            <value>false</value>
        </property>
    </bean>
    <!-- cluster context servant -->
    <bean id="clusterContext" class="com.l7tech.cluster.rmi.ClusterContextImpl">
        <constructor-arg>
            <ref local="clusterLogRemote"/>
        </constructor-arg>
    </bean>

    <!-- cluster audit exporter -->
    <bean id="clusterLogRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedClusterExportProperties">
        <property name="service">
            <ref bean="auditAdmin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.logging.GenericLogAdmin</value>
        </property>
    </bean>

    <!-- admin session tracker -->
    <bean id="adminSessionManager" class="com.l7tech.server.admin.AdminSessionManager" singleton="true"/>

    <!--==============================================================-
    Administration bean servants
    -===============================================================-->

    <!-- admin login servant -->
    <bean id="adminLogin" class="com.l7tech.admin.rmi.AdminLoginImpl">
        <property name="identityProviderConfigManager" ref="identityProviderConfigManager"/>
        <property name="identityProviderFactory" ref='identityProviderFactory'/>
        <property name="serverCertificate" ref ="sslKeystoreCertificate"/>
        <property name="adminSessionManager" ref="adminSessionManager"/>
        <property name="roleManager" ref="roleManager"/>
    </bean>

    <!-- identity admin servant -->
    <bean id="identityAdmin_UNSECURED" class="com.l7tech.server.identity.IdentityAdminImpl">
        <constructor-arg>
            <ref bean="licenseManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="roleManager"/>
        </constructor-arg>
        <property name="identityProviderConfigManager">
            <ref bean="identityProviderConfigManager"/>
        </property>
        <property name="clientCertManager">
            <ref bean="clientCertManager"/>
        </property>
        <property name="identityProviderFactory">
            <ref bean='identityProviderFactory'/>
        </property>
    </bean>

    <!-- audit admin servant -->
    <bean id="auditAdmin_UNSECURED" class="com.l7tech.server.audit.AuditAdminImpl">
        <property name="auditRecordManager">
            <ref bean="auditRecordManager"/>
        </property>
        <property name="logRecordManager">
            <ref bean="logRecordManager"/>
        </property>
        <property name="keystore">
            <ref bean="keystore"/>
        </property>
        <property name="serverConfig">
            <ref bean="serverConfig"/>
        </property>
    </bean>

    <!-- service admin servant -->
    <bean id="serviceAdmin_UNSECURED" class="com.l7tech.server.service.ServiceAdminImpl">
        <constructor-arg ref="licenseManager"/>
        <constructor-arg ref="registryPublicationManager"/>
        <constructor-arg ref="uddiAgentFactory"/>
        <constructor-arg ref="serviceManager"/>
        <constructor-arg ref="policyValidator"/>
        <constructor-arg ref="sampleMessageManager"/>
        <constructor-arg ref="counterIDManager"/>
        <constructor-arg ref="gatewaySslClientTrustManager"/>
        <constructor-arg ref="roleManager"/>
    </bean>

    <!-- schema admin servant -->
    <bean id="schemaAdmin_UNSECURED" class="com.l7tech.server.communityschemas.SchemaAdminImpl">
        <constructor-arg>
            <ref bean="licenseManager"/>
        </constructor-arg>
        <property name="schemaEntryManager">
            <ref bean="schemaEntryManager"/>
        </property>
    </bean>

    <!-- jms admin servant -->
    <bean id="jmsAdmin_UNSECURED" class="com.l7tech.server.transport.jms.JmsAdminImpl">
        <constructor-arg>
            <ref bean="licenseManager"/>
        </constructor-arg>
        <property name="jmsConnectionManager">
            <ref bean="jmsConnectionManager"/>
        </property>
        <property name="jmsEndpointManager">
            <ref bean="jmsEndpointManager"/>
        </property>
    </bean>

    <!-- trusted cert admin servant -->
    <bean id="trustedCertAdmin_UNSECURED" class="com.l7tech.server.TrustedCertAdminImpl">
        <constructor-arg>
            <ref bean="trustedCertManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="rootCertificate"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="sslKeystoreCertificate"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="licenseManager"/>
        </constructor-arg>
    </bean>

    <!-- custom assertions admin servant -->
    <bean id="customAssertionsAdmin" class="com.l7tech.policy.assertion.ext.rmi.CustomAssertionsRegistrarImpl">
        <constructor-arg>
            <ref bean="licenseManager"/>
        </constructor-arg>
        <property name="delegate">
            <ref bean="customAssertionRegistrar"/>
        </property>
    </bean>

    <!-- kerberos admin servant -->
    <bean id="kerberosAdmin" class="com.l7tech.common.security.kerberos.KerberosAdminImpl"/>

    <!-- trusted cert admin servant -->
    <bean id="clusterStatusAdmin_UNSECURED" class="com.l7tech.cluster.ClusterStatusAdminImp">
        <constructor-arg>
            <ref bean="clusterInfoManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="serviceUsageManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="clusterPropertyManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="licenseManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="serviceMetricsManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="serverConfig"/>
        </constructor-arg>        
    </bean>

    <!-- RBAC admin impl -->
    <bean id="rbacAdmin_UNSECURED" class="com.l7tech.server.security.rbac.RbacAdminImpl">
        <constructor-arg>
            <ref bean="roleManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="licenseManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="entityFinder"/>
        </constructor-arg>
    </bean>
</beans>
