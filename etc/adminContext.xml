<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC  "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

    <!--
    The Admin Services Context contains the definitions that describe and export The Admin Services.
    Things such as RMI exports, SSL admin configuration are deifned here.
 -->


<beans>
    <!-- the internal rmi/ssl trust failue handler that allows connection to self -->
    <bean id="internalSslTrustFailureHandler"
          class="com.l7tech.spring.remoting.rmi.ssl.CertificateTrustedTrustFailureHandler">
        <constructor-arg>
            <ref bean="sslKeystoreCertificate"/>
        </constructor-arg>
    </bean>

<!--
    set the internal trust failurte handler. This is required when the ssl connection to self is attempted,
    such as when connection to the local rmi registry.
    -->
    <bean id="setInternalTrustFailureHandler"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod">
            <value>com.l7tech.spring.remoting.rmi.ssl.SslRMIClientSocketFactory.setTrustFailureHandler</value>
        </property>
        <property name="arguments">
            <list>
                <ref local="internalSslTrustFailureHandler"/>
            </list>
        </property>
    </bean>


    <!-- admin services, Rmi socket factories -->
    <bean id="rmiServerSocketFactory" class="com.l7tech.spring.remoting.rmi.ssl.SslRMIServerSocketFactory">
        <property name="keyStoreType">
            <ref bean='sslKeystoreType'/>
        </property>
        <property name="keyStoreFile">
            <ref bean='sslKeystoreFile'/>
        </property>
        <property name="keyStorePassword">
            <ref bean='sslKeystorePassword'/>
        </property>
    </bean>

    <bean id="rmiClientSocketFactory" class="com.l7tech.spring.remoting.rmi.ssl.SslRMIClientSocketFactory"
          depends-on="setInternalTrustFailureHandler"/>

    <bean id="adminSessionInvocationFactory" class="com.l7tech.spring.remoting.rmi.AdminSessionInvocationFactory"/>

    <!-- server side admin authorizer -->
    <bean id="authorizer" class="com.l7tech.server.identity.internal.InternalIdentityProviderAuthorizer">
        <property name="identityProviderConfigManager">
            <ref bean="identityProviderConfigManager"/>
        </property>
    </bean>

    <!-- server side admin access manager -->
    <bean id="accessManager" class="com.l7tech.admin.AccessManager">
        <constructor-arg>
            <ref bean="authorizer"/>
        </constructor-arg>
    </bean>


<!--
        configure the codebase for class downloading
      -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod">
            <value>com.l7tech.spring.remoting.rmi.codebase.Config.configureCodeBase</value>
        </property>
    </bean>

<!--
    set the internal trust failurte handler. This is required when the ssl connection to self is attempted,
    such as when connection to the local rmi registry.
    -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod">
            <value>com.l7tech.spring.remoting.rmi.codebase.ClassSetAnnotation.setIncludePatterns</value>
        </property>
        <property name="arguments">
            <list>
                <value>**</value>
            </list>
        </property>
    </bean>

    <!--    shared export properties, inherited with parent= -->
    <bean id="sharedExportProperties">
        <property name="registryPort">
            <value>2124</value>
        </property>
        <property name="servicePort">
            <value>2124</value>
        </property>
        <property name="clientSocketFactory">
            <ref bean="rmiClientSocketFactory"/>
        </property>
        <property name="serverSocketFactory">
            <ref bean="rmiServerSocketFactory"/>
        </property>
        <property name="registryClientSocketFactory">
            <ref bean="rmiClientSocketFactory"/>
        </property>
        <property name="registryServerSocketFactory">
            <ref bean="rmiServerSocketFactory"/>
        </property>
        <property name="stubRemoteInvocationFactory">
            <ref bean="adminSessionInvocationFactory"/>
        </property>
    </bean>

    <!--    admin login exporter -->
    <bean class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean" parent="sharedExportProperties">
        <property name="serviceName">
            <value>AdminLogin</value>
        </property>
        <property name="service">
            <ref bean="adminLogin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.admin.AdminLogin</value>
        </property>
    </bean>
    <!--    admin login servant -->
    <bean id="adminLogin" class="com.l7tech.admin.rmi.AdminLoginImpl">
        <property name="identityProviderConfigManager">
            <ref bean="identityProviderConfigManager"/>
        </property>
        <property name="identityProviderFactory">
            <ref bean='identityProviderFactory'/>
        </property>
        <property name="serverCertificate">
            <ref bean="sslKeystoreCertificate"/>
        </property>
    </bean>

    <!--    admin context exporter -->
    <bean id="adminContextRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedExportProperties">
        <property name="service">
            <ref bean="adminContext"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.admin.AdminContext</value>
        </property>
        <property name="singleton">
            <value>false</value>
        </property>
    </bean>
    <!--    admin context servant -->
    <bean id="adminContext" class="com.l7tech.admin.rmi.AdminContextImpl">
        <constructor-arg>
            <ref bean="identityAdminRemote"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="auditAdminRemote"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="serviceAdminRemote"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="jmsAdminRemote"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="trustedCertAdminRemote"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="customAssertionsRegistrarRemote"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="clusterStatusAdminRemote"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="schemaAdminRemote"/>
        </constructor-arg>
    </bean>

    <!--    identity admin exporter -->
    <bean id="identityAdminRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedExportProperties">
        <property name="service">
            <ref bean="identityAdmin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.identity.IdentityAdmin</value>
        </property>
    </bean>
    <!--    identity admin servant -->
    <bean id="identityAdmin" class="com.l7tech.server.identity.IdentityAdminImpl">
        <constructor-arg>
            <ref bean="accessManager"/>
        </constructor-arg>
        <property name="identityProviderConfigManager">
            <ref bean="identityProviderConfigManager"/>
        </property>
        <property name="clientCertManager">
            <ref bean="clientCertManager"/>
        </property>
        <property name="identityProviderFactory">
            <ref bean='identityProviderFactory'/>
        </property>
        <property name="authorizer">
            <ref bean='authorizer'/>
        </property>
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>

    <!--    audit admin exporter -->
    <bean id="auditAdminRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedExportProperties">
        <property name="service">
            <ref bean="auditAdmin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.common.audit.AuditAdmin</value>
        </property>
    </bean>
    <!--    audit admin servant -->
    <bean id="auditAdmin" class="com.l7tech.server.audit.AuditAdminImpl">
        <constructor-arg>
            <ref bean="accessManager"/>
        </constructor-arg>
        <property name="auditRecordManager">
            <ref bean="auditRecordManager"/>
        </property>
        <property name="keystore">
            <ref bean="keystore"/>
        </property>
        <property name="serverConfig">
            <ref bean="serverConfig"/>
        </property>
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>

    <!--    service admin exporter -->
    <bean id="serviceAdminRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedExportProperties">
        <property name="service">
            <ref bean="serviceAdmin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.service.ServiceAdmin</value>
        </property>
    </bean>

    <!--    service admin servant -->
    <bean id="serviceAdmin" class="com.l7tech.server.service.ServiceAdminImpl">
        <constructor-arg>
            <ref bean="accessManager"/>
        </constructor-arg>
        <property name="serviceManager">
            <ref bean="serviceManager"/>
        </property>
        <property name="policyValidator">
            <ref bean="policyValidator"/>
        </property>
        <property name="serverConfig">
            <ref bean="serverConfig"/>
        </property>
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
        <property name="sampleMessageManager">
            <ref bean="sampleMessageManager"/>
        </property>
    </bean>

    <bean id="schemaAdminRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedExportProperties">
        <property name="service">
            <ref bean="schemaAdmin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.common.xml.schema.SchemaAdmin</value>
        </property>
    </bean>

    <bean id="schemaAdmin" class="com.l7tech.server.communityschemas.SchemaAdminImpl">
        <constructor-arg>
            <ref bean="accessManager"/>
        </constructor-arg>
        <property name="communitySchemaManager">
            <ref bean="communitySchemaManager"/>
        </property>
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>

    <!--    jms admin exporter -->
    <bean id="jmsAdminRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedExportProperties">
        <property name="service">
            <ref bean="jmsAdmin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.common.transport.jms.JmsAdmin</value>
        </property>
    </bean>

    <!--    jms admin servant -->
    <bean id="jmsAdmin" class="com.l7tech.server.transport.jms.JmsAdminImpl">
        <constructor-arg>
            <ref bean="accessManager"/>
        </constructor-arg>
        <property name="jmsConnectionManager">
            <ref bean="jmsConnectionManager"/>
        </property>
        <property name="jmsEndpointManager">
            <ref bean="jmsEndpointManager"/>
        </property>
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>

    <!--    trusted cert admin exporter -->
    <bean id="trustedCertAdminRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedExportProperties">
        <property name="service">
            <ref bean="trustedCertAdmin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.common.security.TrustedCertAdmin</value>
        </property>
    </bean>
    <!--    trusted cert admin servant -->
    <bean id="trustedCertAdmin" class="com.l7tech.server.TrustedCertAdminImpl">
        <constructor-arg>
            <ref bean="trustedCertManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="rootCertificate"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="accessManager"/>
        </constructor-arg>
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>

    <!--    trusted cert admin exporter -->
    <bean id="customAssertionsRegistrarRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedExportProperties">
        <property name="service">
            <ref bean="customAssertionsAdmin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.policy.assertion.ext.CustomAssertionsRegistrar</value>
        </property>
    </bean>
    <!--    trusted cert admin servant -->
    <bean id="customAssertionsAdmin" class="com.l7tech.policy.assertion.ext.rmi.CustomAssertionsRegistrarImpl">
        <property name="delegate">
            <ref bean="customAssertionRegistrar"/>
        </property>
    </bean>

    <!--    cluster status cert admin exporter -->
    <bean id="clusterStatusAdminRemote" class="com.l7tech.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedExportProperties">
        <property name="service">
            <ref bean="clusterStatusAdmin"/>
        </property>
        <property name="serviceInterface">
            <value>com.l7tech.cluster.ClusterStatusAdmin</value>
        </property>
    </bean>
    <!--    trusted cert admin servant -->
    <bean id="clusterStatusAdmin" class="com.l7tech.cluster.ClusterStatusAdminImp">
        <constructor-arg>
            <ref bean="clusterInfoManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="serviceUsageManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="clusterPropertyManager"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="accessManager"/>
        </constructor-arg>
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>
</beans>
