import net.jini.core.discovery.LookupLocator;
import net.jini.discovery.LookupLocatorDiscovery;
import net.jini.constraint.BasicMethodConstraints;
import net.jini.core.entry.Entry;
import net.jini.core.constraint.ClientAuthentication;
import net.jini.core.constraint.InvocationConstraint;
import net.jini.core.constraint.InvocationConstraints;
import net.jini.security.BasicProxyPreparer;
import net.jini.lookup.entry.*;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.tcp.TcpServerEndpoint;
import com.l7tech.remote.jini.lookup.AccessILFactory;
import com.l7tech.remote.jini.security.AuthenticateClientSubjectChecker;
import com.sun.jini.config.ConfigUtil;
import com.sun.jini.discovery.DiscoveryProtocolVersion;
import net.jini.core.constraint.Delegation;
import net.jini.jeri.ssl.SslServerEndpoint;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.discovery.ConstrainableLookupLocator;
import net.jini.discovery.LookupDiscoveryManager;
import net.jini.discovery.DiscoveryGroupManagement;
import java.security.Permission;
import java.net.InetAddress;

/* Items used in multiple blocks below */
shared.entries {
    
    private serviceLookupConstraints = 
	new BasicMethodConstraints( 
	    new InvocationConstraints( 
		new InvocationConstraint[] { 
		    DiscoveryProtocolVersion.TWO
		    }, 
		null));

}//end shared.entries

com.sun.jini.reggie{

  initialMemberGroups = new String[] { "servicesv1.l7tech.com"};
  // internal Jini locator and discovery name
  hostName = System.getProperty("jini.server.hostname", ConfigUtil.getHostName());
  // change the hostName to the clients see this host

  // unicastDiscoverySubjectChecker = new AuthenticateClientSubjectChecker();

  /* Exporter for the server proxy */
  serverExporter = 
    new BasicJeriExporter(SslServerEndpoint.getInstance(hostName, 2124),
                          new AccessILFactory(), false, false);
  discoveryConstraints =                            
	    shared.entries.serviceLookupConstraints;
        
  initialLookupLocators = new LookupLocator[] {
    new ConstrainableLookupLocator("jini://localhost",
        shared.entries.serviceLookupConstraints
     )
  };
}


com.l7tech.remote.jini.export.RemoteService {

  /* Exporter for the server proxy */
  serverExporter =
        new BasicJeriExporter(
        SslServerEndpoint.getInstance(com.sun.jini.reggie.hostName, 2124),
        new BasicILFactory(), false, false);
                                     
  private groups = new String[] { "services.l7tech.com" };
  // discoveryManager = new LookupDiscovery(groups, this);

  discoveryManager =
  new LookupLocatorDiscovery(
    new LookupLocator[] {
        new ConstrainableLookupLocator(
            ConfigUtil.concat(new Object[] {"jini://",
            com.sun.jini.reggie.hostName}),
            shared.entries.serviceLookupConstraints)
    });

    static registrarPreparer =
        new BasicProxyPreparer(false,
                               shared.entries.serviceLookupConstraints,
                               new Permission[] {});

}

