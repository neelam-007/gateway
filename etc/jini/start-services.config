import java.io.File;
import com.sun.jini.start.ServiceDescriptor;
import com.l7tech.remote.jini.export.DefaultServiceDescriptor;
import com.sun.jini.config.ConfigUtil;

/**
 * Server side service configurations that are started by the service starter
 *
 */
com.sun.jini.start {
		
   static private codebase = "http://celo:8080/classserver/";
   private static classpath = null;

    private static policy = "services.policy";
    private static config = "services.config";

    static reggieService =
        new DefaultServiceDescriptor(
	        codebase, policy, classpath,
	        "com.sun.jini.reggie.TransientRegistrarImpl",
	        config);

	static logService =
	        new DefaultServiceDescriptor(
	        codebase, policy, classpath,
	        "com.l7tech.logging.rmi.LogAdminImpl",
	        config);

    static identityService =
	        new DefaultServiceDescriptor(
	        codebase, policy, classpath,
	        "com.l7tech.identity.rmi.IdentityAdminImpl",
	        config);

	 static publishServicesService =
	        new DefaultServiceDescriptor(
	        codebase, policy, classpath,
	        "com.l7tech.service.rmi.ServiceAdminImpl",
	        config);

	 static clusterStatusService =
	        new DefaultServiceDescriptor(
	        codebase, policy, classpath,
	        "com.l7tech.cluster.ClusterStatusAdminImp",
	        config);

	static jmsService =
            new DefaultServiceDescriptor(
		    codebase, policy, classpath,
		    "com.l7tech.server.transport.jms.JmsAdminImpl",
		    config);

	static customAssertionsService =
            new DefaultServiceDescriptor(
		    codebase, policy, classpath,
		    "com.l7tech.policy.assertion.ext.CustomAssertionsRegistrarImpl",
		    config);

    static serviceDescriptors =
        new ServiceDescriptor[] {
	        reggieService, logService, identityService, publishServicesService, clusterStatusService, jmsService, customAssertionsService
	        };
}
