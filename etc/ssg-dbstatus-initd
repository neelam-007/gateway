#!/bin/bash
#
# Startup script for the Secure Span Gateway Server db status support
#
# chkconfig: - 98 02
# description: Layer7's Secure Span Gateway Db Status Daemon
# processname: replication-statusd

# Source function library.
. /etc/rc.d/init.d/functions
. /etc/profile.d/ssgruntimedefs.sh
pid=$$;
local_mysql="/usr/bin/mysql"
mysql_pass="/root/.my.cnf"

slave_status() {
     echo "show slave status \G" | ${local_mysql} -h localhost -u root -p${mysql_pass} > /tmp/$pid.outfile
     return $?
}

# Returns:
#
#*************************** 1. row ***************************
#             Slave_IO_State: Waiting for master to send event
#                Master_Host: 192.168.1.95
#                Master_User: repl
#                Master_Port: 3306
#              Connect_Retry: 60
#            Master_Log_File: spinach2-bin.000002
#        Read_Master_Log_Pos: 30677258
#             Relay_Log_File: spinach1-relay-bin.000002
#              Relay_Log_Pos: 6009568
#      Relay_Master_Log_File: spinach2-bin.000002
#           Slave_IO_Running: Yes
#          Slave_SQL_Running: Yes
#            Replicate_Do_DB:
#        Replicate_Ignore_DB:
#         Replicate_Do_Table:
#     Replicate_Ignore_Table:
#    Replicate_Wild_Do_Table:
#Replicate_Wild_Ignore_Table:
#                 Last_Errno: 0
#                 Last_Error:
#               Skip_Counter: 0
#        Exec_Master_Log_Pos: 30676636
#            Relay_Log_Space: 6009568
#            Until_Condition: None
#             Until_Log_File:
#              Until_Log_Pos: 0
#         Master_SSL_Allowed: No
#         Master_SSL_CA_File:
#         Master_SSL_CA_Path:
#            Master_SSL_Cert:
#          Master_SSL_Cipher:
#             Master_SSL_Key:
#      Seconds_Behind_Master: 0


replication_delay() {
	rep_delay=`grep "Seconds_Behind_Master" /tmp/$pid.outfile | cut -c 30-33`
	return rep_delay
}

slave_running() {
        io=`grep "Slave_IO_Running"  /tmp/$pid.outfile | cut -c 30-33`
        sql=`grep "Slave_SQL_Running"  /tmp/$pid.outfile | cut -c 30-33`
        if [ "${io}${sql}" -eq "YesYes" ]; then
		return 0
	else
		return 1
	fi
}
start() {
	# Will exit success on one of several conditions:
	# 1. local system's mysqld is not configured to run
	if [ `chkconfig mysqld | grep "3:off"` ]; then
		# oops, we're not supposed to be here
		return 0;
	fi
	
	# 2. mysqld is up but not configured to replicate
	# slave status shows nothing
	# 3. mysqld is up and replication is up to date, 
	#    possibly after several retries

	# Will exit failure on one of several conditions:
	# 4. mysqld is configured to run but is not running 
	#    after some number of retries
	# 5. mysqld is up but replication has failed after 
	#    some number of retries
	# Optional behaviour:
	# Exit failure will attempt to alert the user:
	# SNMP trap
	# Email message
	if [ slave_status ne 1 ]; then
		echo "mysql failure"
		exit 1;
	fi
	while [ replication_delay -gt 0 ]; do 
		echo "Waiting for replication to catch up"
		sleep $delay
	done
	

}
	
case "$1" in
  start)
	start "$2"
	;;
  stop)
	stop  "$2"
	;;
esac

exit $RETVAL
