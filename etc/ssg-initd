#!/bin/bash
#
# Startup script for the Secure Span Gateway Server
#
# chkconfig: - 99 01
# description: Layer7's Secure Span Gateway Daemon \
#	       secures and provides access for SOAP services
# processname: tomcat
# config: /ssg/tomcat

# Source function library.
. /etc/rc.d/init.d/functions
. /etc/profile.d/ssgruntimedefs.sh

if [ -z "$TOMCAT_HOME" ]; then 
	TOMCAT_HOME="/ssg/tomcat/"
fi

ssg="$TOMCAT_HOME/bin/catalina.sh"

ssguser="gateway"
prog="SSG"
tries=3
count=0
USER=`whoami`
partition_base="$SSG_HOME/etc/conf/partitions/"
partition_control="partitionControl.sh"

# handle 3 different cases:
# Run as root, run as a regular user, run as same user as ssguser.
# This script redirects STDOUT and STDERR to /dev/null as well as closing STDIN (<&-) so it can be detached from a
# terminal

start() {
	find_tomcat
	if [ -n "$pid" ] ; then
		echo "At least one SSG Partition is already running. Please stop and restart."
		exit
	fi
	find_partitions		
		
	for partition_dir in ${ALL_PARTITIONS}
	do
		echo -n $"Starting $prog (`basename ${partition_dir}`): "
		. $partition_base/$partition_dir/partition_defs.sh true ${PARTITION_COUNT}
		JAVA_OPTS="${JAVA_OPTS} ${partition_opts}"
		echo "java_opts for this partition = ${JAVA_OPTS}"
		if [ "$USER" = "root" ]; then
        		su - $ssguser -c "$partition_base/$partition_dir/$partition_control start" &>/dev/null <&-
        		RETVAL=$?
		elif [ "$USER" = "$ssguser" ]; then
			$partition_base/$partition_dir/$partition_control start &>/dev/null <&-
			RETVAL=$?
		else
			echo"Need to be root or $ssguser to run this script";
			exit
		fi	
        	echo
	done
        # [ $RETVAL = 0 ] && touch /var/lock/subsys/ssg
        return $RETVAL
}

stop() {
	find_tomcat;
	if [ -z "$pid" ] ; then
		echo "No SSG Partitions are Currently Running"
		return
	fi
	find_partitions
	for partition_dir in $ALL_PARTITIONS
	do
		echo -n $"Stopping $prog (`basename $partition_dir`): "
		if [ "$USER" = "root" ]; then
        		su - $ssguser -c "$partition_base/$partition_dir/$partition_control stop -force" > /dev/null 2>&1
        		RETVAL=$?
		elif [ "$USER" = "$ssguser" ]; then
			$partition_base/$partition_dir/$partition_control stop > /dev/null 2>&1
			RETVAL=$?
		else
			echo "Need to be root or $ssguser to run this script";
			exit
		fi
	done
	#after shutting down all the partitions, make sure they are all fully stopped
	if [ $RETVAL = 0 ]; then 
		sleep 7;
		find_tomcat;
		if [ -z "$pid" ] ; then
			echo "Success"
			return
		fi
		count=`expr $count + 1`
		if [ "$count" -gt "$tries" ]; then
			reallystop
			return
		fi  
		stop;
	
	else
		sleep 2;
		count=`expr $count + 1`
		if [ "$count" -gt "$tries" ]; then
			reallystop
			return
		fi  
		stop;
	fi 
	echo

	return $RETVAL
}

find_tomcat() {
	pid=`pidof ${JAVA_HOME}/bin/java`
}


find_partitions() {
	ALL_PARTITIONS=`ls ${SSG_HOME}/etc/conf/partitions/ | grep -v template_`
	PARTITION_COUNT=`echo ${ALL_PARTITIONS} | wc -l`
}

reallystop() {
	echo "Killing $pid"
	kill -9 $pid
}
# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	stop
        sleep 5
	start
	;;
esac

exit $RETVAL
