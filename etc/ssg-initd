#!/bin/bash
#
# Startup script for the Secure Span Gateway Server
#
# chkconfig: - 99 01
# description: Layer7's Secure Span Gateway Daemon \
#	       secures and provides access for SOAP services
# processname: tomcat
# config: /ssg/tomcat

# Source function library.
. /etc/rc.d/init.d/functions
. /etc/profile.d/ssgruntimedefs.sh

if [ -z "$TOMCAT_HOME" ]; then 
	TOMCAT_HOME="/ssg/tomcat/"
fi

ssg="$TOMCAT_HOME/bin/catalina.sh"

ssguser="gateway"
prog="SSG"
tries=3
count=0
USER=`whoami`
# The semantics of these two functions differ from the way apachectl does
# things -- attempting to start while running is a failure, and shutdown
# when not running is also a failure.  So we just do it the way init scripts
# are expected to behave here.
# handle 3 different cases:
# Run as root, run as a regular user, run as same user as ssguser. 
# 

start() {
	find_tomcat
	if [ -n "$pid" ] ; then
		echo "SSG Already Running"
		exit
	fi

        echo -n $"Starting $prog: "
	if [ "$USER" = "root" ]; then
        	su - $ssguser -c "$ssg start -security" > /dev/null 2>&1
        	RETVAL=$?
	elif [ "$USER" = "$ssguser" ]; then
		$ssg start > /dev/null 2>&1
		RETVAL=$?
	else
		echo "Need to be root or $ssguser to run this script";
		exit
	fi	
        echo
        # [ $RETVAL = 0 ] && touch /var/lock/subsys/ssg
        return $RETVAL
}
stop() {
	find_tomcat;
	if [ -z "$pid" ] ; then
		echo "SSG Not Running"
		exit
	fi
	echo -n $"Stopping $prog: "
	if [ "$USER" = "root" ]; then
        	su - $ssguser -c "$ssg stop" > /dev/null 2>&1
        	RETVAL=$?
	elif [ "$USER" = "$ssguser" ]; then
		$ssg stop > /dev/null 2>&1
		RETVAL=$?
	else
		echo "Need to be root or $ssguser to run this script";
		exit
	fi	
	if [ $RETVAL = 0 ]; then 
		sleep 5;
		find_tomcat;
		if [ -z "$pid" ] ; then
 			echo "Success"
			exit
		fi
		count=`expr $count + 1`
		if [ "$count" -gt "$tries" ]; then
			reallystop
			exit
		fi  
		stop;
		
	else
		sleep 2;
		count=`expr $count + 1`
		if [ "$count" -gt "$tries" ]; then
			reallystop
			exit
		fi  
		stop;
	fi 
	echo
	return $RETVAL
}

find_tomcat() {
	pid=`pidof /ssg/j2sdk1.4.2_05/bin/java`
}

reallystop() {
	echo "Killing $pid"
	kill -9 $pid
}
# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	stop
	start
	;;
esac

exit $RETVAL
