#!/usr/bin/perl -w

use strict;
use FileHandle;
use File::Copy;

my $timestamp = localtime time;
my $logFile = new FileHandle;
if ($logFile->open(">>/opt/SecureSpan/Appliance/config/ssgsysconfig.log")) {
	$logFile->print("\n-------------------------------------------------------------------\n");
	$logFile->print("$timestamp: System Configuration Started\n");
	$logFile->print("-------------------------------------------------------------------\n");
} else {
 	print("Could not open log file. Will not proceed with system configuration\n");
}

my $foundNtp = undef;
my @ntpServerToUse;
my $timezone = undef;
my @filesToDelete;

my $interfaceConfigPattern = "/opt/SecureSpan/Appliance/config/configfiles/ifcfg-*";

my %copyFiles = (
    "/opt/SecureSpan/Appliance/config/configfiles/network" => "/etc/sysconfig/network",
    "/opt/SecureSpan/Appliance/config/configfiles/resolv.conf" => "/etc/resolv.conf"
);

my $inputFh = new FileHandle;
my %inputFiles = (
    "NTPFILE" => "/opt/SecureSpan/Appliance/config/configfiles/ntpconfig",
    "TIMEZONEFILE" => "/opt/SecureSpan/Appliance/config/configfiles/timezone",
);

my $outputFh = new FileHandle;
my %outputFiles = (
    "NTPCONFFILE" => "/etc/ntp.conf",
    "STEPTICKERSFILE" => "/etc/ntp/step-tickers",
    "TZCLOCKFILE" => "/etc/sysconfig/clock",
    "TZSYMLINK" => "/etc/localtime",
    "TZBASEDIR" => "/usr/share/zoneinfo/",
);

##
## NETWORK CONFIGURATION
##

# copy network configuration files
keys %copyFiles;
while ( my($sourceConfigFile, $destConfigFile) = each %copyFiles ) {
    if (-e $sourceConfigFile) {
        if ( copy($sourceConfigFile, $destConfigFile) ) {
            push(@filesToDelete, $sourceConfigFile);
            $logFile->print("Updated $destConfigFile");
        } else {
            $logFile->print("Error updating $destConfigFile");
        };
    }
}

# copy network interface configuration files
my @interfaceConfigFiles = glob($interfaceConfigPattern);
$logFile->print("$timestamp: applying network interfaces configurations: @interfaceConfigFiles\n");
for my $configFile(@interfaceConfigFiles) {
    if ( copy($configFile, "/etc/sysconfig/network-scripts/")) {
        push (@filesToDelete, $configFile);
    } else {
        $logFile->print("Error updating $configFile");
    }
}

##
## TIMEZONE AND NTP CONFIGURATION
##

# read timezone inputs
if ($inputFh->open("<$inputFiles{'TIMEZONEFILE'}")) {
    $timezone = do  { local( $/ ) ; <$inputFh> } ;
    chomp($timezone);
    push (@filesToDelete, $inputFiles{'TIMEZONEFILE'});
    if ($timezone ne "") {
        $logFile->print("$timestamp: timezone found: $timezone\n");
    } else {
        $logFile->print("$timestamp: no new timezone found. Timezone will not be changed.\n");
    }
    $inputFh->close();
} else {
	$logFile->print("$timestamp: $inputFiles{'TIMEZONEFILE'} not found. The timezone will not be changed.\n");
}

# read ntp servers inputs
if ($inputFh->open("<$inputFiles{'NTPFILE'}")) {
	my @lines = $inputFh->getlines();
	for my $ntpLine(@lines) {
	    chomp($ntpLine);
	    $logFile->print("$timestamp: NTP server(s) found: $ntpLine\n");
	    push(@ntpServerToUse,$ntpLine)
	}
	push (@filesToDelete, $inputFiles{'NTPFILE'});
	$inputFh->close();
} else {
	$logFile->print("$timestamp: $inputFiles{'NTPFILE'} not found. The NTP configuration will not be changed.\n");
}

# configure the timezone
if (defined($timezone)) {
    my $originalFile = new FileHandle;
    if ($originalFile->open("<$outputFiles{'TZCLOCKFILE'}")) {
        my $originalFileContent = do { local( $/ ); <$originalFile> } ;
        $originalFile->close();
        $originalFileContent =~ s/(ZONE=).*/$1\"$timezone\"/g;

        if ( $outputFh->open(">$outputFiles{'TZCLOCKFILE'}")) {
            $outputFh->print($originalFileContent);
            $outputFh->close();
            unlink($outputFiles{'TZSYMLINK'});
            my $oldFile = $outputFiles{'TZBASEDIR'}.$timezone;
            symlink($oldFile, $outputFiles{'TZSYMLINK'});
        } else {
            $logFile->print("$timestamp: Couldn't open $outputFiles{'TZCLOCKFILE'}. Skipping timezone configuration\n");
        }
    } else {
        $logFile->print("$timestamp: Couldn't open $outputFiles{'TZCLOCKFILE'}. Skipping timezone configuration\n");
    }
}

# configure NTP
if (@ntpServerToUse) {
	if ($outputFh->open(">$outputFiles{'NTPCONFFILE'}")) {
	    #the ntpfile that is output will have the following contents
        #restrict default nomodify notrap noquery
        #
        #restrict 127.0.0.1
        #
	    #server $ntpServerToUse
        #
        #server  127.127.1.0     # local clock
        #fudge   127.127.1.0 stratum 10
        #
        #driftfile /var/lib/ntp/drift

        $outputFh->print("#NTP configuration generated by the Layer 7 System Configuration wizard.\n");
        $outputFh->print("#This file will be overwritten if the utility is re-run\n");
        $outputFh->print("\n");
        $outputFh->print("restrict default nomodify notrap noquery\n");
        $outputFh->print("\n");
        $outputFh->print("restrict 127.0.0.1\n");
        for my $whichNtpHost(@ntpServerToUse){
            $outputFh->print("server $whichNtpHost\n");
        }

        $outputFh->print("server  127.127.1.0     # local clock\n");
        $outputFh->print("fudge   127.127.1.0 stratum 10\n");
        $outputFh->print("driftfile /var/lib/ntp/drift\n");

	    $outputFh->close();

	    $logFile->print("$timestamp: Wrote $outputFiles{'NTPCONFFILE'} with:\n");
	    $logFile->print("\trestrict default nomodify notrap noquery\n");
        $logFile->print("\n");
        $logFile->print("\trestrict 127.0.0.1\n");
        for my $whichNtpHost(@ntpServerToUse){
            $logFile->print("\tserver $whichNtpHost\n");
        }
        $logFile->print("\tserver  127.127.1.0     # local clock\n");
        $logFile->print("\tfudge   127.127.1.0 stratum 10\n");
        $logFile->print("\tdriftfile /var/lib/ntp/drift\n");
	} else {
		$logFile->print("$timestamp: Couldn't open $outputFiles{'NTPCONFFILE'}. Skipping NTP configuration\n");
	}

	if ($outputFh->open(">$outputFiles{'STEPTICKERSFILE'}")) {
    		for my $whichNtpHost(@ntpServerToUse){
                $outputFh->print("$whichNtpHost\n");
            }
    		$outputFh->close();

    		$logFile->print("$timestamp: Wrote $outputFiles{'STEPTICKERSFILE'} with:\n");
    		for my $whichNtpHost(@ntpServerToUse){
                $logFile->print("\t$whichNtpHost\n");
            }
    		$outputFh->close();
	} else {
		$logFile->print("$timestamp: Couldn't open $outputFiles{'STEPTICKERSFILE'}. Skipping step tickers configuration\n");
	}
} else {
		$logFile->print("no ntp found\n");
}

unlink(@filesToDelete);
$logFile->close();

