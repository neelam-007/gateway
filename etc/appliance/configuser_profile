set -u
set -e

trap doLogout INT

SYSWIZARD="sudo -u layer7 /opt/SecureSpan/Appliance/sysconfig/systemconfig.sh"
CONFWIZARD="sudo -u layer7 /opt/SecureSpan/Gateway/config/ssgconfig.sh"
MASTERKEYMANAGE="/opt/SecureSpan/Appliance/libexec/masterkey-manage.pl"
GETROOT="su -"
MASTER_KEY_BACKUP_FILE_NAME="ssg_mkey.bak"

checkForSca() {
    SCADIAG="/opt/sun/sca6000/sbin/scadiag"
    if [ -s "${SCADIAG}" ] ; then
        SCA_PRESENT="true"
    else
        SCA_PRESENT=""
    fi
}

checkForEm() {
    EM_PRESENT=""
    EM_ENABLED=""
    if [ -d "/opt/SecureSpan/EnterpriseManager" ] ; then
        EM_PRESENT="true"
    fi
}

doLogout() {
    exit
}

confirmedMessage() {
    echo "${1}"
    echo "Press [Enter] to continue";
    read;
}

doNetworkConfiguration() {
    isMenuValid="n"
    while [ "$isMenuValid" != "y" ]
    do
        clear
            echo "This menu allows you to configure networking on this appliance"
            echo "What would you like to do?"
            echo ""
            echo " 1) Configure networking"
            echo " 2) Display current network configuration"
            echo " X) Exit menu"
            echo ""
            echo -n "Please make a selection: "
            read choice
            case $choice in
                1) clear
                   (${SYSWIZARD})
                   clear;;
                2) clear
                   (${SYSWIZARD} -printConfig)
                   confirmedMessage ""
                   clear;;
                *)
                    clear;
                    isMenuValid="y";
                    clear;;
            esac
    done
}

doConfiguration() {
    isMenuValid="n"
    while [ "$isMenuValid" != "y" ]
    do
        clear
            echo "This menu allows you to configure the SecureSpan Gateway application"
            echo "What would you like to do?"
            echo ""
            echo " 1) Upgrade the SecureSpan Gateway database on this appliance"
            echo " 2) Configure the SecureSpan Gateway application on this appliance"
            echo " 3) Display the current SecureSpan Gateway configuration"
            echo " X) Exit menu"

            echo ""
            echo -n "Please make a selection: "
            read choice

            case $choice in
                    1)
                        clear;
                        (${CONFWIZARD} -databaseUgrade);
                        confirmedMessage ""
                        clear;;
                    2)
                        clear;
                        (${CONFWIZARD});
                        STATUS=$?
                        if [ $STATUS -eq 2 ] ; then
                          confirmedMessage "Node is already configured."
                        elif [ $STATUS -eq 3 ] ; then
                          confirmedMessage "Configuration service not available (please reboot)"
                        elif [ $STATUS -eq 5 ] ; then
                          confirmedMessage "Unexpected error in configuration service."
                        elif [ $STATUS -ne 0 ] ; then
                          confirmedMessage ""
                        fi
                        clear;;
                    3)
                        clear;
                        (${CONFWIZARD} show);
                        STATUS=$?
                        if [ $STATUS -eq 2 ] ; then
                          confirmedMessage "Node is not yet configured."
                        elif [ $STATUS -eq 3 ] ; then
                          confirmedMessage "Configuration service not available (please reboot)"
                        elif [ $STATUS -eq 5 ] ; then
                          confirmedMessage "Unexpected error in configuration service."
                        elif [ $STATUS -ne 0 ] ; then
                          confirmedMessage ""
                        fi
                        clear;;
                    *)
                        clear;
                        isMenuValid="y";
                        clear;;
            esac
    done
}

checkForSca
checkForEm
isValid="n"
while [ "$isValid" != "y" ]
do
    clear
        echo "Welcome to the SecureSpan Gateway"
        echo
        echo "This user account allows you to configure the appliance"
        echo "What would you like to do?"
        echo ""
        echo " 1) Configure networking on this SecureSpan Gateway appliance"
        echo " 2) Configure the SecureSpan Gateway application on this appliance"
        echo " 3) Use a privileged shell (root)"
        echo " 4) Change the Master Passphrase"
        echo " 5) Configure Remote Management"
        if [ "${SCA_PRESENT}" == "true" ] ; then
            echo " 6) Back up the Master Key to USB flash drive"
        fi

        if [ "${EM_PRESENT}" == "true" ] ; then
            /sbin/chkconfig ssem && true # && true due to set -e
            if [ ${?} -eq 0 ] ; then
                echo " 7) Disable Enterprise Manager server"
            else
                echo " 7) Enable Enterprise Manager server"
            fi
        fi        
        echo " R) Reboot the SSG appliance (apply the new configuration)"
        echo " X) Exit (no reboot)"

        echo ""
        echo -n "Please make a selection: "
        read choice

        case $choice in
                1) 	clear;
                    doNetworkConfiguration
                    clear;;
                2)  clear;
                    doConfiguration
                    clear;;
                3)  clear;
                    (${GETROOT});
                    clear;;
                4)  clear;
                    (${CONFWIZARD} -changeMasterPassphrase);
                    confirmedMessage ""
                    clear;;
                5)  clear;
                    (${CONFWIZARD} -processController);
                    confirmedMessage ""
                    clear;;
                x|X)  doLogout;;
                r|R)  echo -n "Are you sure you want to reboot the SecureSpan Gateway? [y/n]: "
                    read okToReboot
                    if [ "$okToReboot" == "y" ] || [ "$okToReboot" == "yes" ] ; then
                        sudo /sbin/reboot
                    fi
                    clear;;
                *)  if [ "$choice" == "6" ] && [ "${SCA_PRESENT}" == "true" ]; then
                        clear;
                        echo "Checking for USB drive"
                        (sudo ${MASTERKEYMANAGE} probe &> /dev/null);
                        if [ ${?} != 0 ] ; then
                            echo ""
                            confirmedMessage "The USB drive could not be found. Please attach the USB drive and try again."
                        else
                            echo "Found the USB drive. Continuing..."
                            echo -n "Enter the keystore password:"
                            read -s ksPassword;
			                echo ""
                            echo -n "Enter the master key backup password:"
                            read -s masterKeyBackupPassword;
			                echo "" 
                            (sudo ${MASTERKEYMANAGE} backup ${ksPassword} ${MASTER_KEY_BACKUP_FILE_NAME} ${masterKeyBackupPassword});
                            if [ ${?} != 0 ] ; then
                                echo ""
                                confirmedMessage "The master key backup did not succeed. See the error message above for details."
                            else
                                echo ""
                                confirmedMessage "The master key backup was successfull."
                            fi
                        fi
                    elif [ "$choice" == "7" ] && [ "${EM_PRESENT}" == "true" ]; then
                        /sbin/chkconfig ssem && true # && true due to set -e
                        if [ ${?} -eq 0 ] ; then
                            echo "Disabing Enterprise Manager server."
                            sudo /sbin/chkconfig ssem off
                            confirmedMessage "Enterprise Manager server disabled."
                        else
                            echo "Enabling Enterprise Manager server."
                            sudo /sbin/chkconfig ssem on
                            confirmedMessage "Enterprise Manager server enabled."
                        fi
                        clear;
                    else
                        isValid="n";
                        confirmedMessage "That is not a valid selection";
                        read;
                    fi;;
        esac
done
