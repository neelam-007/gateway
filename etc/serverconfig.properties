#
# Server Configuration Properties (used by ServerConfig)
#

ssgHome.description = SSG home directory
ssgHome.systemProperty = com.l7tech.server.home
ssgHome.default = /ssg
ssgHome.setSystemProperty = true

fs.description = File separator (/ on Unix, \\ in Windows, etc.)
fs.systemProperty = file.separator
fs.default = /

# General ServerConfig configuration
jndiPrefix = java:comp/env
propertyPrefix = com.l7tech.server
ssg.etc = ${ssgHome}${fs}etc
ssg.conf = ${ssg.etc}${fs}conf
resolutionPackage = com.l7tech.server.service.resolution

partitionHome.description = Base directory for all partitions
partitionHome.systemProperty = ${propertyPrefix}.partitionHome
partitionHome.default = ${ssg.conf}${fs}partitions
partitionHome.setSystemProperty = true

partitionName.description = Name of the partition to start
partitionName.systemProperty = ${propertyPrefix}.partitionName
partitionName.default = default_
partitionName.setSystemProperty = true

# Directory for SSG configuration files
configDirectory.description = Directory for SSG configuration files
configDirectory.systemProperty = ${propertyPrefix}.configDirectory
configDirectory.default = ${partitionHome}${fs}${partitionName}
configDirectory.setSystemProperty = true

# space-delimited list of ServiceResolver implementation class names
serviceResolvers.description = ServiceResolver implementation classnames
serviceResolvers.jndi = ${jndiPrefix}/ServiceResolvers
serviceResolvers.systemProperty = ${propertyPrefix}.serviceResolvers
serviceResolvers.default = \
    ${resolutionPackage}.UrnResolver \
    ${resolutionPackage}.SoapActionResolver \
    ${resolutionPackage}.HttpUriResolver

# space-delimited list of ServerComponentLifecycle instances to start on boot
serverComponents.description = Server components to start on boot
serverComponents.jndi = ${jndiPrefix}/ServerComponents
serverComponents.systemProperty = ${propertyPrefix}.serverComponents
serverComponents.default = \
    com.l7tech.cluster.ClusterBootProcess


# Numeric server ID (default generated from IP address)
serverId.description = Numeric server identifier
serverId.jndi = ${jndiPrefix}/ServerId
serverId.systemProperty = ${propertyPrefix}.serverId

# Multicast address (default generated randomly)
multicastAddress.description = Cluster multicast address
multicastAddress.jndi = ${jndiPrefix}/MulticastAddress
multicastAddress.systemProperty = ${propertyPrefix}.multicastAddress

# keystore.properties path
keystorePropertiesPath.description = SSL keystore properties path
keystorePropertiesPath.default = ${configDirectory}${fs}keystore.properties
keystorePropertiesPath.jndi = ${jndiPrefix}/KeystorePropertiesPath
keystorePropertiesPath.systemProperty = ${propertyPrefix}.keystorePropertiesPath

# ldap templates path
ldapTemplatesPath.description = LDAP templates path
ldapTemplatesPath.default = ${ssg.etc}${fs}ldapTemplates
ldapTemplatesPath.jndi = ${jndiPrefix}/LdapTemplatesPath
ldapTemplatesPath.systemProperty = ${propertyPrefix}.ldapTemplatesPath

# hibernate.properties path
hibernatePropertiesPath.description = Hibernate properties path
hibernatePropertiesPath.default = ${configDirectory}${fs}hibernate.properties
hibernatePropertiesPath.jndi = ${jndiPrefix}/HibernatePropertiesPath
hibernatePropertiesPath.systemProperty = ${propertyPrefix}.hibernatePropertiesPath

# comma-separated list of IP addresses (defaults to all)
ipAddresses.description = IP addresses
ipAddresses.jndi = ${jndiPrefix}/IpAddresses
ipAddresses.systemProperty = ${propertyPrefix}.ipAddresses

#
# Following two settings should be changed if tomcat's server.xml is changed
# so that http, https ports are not default 8080 and 8443
#
httpPort.description = HTTP listening port of servlet engine
httpPort.default = 8080
httpPort.jndi = ${jndiPrefix}/HttpPort
httpPort.systemProperty = ${propertyPrefix}.httpPort

httpsPort.description = HTTPS listening port of servlet engine
httpsPort.default = 8443
httpsPort.jndi = ${jndiPrefix}/HttpsPort
httpsPort.systemProperty = ${propertyPrefix}.httpsPort

#
# The port used for internode communications in a cluster
#
clusterPort.description = Inter-Node communication port for clusters
clusterPort.default = 2124
clusterPort.systemProperty = ${propertyPrefix}.clusterPort

#
# Following two settings should be modified if the cluster is configured in such a
# way that port forwarding is used
#
clusterhttpport.description = external HTTP port from outside the cluster
clusterhttpport.default = ${httpPort}
clusterhttpport.jndi = ${jndiPrefix}/ClusterHttpPort
clusterhttpport.systemProperty = ${propertyPrefix}.clusterHttpPort

clusterhttpsport.description = external HTTPS port from outside the cluster
clusterhttpsport.default = ${httpsPort}
clusterhttpsport.jndi = ${jndiPrefix}/ClusterHttpsPort
clusterhttpsport.systemProperty = ${propertyPrefix}.clusterHttpsPort

# hostname (defaults to OS hostname)
hostname.description = Hostname
hostname.jndi = ${jndiPrefix}/Hostname
hostname.systemProperty = ${propertyPrefix}.hostname

# system properties path
systemPropertiesPath.description = System properties path
systemPropertiesPath.default = ${configDirectory}${fs}system.properties
systemPropertiesPath.jndi = ${jndiPrefix}/SystemPropertiesPath
systemPropertiesPath.systemProperty = ${propertyPrefix}.systemPropertiesPath

#custom assertions (file name or resource name)
custom.assertions.file=custom_assertions.properties
custom.assertions.modules=${ssgHome}${fs}modules${fs}lib
custom.assertions.temp=${configDirectory}${fs}var${fs}modules

# ldap fallback timeout
# the time (in ms) for which the ldap connector will not try to reconnect to
# a particular ldap url when the connection failed
ldap.reconnect.timeout = 60000

# Audit settings
auditMessageThreshold.description = Minimum level required of a Message Audit Record for it to be saved to the database (Level)
auditMessageThreshold.default = WARNING
auditMessageThreshold.jndi = ${jndiPrefix}/AuditMessageThreshold
auditMessageThreshold.systemProperty = ${propertyPrefix}.audit.messageThreshold
auditMessageThreshold.clusterProperty = audit.messageThreshold

auditAdminThreshold.description = Minimum level required of an Admin Audit Record for it to be saved to the database (Level)
auditAdminThreshold.default = INFO
auditAdminThreshold.jndi = ${jndiPrefix}/AuditAdminThreshold
auditAdminThreshold.systemProperty = ${propertyPrefix}.audit.adminThreshold
auditAdminThreshold.clusterProperty = audit.adminThreshold

# asssocated logs threshold
auditAssociatedLogsThreshold.default = INFO
auditAssociatedLogsThreshold.description = Minimum level required of an Audit Detail Message for it to be saved to the database (Level)
auditAssociatedLogsThreshold.clusterProperty = audit.detailThreshold

# client component system logs threshold
auditClientSystemLogsThreshold.default = WARNING
auditClientSystemLogsThreshold.description = Minimum level required of an System Audit Record for a client component for it to be saved to the database (Level)
auditClientSystemLogsThreshold.clusterProperty = audit.clientServicesThreshold

auditHintingEnabled.description = Enable audit messages to provide hints for audited information, such as request XML (true/false)
auditHintingEnabled.default = true
auditHintingEnabled.systemProperty = ${propertyPrefix}.audit.hinting
auditHintingEnabled.clusterProperty = audit.hinting

auditAssertionStatusEnabled.description = Use the highest assertion status level when checking if a record should be saved (true/false)
auditAssertionStatusEnabled.default = true
auditAssertionStatusEnabled.systemProperty = ${propertyPrefix}.audit.assertionStatus
auditAssertionStatusEnabled.clusterProperty = audit.assertionStatus

auditAssociatedLogsThresholdRespected.description = Use the audit detail level when checking if a record should be saved (true/false)
auditAssociatedLogsThresholdRespected.default = true
auditAssociatedLogsThresholdRespected.systemProperty = ${propertyPrefix}.audit.detailThresholdRespected
auditAssociatedLogsThresholdRespected.clusterProperty = audit.detailThresholdRespected

# default = 1 week
auditPurgeMinimumAge.description = Minimum age of Audit Records that can be purged (Hours)
auditPurgeMinimumAge.default = 168
auditPurgeMinimumAge.jndi = ${jndiPrefix}/AuditPurgeMinimumAge
auditPurgeMinimumAge.systemProperty = ${propertyPrefix}.audit.purgeMinimumAge
auditPurgeMinimumAge.clusterProperty = audit.purgeMinimumAge

# default = /ssg/var/attachments
attachmentDirectory.description = Directory in which to cache large SOAP attachments
attachmentDirectory.default = ${configDirectory}${fs}var${fs}attachments
attachmentDirectory.jndi = ${jndiPrefix}/AttachmentDirectory
attachmentDirectory.systemProperty = ${propertyPrefix}.attachmentDirectory

# default = 131071
attachmentDiskThreshold.description = Threshold for size of attachments in a single request to keep in RAM (Bytes)
attachmentDiskThreshold.default = 1048576
attachmentDiskThreshold.jndi = ${jndiPrefix}/AttachmentDiskThreshold
attachmentDiskThreshold.systemProperty = ${propertyPrefix}.attachmentDiskThreshold
attachmentDiskThreshold.clusterProperty = attachment.diskThreshold

# Symantec AntiVirus ScanEngine (savseEnable = yes to enable scanning)
savseEnable.description = Whether or not this gateway has access to a sav scan engine to do virus scanning
savseEnable.default = no
savseEnable.jndi = ${jndiPrefix}/SavSEEnable
savseEnable.systemProperty = ${propertyPrefix}.savseEnable

# The hostname of the sav se
savseHost.description = The hostname of the sav scan engine that this gateway can connect to
savseHost.default = 127.0.0.1
savseHost.jndi = ${jndiPrefix}/SavSEHost
savseHost.systemProperty = ${propertyPrefix}.savseHost

# The port of the sav se
savsePort.description = The port number associated with the savseHost property
savsePort.default = 7777
savsePort.jndi = ${jndiPrefix}/SavSEPort
savsePort.systemProperty = ${propertyPrefix}.savsePort

# the number of max results in an idendity provider search result operation
maxLdapSearchResultSize.description = The number of max results in an idendity provider search result operation
maxLdapSearchResultSize.default = 50
maxLdapSearchResultSize.jndi = ${jndiPrefix}/MaxLDAPResSize
maxLdapSearchResultSize.systemProperty = ${propertyPrefix}.maxLdapSearchResultSize

metricsFineInterval.description = Time interval for Service Metrics fine resolution bins (Milliseconds)
metricsFineInterval.default = 5000
metricsFineInterval.systemProperty = com.l7tech.service.metrics.fineBinInterval
metricsFineInterval.clusterProperty = metrics.fineInterval

# passthrough filter for wsdl and policy downloads (requests for such documents will not require authentication
# if they come from an ip address belowmentioned)
# for example, a value could look like "127.0.0.1 192.168" and would allow localhost as well as anything starting with 192.168
passthroughDownloads.description = Remote IPs of requestors allowed to download WSDL and policy documents without credentials (Space separated list)
passthroughDownloads.default = 127.0.0.1
passthroughDownloads.systemProperty = com.l7tech.service.passthroughdownloads
passthroughDownloads.clusterProperty = service.passthroughdownloads

# IO timeout settings
ioInReadTimeout.description = IO timeout for incoming requests (Milliseconds)
ioInReadTimeout.default = 60000
ioInReadTimeout.systemProperty = ${propertyPrefix}.timeout
ioInReadTimeout.clusterProperty = io.timeout

ioInSlowReadThreshold.description = IO timeout for incoming request rate checking (Milliseconds)
ioInSlowReadThreshold.default = 60000
ioInSlowReadThreshold.systemProperty = ${propertyPrefix}.rateTimeout
ioInSlowReadThreshold.clusterProperty = io.rateTimeout

ioInSlowReadRate.description = Minimum permissible rate for incoming requests (Bytes per second)
ioInSlowReadRate.default = 1024
ioInSlowReadRate.systemProperty = ${propertyPrefix}.rateLimit
ioInSlowReadRate.clusterProperty = io.rateLimit

ioOutConnectionTimeout.description = IO timeout for outbound connection (Milliseconds)
ioOutConnectionTimeout.default = 30000
ioOutConnectionTimeout.systemProperty = ${propertyPrefix}.outConnectTimeout
ioOutConnectionTimeout.clusterProperty = io.outConnectTimeout

ioOutReadTimeout.description = IO timeout for outbound response (Milliseconds)
ioOutReadTimeout.default = 60000
ioOutReadTimeout.systemProperty = ${propertyPrefix}.outTimeout
ioOutReadTimeout.clusterProperty = io.outTimeout

ioHttpsHostVerify.description = Verify server host names against certificate name (true/false)
ioHttpsHostVerify.default = true
ioHttpsHostVerify.clusterProperty = io.httpsHostVerify

ioStaleCheckCount.description = Number of stale checked connections per interval (Integer)
ioStaleCheckCount.default = 1
ioStaleCheckCount.systemProperty = com.l7tech.common.http.prov.apache.CommonsHttpClient.staleCheckCount
ioStaleCheckCount.clusterProperty = io.staleCheckCount

ioStaleCheckHosts.description = Maximum mumber of stale checked hosts (Integer)
ioStaleCheckHosts.default = 10
ioStaleCheckHosts.systemProperty = com.l7tech.common.http.prov.apache.CommonsHttpClient.staleCheckHosts
ioStaleCheckHosts.clusterProperty = io.staleCheckHosts

ioXmlPartMaxBytes.description = Maximum number of bytes permitted in the XML part of a message, or 0 for unlimited (Integer)
ioXmlPartMaxBytes.default = 5242880
ioXmlPartMaxBytes.systemProperty = ${propertyPrefix}.xmlPartMaxBytes
ioXmlPartMaxBytes.clusterProperty = io.xmlPartMaxBytes

# Old name of this setting, but defaults live here -- new one points at this one for defaults
xsltMaxCacheEntries.description = Maximum number of cached stylesheets loaded from URLs (Integer)
xsltMaxCacheEntries.default = 100
xsltMaxCacheEntries.systemProperty = ${propertyPrefix}.xsltcache.maxEntries
xsltMaxCacheEntries.clusterProperty = xsltcache.maxEntries

# Old name of this setting, but defaults live here -- new one points at this one for defaults
xsltMaxCacheAge.description = Maximum age of cached stylesheets loaded from URLs (Milliseconds)
xsltMaxCacheAge.default = 300000
xsltMaxCacheAge.systemProperty = ${propertyPrefix}.xsltcache.maxAge
xsltMaxCacheAge.clusterProperty = xsltcache.maxAge

schemaMaxCacheAge.description = Maximum age of cached XML Schema documents loaded from URLs (Milliseconds)
schemaMaxCacheAge.default = 30000
schemaMaxCacheAge.systemProperty = ${propertyPrefix}.schemacache.maxAge
schemaMaxCacheAge.clusterProperty = schemacache.maxAge

schemaMaxCacheEntries.description = Maximum number of cached XML schema documents loaded from URLs (Integer)
schemaMaxCacheEntries.default = 100
schemaMaxCacheEntries.systemProperty = ${propertyPrefix}.schemacache.maxEntries
schemaMaxCacheEntries.clusterProperty = schemacache.maxEntries

schemaRecompileLatency.description = Minimum time that must elapse in between two consecutive rebuilds of the hardware schema table (Milliseconds). This prevents continuous rebuilding.
schemaRecompileLatency.default = 10000
schemaRecompileLatency.systemProperty = ${propertyPrefix}.schemacache.recompileLatency
schemaRecompileLatency.clusterProperty = schemacache.recompileLatency

schemaRecompileMinAge.description = Time after a schema becomes hardware eligible to wait for additional schemas to become eligible before triggering a batch rebuild of the hardware schema table (Milliseconds). Schema status changes often occur in clumps.
schemaRecompileMinAge.default = 500
schemaRecompileMinAge.systemProperty = ${propertyPrefix}.schemacache.recompileMinAge
schemaRecompileMinAge.clusterProperty = schemacache.recompileMinAge

schemaRecompileMaxAge.description = Maximum time a needed schema hardware cache rebuild can be held to wait for additional schemas to stop arriving (Milliseconds)
schemaRecompileMaxAge.default = 20000
schemaRecompileMaxAge.systemProperty = ${propertyPrefix}.schemacache.recompileMaxAge
schemaRecompileMaxAge.clusterProperty = schemacache.recompileMaxAge

ephemeralKeyMaxCacheEntries.description = Maximum number of cached ephemeral key thumbprints per-node, or 0 to disable ephemeral key caching (Integer)
ephemeralKeyMaxCacheEntries.default = 1000
ephemeralKeyMaxCacheEntries.systemProperty = ${propertyPrefix}.ekeycache.maxEntries
ephemeralKeyMaxCacheEntries.clusterProperty = ekeycache.maxEntries

defaultfaultlevel.description = Level of details in SOAP faults returned by the SSG (can be overriden by FaultLevel assertion). Values are 0 for drop connection, 1 for template, 2 for generic, 3 for medium details, 4 for full details.
defaultfaultlevel.default = 2
defaultfaultlevel.systemProperty = ${propertyPrefix}.fault.level
defaultfaultlevel.clusterProperty = soapfault.level

defaultfaulttemplate.description = Template used for SOAP faults returned by the SSG (Text). This is only relevent when defaultfaultlevel is set to template.
defaultfaulttemplate.default = <s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body><s:Fault><faultcode>Client</faultcode></s:Fault></s:Body></s:Envelope>
defaultfaulttemplate.systemProperty = ${propertyPrefix}.fault.template
defaultfaulttemplate.clusterProperty = soapfault.template

defaultfaultpolicyurl.description = Whether or not the SSG includes the policy download URL when returning SOAP faults (true/false)
defaultfaultpolicyurl.default = true
defaultfaultpolicyurl.systemProperty = ${propertyPrefix}.fault.policyurl
defaultfaultpolicyurl.clusterProperty = soapfault.policyurl

uddi.url.inquiry.description = List of UDDI Inquiry URLs (Space separated list)
uddi.url.inquiry.clusterProperty = uddi.inquiryUrls
uddi.result.max_rows.description = The maximum number of records to retrieve for any inquiry.
uddi.result.max_rows.clusterProperty = uddi.limit
uddi.result.max_rows.default = 100
uddi.result.batch_size.description = The number of records to retrieve at a time (Integer)
uddi.result.batch_size.clusterProperty = uddi.batch
uddi.result.batch_size.default = 100

trafficLoggerEnabled.description = Whether or not traffic should be recorded (true/false)
trafficLoggerEnabled.default = false
trafficLoggerEnabled.clusterProperty = trafficlogger.enabled
trafficLoggerEnabled.systemProperty = ${propertyPrefix}.trafficlogger.enabled

trafficLoggerDetail.description = Template for logged information related to the request (Text)
trafficLoggerDetail.default = ${request.time}, ${request.soap.namespace}, ${request.soap.operationname}, ${response.http.status}
trafficLoggerDetail.clusterProperty = trafficlogger.detail
trafficLoggerDetail.systemProperty = ${propertyPrefix}.trafficlogger.detail

trafficLoggerPattern.description = File path in the style of java.util.logging.FileHandler.pattern; see java.util.logging (Text)
trafficLoggerPattern.default = ${ssgHome}${fs}logs${fs}traffic_%g_%u.log
trafficLoggerPattern.clusterProperty = trafficlogger.pattern
trafficLoggerPattern.systemProperty = ${propertyPrefix}.trafficlogger.pattern

trafficLoggerLimit.description = Approximate maximum size for log files (Bytes). If this is zero, then there is no limit
trafficLoggerLimit.default = 5242880
trafficLoggerLimit.clusterProperty = trafficlogger.limit
trafficLoggerLimit.systemProperty = ${propertyPrefix}.trafficlogger.limit

trafficLoggerCount.description = Number of output files (Integer)
trafficLoggerCount.default = 2
trafficLoggerCount.clusterProperty = trafficlogger.count
trafficLoggerCount.systemProperty = ${propertyPrefix}.trafficlogger.count

trafficLoggerRecordReq.description = Append the contents of the request received by the SecureSpan Gateway at the end of each record (true/false)
trafficLoggerRecordReq.default = false
trafficLoggerRecordReq.clusterProperty = trafficlogger.recordreq
trafficLoggerRecordReq.systemProperty = ${propertyPrefix}.trafficlogger.recordreq

trafficLoggerRecordRes.description = Append the contents of the response returned by the SecureSpan Gateway at the end of each record (true/false)
trafficLoggerRecordRes.default = false
trafficLoggerRecordRes.clusterProperty = trafficlogger.recordres
trafficLoggerRecordRes.systemProperty = ${propertyPrefix}.trafficlogger.recordres

pingServletMode.description = Set the permission mode of the Ping Servlet (OFF | REQUIRE_CREDS | OPEN)
pingServletMode.default = REQUIRE_CREDS
pingServletMode.clusterProperty = pingServlet.mode
pingServletMode.systemProperty = ${propertyPrefix}.pingServlet.mode

serviceMetricsEnabled.description = Enable collection of service metrics (true/false)
serviceMetricsEnabled.default = true
serviceMetricsEnabled.clusterProperty = serviceMetrics.enabled
serviceMetricsEnabled.systemProperty = com.l7tech.service.metrics.enabled

ratelimitMaxNodeConcurrency.description = Maximum number of requests that can be delayed for traffic shaping purposes.  When this limit is reached, rate limiters will start failing requests that hit the limit
ratelimitMaxNodeConcurrency.default = 70
ratelimitMaxNodeConcurrency.clusterProperty = ratelimit.maxNodeConcurrency
ratelimitMaxNodeConcurrency.systemProperty = ${propertyPrefix}.ratelimit.maxNodeConcurrency
