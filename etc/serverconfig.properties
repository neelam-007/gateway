#
# Server Configuration Properties (used by ServerConfig)
#

ssgHome.description = SSG home directory
ssgHome.systemProperty = com.l7tech.server.home
ssgHome.default = /ssg
ssgHome.setSystemProperty = true

fs.description = File separator (/ on Unix, \\ in Windows, etc.)
fs.systemProperty = file.separator
fs.default = /

# General ServerConfig configuration
jndiPrefix = java:comp/env
propertyPrefix = com.l7tech.server
ssg.etc = ${ssgHome}${fs}etc
ssg.conf = ${ssg.etc}${fs}conf
resolutionPackage = com.l7tech.server.service.resolution

# Directory for SSG configuration files
configDirectory.description = Directory for SSG configuration files
configDirectory.systemProperty = ${propertyPrefix}.configDirectory
configDirectory.default = ${ssg.conf}
configDirectory.setSystemProperty = true

# space-delimited list of ServiceResolver implementation class names
serviceResolvers.description = ServiceResolver implementation classnames
serviceResolvers.jndi = ${jndiPrefix}/ServiceResolvers
serviceResolvers.systemProperty = ${propertyPrefix}.serviceResolvers
serviceResolvers.default = \
    ${resolutionPackage}.UrnResolver \
    ${resolutionPackage}.SoapActionResolver \
    ${resolutionPackage}.HttpUriResolver

# space-delimited list of ServerComponentLifecycle instances to start on boot
serverComponents.description = Server components to start on boot
serverComponents.jndi = ${jndiPrefix}/ServerComponents
serverComponents.systemProperty = ${propertyPrefix}.serverComponents
serverComponents.default = \
    com.l7tech.cluster.ClusterBootProcess \
    com.l7tech.server.transport.jms.JmsBootProcess

# Numeric server ID (default generated from IP address)
serverId.description = Numeric server identifier
serverId.jndi = ${jndiPrefix}/ServerId
serverId.systemProperty = ${propertyPrefix}.serverId

# Multicast address (default generated randomly)
multicastAddress.description = Cluster multicast address
multicastAddress.jndi = ${jndiPrefix}/MulticastAddress
multicastAddress.systemProperty = ${propertyPrefix}.multicastAddress

# keystore.properties path
keystorePropertiesPath.description = SSL keystore properties path
keystorePropertiesPath.default = ${ssg.conf}${fs}keystore.properties
keystorePropertiesPath.jndi = ${jndiPrefix}/KeystorePropertiesPath
keystorePropertiesPath.systemProperty = ${propertyPrefix}.keystorePropertiesPath

# ldap templates path
ldapTemplatesPath.description = LDAP templates path
ldapTemplatesPath.default = ${ssg.etc}${fs}ldapTemplates
ldapTemplatesPath.jndi = ${jndiPrefix}/LdapTemplatesPath
ldapTemplatesPath.systemProperty = ${propertyPrefix}.ldapTemplatesPath

# hibernate.properties path
hibernatePropertiesPath.description = Hibernate properties path
hibernatePropertiesPath.default = ${ssg.conf}${fs}hibernate.properties
hibernatePropertiesPath.jndi = ${jndiPrefix}/HibernatePropertiesPath
hibernatePropertiesPath.systemProperty = ${propertyPrefix}.hibernatePropertiesPath

# comma-separated list of IP addresses (defaults to all)
ipAddresses.description = IP addresses
ipAddresses.jndi = ${jndiPrefix}/IpAddresses
ipAddresses.systemProperty = ${propertyPrefix}.ipAddresses

#
# Following two settings should be changed if tomcat's server.xml is changed
# so that http, https ports are not default 8080 and 8443
#
httpPort.description = HTTP listening port of servlet engine
httpPort.default = 8080
httpPort.jndi = ${jndiPrefix}/HttpPort
httpPort.systemProperty = ${propertyPrefix}.httpPort

httpsPort.description = HTTPS listening port of servlet engine
httpsPort.default = 8443
httpsPort.jndi = ${jndiPrefix}/HttpsPort
httpsPort.systemProperty = ${propertyPrefix}.httpsPort
#
# Following two settings should be modified if the cluster is configured in such a
# way that port forwarding is used
#
clusterhttpport.description = external HTTP port from outside the cluster
clusterhttpport.default = ${httpPort}
clusterhttpport.jndi = ${jndiPrefix}/ClusterHttpPort
clusterhttpport.systemProperty = ${propertyPrefix}.clusterHttpPort

clusterhttpsport.description = external HTTPS port from outside the cluster
clusterhttpsport.default = ${httpsPort}
clusterhttpsport.jndi = ${jndiPrefix}/ClusterHttpsPort
clusterhttpsport.systemProperty = ${propertyPrefix}.clusterHttpsPort

# hostname (defaults to OS hostname)
hostname.description = Hostname
hostname.jndi = ${jndiPrefix}/Hostname
hostname.systemProperty = ${propertyPrefix}.hostname

# system properties path
systemPropertiesPath.description = System properties path
systemPropertiesPath.default = ${ssg.conf}${fs}system.properties
systemPropertiesPath.jndi = ${jndiPrefix}/SystemPropertiesPath
systemPropertiesPath.systemProperty = ${propertyPrefix}.systemPropertiesPath

#custom assertions (file name or resource name)
custom.assertions.file=custom_assertions.properties
custom.assertions.modules=${ssgHome}${fs}lib${fs}modules
custom.assertions.temp=${ssgHome}${fs}var${fs}modules

# ldap fallback timeout
# the time (in ms) for which the ldap connector will not try to reconnect to
# a particular ldap url when the connection failed
ldap.reconnect.timeout = 60000

# Audit settings
auditMessageThreshold.description = Minimum Level required of a Message Audit record for it to be saved to the database
auditMessageThreshold.default = WARNING
auditMessageThreshold.jndi = ${jndiPrefix}/AuditMessageThreshold
auditMessageThreshold.systemProperty = ${propertyPrefix}.audit.messageThreshold
auditMessageThreshold.clusterProperty = audit.messageThreshold

auditAdminThreshold.description = Minimum Level required of an Admin Audit record for it to be saved to the database
auditAdminThreshold.default = INFO
auditAdminThreshold.jndi = ${jndiPrefix}/AuditAdminThreshold
auditAdminThreshold.systemProperty = ${propertyPrefix}.audit.adminThreshold
auditAdminThreshold.clusterProperty = audit.adminThreshold

# asssocated logs threshold
auditAssociatedLogsThreshold.default = INFO
auditAssociatedLogsThreshold.description = Minimum Level required of an audit detail message for it to be saved to the database
auditAssociatedLogsThreshold.clusterProperty = audit.detailThreshold

auditHintingEnabled.description = Enable audit messages to provide hints for audited information (such as request XML)
auditHintingEnabled.default = true
auditHintingEnabled.systemProperty = ${propertyPrefix}.audit.hinting
auditHintingEnabled.clusterProperty = audit.hinting

auditAssertionStatusEnabled.description = Use the highest assertion status level when checking if a record should be saved.
auditAssertionStatusEnabled.default = true
auditAssertionStatusEnabled.systemProperty = ${propertyPrefix}.audit.assertionStatus
auditAssertionStatusEnabled.clusterProperty = audit.assertionStatus

auditAssociatedLogsThresholdRespected.description = Use the audit detail level when checking if a record should be saved.
auditAssociatedLogsThresholdRespected.default = true
auditAssociatedLogsThresholdRespected.systemProperty = ${propertyPrefix}.audit.detailThresholdRespected
auditAssociatedLogsThresholdRespected.clusterProperty = audit.detailThresholdRespected

# default = 1 week
auditPurgeMinimumAge.description = Minimum age of audit records that can be purged (in hours)
auditPurgeMinimumAge.default = 168
auditPurgeMinimumAge.jndi = ${jndiPrefix}/AuditPurgeMinimumAge
auditPurgeMinimumAge.systemProperty = ${propertyPrefix}.audit.purgeMinimumAge
auditPurgeMinimumAge.clusterProperty = audit.purgeMinimumAge

# default = /ssg/var/attachments
attachmentDirectory.description = Directory in which to cache large SOAP attachments
attachmentDirectory.default = ${ssgHome}${fs}var${fs}attachments
attachmentDirectory.jndi = ${jndiPrefix}/AttachmentDirectory
attachmentDirectory.systemProperty = ${propertyPrefix}.attachmentDirectory

# default = 131071
attachmentDiskThreshold.description = Threshold for bytes of attachments in a single request to keep in RAM
attachmentDiskThreshold.default = 131071
attachmentDiskThreshold.jndi = ${jndiPrefix}/AttachmentDiskThreshold
attachmentDiskThreshold.systemProperty = ${propertyPrefix}.attachmentDiskThreshold

# Symantec AntiVirus ScanEngine (savseEnable = yes to enable scanning)
savseEnable.description = Whether or not this gateway has access to a sav scan engine to do virus scanning
savseEnable.default = no
savseEnable.jndi = ${jndiPrefix}/SavSEEnable
savseEnable.systemProperty = ${propertyPrefix}.savseEnable

# The hostname of the sav se
savseHost.description = The hostname of the sav scan engine that this gateway can connect to
savseHost.default = 127.0.0.1
savseHost.jndi = ${jndiPrefix}/SavSEHost
savseHost.systemProperty = ${propertyPrefix}.savseHost

# The port of the sav se
savsePort.description = The port number associated with the savseHost property
savsePort.default = 7777
savsePort.jndi = ${jndiPrefix}/SavSEPort
savsePort.systemProperty = ${propertyPrefix}.savsePort

# the number of max results in an idendity provider search result operation
maxLdapSearchResultSize.description = The number of max results in an idendity provider search result operation
maxLdapSearchResultSize.default = 50
maxLdapSearchResultSize.jndi = ${jndiPrefix}/MaxLDAPResSize
maxLdapSearchResultSize.systemProperty = ${propertyPrefix}.maxLdapSearchResultSize

metricsFineInterval.description = Time period for fine Service Metrics bins
metricsFineInterval.default = 5000
metricsFineInterval.systemProperty = com.l7tech.service.metrics.fineBinInterval
metricsFineInterval.clusterProperty = metrics.fineInterval

# passthrough filter for wsdl and policy downloads (requests for such documents will not require authentication
# if they come from an ip address belowmentioned)
# for example, a value could look like "127.0.0.1 192.168" and would allow localhost as well as anything starting with 192.168
passthroughDownloads.description = Remote IPs of requestors allowed to download WSDL and policy documents without credentials
passthroughDownloads.default = 127.0.0.1
passthroughDownloads.systemProperty = com.l7tech.service.passthroughdownloads
passthroughDownloads.clusterProperty = service.passthroughdownloads

# IO timeout settings
ioInReadTimeout.description = IO timeout for incoming requests (milliseconds)
ioInReadTimeout.default = 60000
ioInReadTimeout.systemProperty = ${propertyPrefix}.timeout
ioInReadTimeout.clusterProperty = io.timeout

ioInSlowReadThreshold.description = IO timeout for incoming request rate checking (milliseconds)
ioInSlowReadThreshold.default = 60000
ioInSlowReadThreshold.systemProperty = ${propertyPrefix}.rateTimeout
ioInSlowReadThreshold.clusterProperty = io.rateTimeout

ioInSlowReadRate.description = Minimum permissible rate for incoming requests (bytes per second)
ioInSlowReadRate.default = 1024
ioInSlowReadRate.systemProperty = ${propertyPrefix}.rateLimit
ioInSlowReadRate.clusterProperty = io.rateLimit

ioOutConnectionTimeout.description = IO timeout for outbound connection (milliseconds)
ioOutConnectionTimeout.default = 30000
ioOutConnectionTimeout.systemProperty = ${propertyPrefix}.outConnectTimeout
ioOutConnectionTimeout.clusterProperty = io.outConnectTimeout

ioOutReadTimeout.description = IO timeout for outbound response (milliseconds)
ioOutReadTimeout.default = 60000
ioOutReadTimeout.systemProperty = ${propertyPrefix}.outTimeout
ioOutReadTimeout.clusterProperty = io.outTimeout

ioStaleCheckCount.description = Number of stale checked connections per interval
ioStaleCheckCount.default = 1
ioStaleCheckCount.systemProperty = com.l7tech.common.http.prov.apache.CommonsHttpClient.staleCheckCount
ioStaleCheckCount.clusterProperty = io.staleCheckCount

xsltMaxCacheEntries.description = Maximum number of cached XSLT stylesheets
xsltMaxCacheEntries.default = 100
xsltMaxCacheEntries.systemProperty = ${propertyPrefix}.xslt.maxCacheEntries
xsltMaxCacheEntries.clusterProperty = xslt.maxCacheEntries

xsltMaxCacheAge.description = Maximum age of cached XSLT stylesheets (milliseconds)
xsltMaxCacheAge.default = 300000
xsltMaxCacheAge.systemProperty = ${propertyPrefix}.xslt.maxCacheAge
xsltMaxCacheAge.clusterProperty = xslt.maxCacheAge

defaultfaultlevel.description = Level of details in SOAP faults returned by the SSG (can be overriden by FaultLevel assertion). Values are 0 for drop connection, 1 for template, 2 for generic, 3 for medium details, 4 for full details
defaultfaultlevel.default = 2
defaultfaultlevel.systemProperty = ${propertyPrefix}.fault.level
defaultfaultlevel.clusterProperty = soapfault.level

defaultfaulttemplate.description = Template used for SOAP faults returned by the SSG (only relevent when defaultfaultlevel is set to template)
defaultfaulttemplate.default = <s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body><s:Fault><faultcode>Client</faultcode></s:Fault></s:Body></s:Envelope>
defaultfaulttemplate.systemProperty = ${propertyPrefix}.fault.template
defaultfaulttemplate.clusterProperty = soapfault.template

defaultfaultpolicyurl.description = Whether or not the SSG includes the policy download URL when returning SOAP faults
defaultfaultpolicyurl.default = true
defaultfaultpolicyurl.systemProperty = ${propertyPrefix}.fault.policyurl
defaultfaultpolicyurl.clusterProperty = soapfault.policyurl
