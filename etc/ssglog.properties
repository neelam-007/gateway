# Specify the handlers to create in the root logger
handlers = java.util.logging.FileHandler java.util.logging.ConsoleHandler

# Set the default logging level for the root logger
.level = WARNING

# Probe interval secs (check the config file and reload), 0 or less to disable
com.l7tech.logging.interval = 15

# Set the default logging level for ConsoleHandler (stdout)
# Do not set this above level SEVERE or you risk running out of disk space
# on the catalina.out file
java.util.logging.ConsoleHandler.level = SEVERE
# Set the default formatter for ConsoleHandler
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Set the default logging level for FileHandler
java.util.logging.FileHandler.level = INFO

# Use those settings instead to get information on why a specific policy
# is returning an error (next two lines)
# com.l7tech.server.policy.assertion.level = FINE
# java.util.logging.FileHandler.level = FINE

java.util.logging.FileHandler.pattern = /ssg/logs/ssg_%g_%u.log
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.limit = 20000000
java.util.logging.FileHandler.append = true
java.util.logging.FileHandler.count = 10
 
org.level = WARNING
org.jgroups.level = WARNING
net.level = WARNING
com.sun.level = WARNING
com.l7tech.level = CONFIG

# Turn off WARNING for expected registry initialization and remote method exceptions
com.l7tech.spring.remoting.rmi.RmiRegistryInitializer.level = SEVERE
org.springframework.remoting.support.RemoteInvocationTraceInterceptor.level = SEVERE
