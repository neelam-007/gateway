//
// Zelix Klassmaster script for obfuscating ROOT.war's WEB-INF/classes
//
// author: flascelles@layer7tech.com
// Layer 7 Technologies 2005
//
// PREREQS
// this script should be placed alongside Gateway.jar
//
// extralib:
// notice the following jars that are needed to be in ./extralib: servlet-api.jar, catalina.jar and org.mortbay.jetty.jar
// those jars are part of the tree but not part of the WAR
//
// broken links
// unless this is fixed by the time you read this, the war classes has some broken links that will prevent
// obfuscation to run properly. these are com.l7tech.server.config and com.l7tech.proxy.gui.
// both those packages should be removed.
//
// USAGE
// how to run it:
// java -jar ZKM.jar ssg.zkm
//
//
@JARFILE_FILE_LINES@

// this is the jar file to process
// this could also be a directory containing .class files
open        "./build/Gateway.jar";

// we dont want to let zelix determine which classes/methods are unused
// therefore we are excluding everything from trimming otherwise some
// classes that appear to not be used would be removed
trimExclude *.* and
            *.* public * and
            *.* protected * and
            *.* public *(*) and
            *.* protected *(*) and
            *.* package * and
            *.* package *(*) and
            *.* private * and
            *.* private *(*);

// not sure whether or not it would be ok to delete annotation attributes and unknowns
trim        deleteSourceFileAttributes=true
            deleteDeprecatedAttributes=true
            deleteAnnotationAttributes=false
            deleteUnknownAttributes=false;

// dont rename public classes, public+protected method names
// this ensures no problem with reflected classes
// this does not mean that classes and methods are excluded from obfuscation.
// only their names are not obfuscated
exclude     public *.^* and
            *.* public * and
            *.* protected * and
            *.* public *(*) and
            *.* protected *(*) and
            *.* implements java.io.Serializable and
            *.* implements java.io.Serializable * and
            *.* implements java.io.Serializable *(*);

existingSerializedClasses *.* implements java.io.Serializable;

obfuscate   changeLogFileIn=""
            changeLogFileOut="build/obfuscation/gatewaychange.log"
            obfuscateFlow=none
            encryptStringLiterals=normal
            lineNumbers=delete;

// this lets you specify the output directory. it will contain whatever you added with
// open statement(s) except it will be the obfuscated copy
saveAll     archiveCompression=all "./build/obfuscation";
