<?xml version="1.0" encoding="UTF-8"?>
<!-- Ant build file for the Observer for CA Unicenter WSDM module. -->
<project name="module.ca_wsdm" default="package" basedir=".">

    <description>
      Builds the Observer for CA Unicenter WSDM module.
    </description>

    <property name="UneasyRooster.dir" location="../.."/>
    <property name="build.classes" location="build/classes"/>

    <path id="compile.classpath">
        <fileset dir="ssg/tomcat/webapps/ROOT/WEB-INF/lib">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${UneasyRooster.dir}/lib">
            <include name="wsdl4j_1.6.2.jar"/>
            <include name="spring-beans.jar"/>
            <include name="spring-context.jar"/>
        </fileset>
        <pathelement location="${UneasyRooster.dir}/build/classes"/>
    </path>

    <!-- Initializes the ssg.home property. -->
    <target name="-common.init.ssg.home.init">
        <available property="is.windows" file="C:\Program Files\Layer 7 Technologies\SecureSpan Gateway"/>
        <available property="is.linux" file="/ssg"/>
    </target>
    <target name="-common.init.ssg.home.linux" depends="-common.init.ssg.home.init" unless="is.windows">
        <property name="ssg.home" value="/ssg"/>
    </target>
    <target name="-common.init.ssg.home" depends="-common.init.ssg.home.linux">
        <!-- Set to win home if linux home not already set-->
        <property name="ssg.home" value="C:\Program Files\Layer 7 Technologies\SecureSpan Gateway"/>
        <available property="is.home.available" file="${ssg.home}"/>
        <fail unless="is.home.available">SSG home directory is invalid "${ssg.home}".</fail>
    </target>

    <!-- Compile java src -->
    <target name="-compile">
        <available property="classes.available" file="${UneasyRooster.dir}/build/classes"/>
        <fail unless="classes.available">UneasyRooster does not seem to have been built yet (missing ${UneasyRooster.dir}/build/classes).</fail>
        <mkdir dir="${build.classes}"/>
        <javac srcdir="src"
               destdir="${build.classes}"
               target="1.5" 
               classpathref="compile.classpath">
        </javac>
    </target>

    <target name="test" description="Runs any tests for this module."/>

    <!-- Create JAR file -->
    <target name="-jar" depends="-compile">
        <mkdir dir="build/ssg/tomcat/webapps/ROOT/WEB-INF/lib"/>
        <jar destfile="build/ssg/tomcat/webapps/ROOT/WEB-INF/lib/ca_wsdm_observer.jar"
             basedir="build/classes"/>
    </target>

    <!-- Create distribution package -->
    <target name="package" depends="-jar"
            description="Creates the distributable ZIP file.">
        <!-- Compose the version number; if not already assigned. -->
        <property file="${UneasyRooster.dir}/build.version"/>
        <fail unless="build.version.major">Missing build version property "build.version.major"</fail>
        <fail unless="build.version.minor">Missing build version property "build.version.minor"</fail>
        <!-- Declare props to keep idea happy -->
        <property name="build.version.major" value=""/>
        <property name="build.version.minor" value=""/>
        <property name="build.version.subminor" value=""/>
        <condition property="build.version"
                   value="${build.version.major}.${build.version.minor}"
                   else="${build.version.major}.${build.version.minor}.${build.version.subminor}">
            <!-- Append dot subminor only if not empty. -->
            <equals arg1="${build.version.subminor}" arg2=""/>
        </condition>

        <zip destfile="build/ca_wsdm_observer-${build.version}.zip">
            <fileset dir="." includes="ssg/**/*"/>
            <fileset dir="build" includes="ssg/**/*"/>
            <fileset dir="bin" includes="install.cmd"/>
            <fileset dir="bin" includes="EditSsgLog.cmd"/>
            <zipfileset dir="bin" filemode="755">
                <include name="install.sh"/>
            </zipfileset>
        </zip>
    </target>

    <target name="OFFICIAL-package-version-check" unless="build.version">
        <!-- Prompt for version number if not already supplied by a calling build file. -->
        <input message="Enter a version number:" addproperty="build.version"/>
    </target>

    <target name="OFFICIAL-package"
            description="Creates the distributable ZIP file after prompting for a version number."
            depends="OFFICIAL-package-version-check,package">
    </target>

    <target name="deploy" depends="-jar,-common.init.ssg.home"
            description="Deploys to SSG at ${ssg.home}. (For developer use)">
        <echo>Deploying to ${ssg.home}.</echo>
        <copy overwrite="true" todir="${ssg.home}" verbose="true">
            <fileset dir="ssg">
                <include name="tomcat/webapps/ROOT/WEB-INF/CaWsdmObserverContext.xml"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/lib/*.jar"/>
            </fileset>
            <fileset dir="build/ssg">
                <include name="tomcat/webapps/ROOT/WEB-INF/lib/ca_wsdm_observer.jar"/>
            </fileset>
        </copy>

        <!-- Do not overwrite these if modified. -->
        <copy overwrite="false" todir="${ssg.home}" verbose="true">
            <fileset dir="ssg">
                <include name="etc/conf/ca_wsdm_observer.properties"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/classes/WsdmSOMMA_Basic.properties"/>
            </fileset>
        </copy>
    </target>

    <target name="undeploy" depends="-common.init.ssg.home"
            description="Undeploys from SSG at ${ssg.home}. Deletes all deployed files. (For developer use)">
        <delete verbose="true">
            <fileset dir="${ssg.home}">
                <include name="etc/conf/ca_wsdm_observer.properties"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/CaWsdmObserverContext.xml"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/classes/WsdmSOMMA_Basic.properties"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/lib/axis-1.3.jar"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/lib/ca_wsdm_observer.jar"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/lib/ca_wsdm-3.50-core.jar"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/lib/ca_wsdm-3.50-handler_common.jar"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/lib/ca_wsdm-3.50-wsdm35mmi-axis-stubskel.jar"/>
                <include name="tomcat/webapps/ROOT/WEB-INF/lib/tmxmltoolkit.jar"/>
            </fileset>
        </delete>
    </target>

    <target name="clean"
            description="Deletes all generated files.">
        <delete dir="build"/>
    </target>

</project>
