<?xml version="1.0" encoding="utf-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:evt="http://schemas.hp.com/wsmf/2003/03/Events#" targetNamespace="http://schemas.hp.com/wsmf/2003/03/Events#" version="0.1" elementFormDefault="qualified">
    <!-- Discovery of event types -->
    <element name="EventTypeList" type="evt:EventTypeListType" />
    <complexType name="EventTypeListType">
        <annotation>
            <documentation>
                <evt:doc>
          An element of type EventTypeListType contains zero or
          more child elements of type EventType.
                </evt:doc>
            </documentation>
        </annotation>
        <sequence>
            <element name="EventType" type="anyURI" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
    </complexType>
    <!-- NotificationList -->
    <annotation>
        <documentation>
            <evt:doc>
	This is the root element that encapsulates zero, one or more
	Notification. It is used in the WS-Events WSDL to define the
	part of messages which carry notifications.There are no
	constraints on how the Notification elements are grouped in a
	NotificationList. For instance, a NotificationList can contain
	Notification elements of various types or from different
	sources.
            </evt:doc>
        </documentation>
    </annotation>
    <element name="NotificationList" type="evt:NotificationListType" />
    <complexType name="NotificationListType">
        <sequence>
            <element ref="evt:Notification" minOccurs="0" maxOccurs="unbounded" />
        </sequence>
    </complexType>
    <!-- Notification -->
    <!-- Notification Source -->
    <annotation>
        <documentation>
            <evt:doc>
	This element contains the URL of the event producer. The URL
	SHOULD be a valid network address even though it MAY not
	always be dereferencable because of network connectivity
	issues (e.g firewall).
	
	The notification source URL MAY be different from the one of
	the sender of the notification if, for instance, there is a
	broker acting as an intermediary between the event producer
	and consumer.
	
	However, the URL Source element SHOULD be the same than the
	one used in a subscribe call.

            </evt:doc>
        </documentation>
    </annotation>
    <element name="Source" type="anyURI" />
    <!-- Notification Type -->
    <annotation>
        <documentation>
            <evt:doc>
	Describes the type of the notification. Wildcard are not
	allowed.
            </evt:doc>
        </documentation>
    </annotation>
    <element name="Type" type="anyURI" />
    <!-- Notification CreatedOn  -->
    <annotation>
        <documentation>
            <evt:doc>
	The date and time that uniquely identify the instant when the
	notification was created. This time should be equal to the
	event or events time that generated this notification.
            </evt:doc>
        </documentation>
    </annotation>
    <element name="CreatedOn" type="dateTime" />
    <!-- Notification ExpiresOn -->
    <annotation>
        <documentation>
            <evt:doc>
	An optional element to indicate how long the notification is
	valid for. Events happen at a single point in time but
	notification can last longer since they are a physical
	representation of the event that propagates through systems.


	A system SHOULD not propagate any notification that have
	expired though the mechanisms described in this
	specification. However, for audit and logging purpose, it is
	expected that expired notifications will be transmistted using
	the apropriate means.


	If ExpiresOn is present, the value should be bigger or equal
	to the one in CreatedOn.
            </evt:doc>
        </documentation>
    </annotation>
    <element name="ExpiresOn" type="dateTime" />
    <!-- Notification Element -->
    <annotation>
        <documentation>
            <evt:doc>
	The Notification element is the basic building block used to
	convey information about events. It contains the minimal set
	of information to sustain the subscription protocal and ensure
	scalability. It is very generic and extensible.

	The optional Id attribute can be used to uniquely identify the
	notification in the list. To uniquely identify a notification,
	the concatenation of the content of the Source, Type and
	CreatedOn can be used.

	If ExpiresOn is present, the value should be bigger or equal
	to the one in CreatedOn.
            </evt:doc>
        </documentation>
    </annotation>
    <element name="Notification" type="evt:NotificationType" />
    <complexType name="NotificationType">
        <sequence>
            <element ref="evt:Source" />
            <element ref="evt:Type" />
            <element ref="evt:CreatedOn" />
            <element ref="evt:ExpiresOn" minOccurs="0" maxOccurs="1" />
            <any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </sequence>
        <attribute name="Id" type="ID" use="optional" />
        <anyAttribute namespace="##other" processContents="skip" />
    </complexType>
    <!-- CallBack -->
    <annotation>
        <documentation>
            <evt:doc>
        Extensible element to carry callback addresses. The URI
        element should be dereferencable.
            </evt:doc>
        </documentation>
    </annotation>
    <element name="CallBack" type="evt:CallBackType" />
    <complexType name="CallBackType">
        <sequence>
            <element name="URI" type="anyURI" />
            <any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
        </sequence>
        <anyAttribute namespace="##other" processContents="skip" />
    </complexType>
</schema>