<?xml version="1.0" encoding="UTF-8"?>
<!--
  Spring application context for use with remote data sources.

  This context expects a parent that provides the following:

  - dataSource : a JDBC DataSource
  - dataSourceHibernateProperties : Hibernate properties to use (must include the hibernate dialect)
  - dataSourceIdGeneratorClass : The class name of the ID generator to use
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation= "http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!-- enable automatic proxy generation for any class or superclass annotated with @Transactional -->
    <tx:annotation-driven order="20000"/>

    <!--
     Hibernate properties
    -->
    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="propertiesArray">
            <list>
                <props>
                    <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>
                    <prop key="hibernate.connection.isolation">4</prop>
                    <prop key="hibernate.connection.autocommit">false</prop>
                    <prop key="hibernate.validator.apply_to_ddl">false</prop>
                    <prop key="javax.persistence.validation.group.pre-persist"/>
                    <prop key="javax.persistence.validation.group.pre-update"/>
                    <prop key="javax.persistence.validation.group.pre-remove"/>
                </props>
                <ref bean="dataSourceHibernateProperties"/>
            </list>
        </property>
    </bean>

    <!--
     Hibernate session factory with auditing support
    -->
    <bean id="sessionFactory" class="com.l7tech.server.util.ConfiguredSessionFactoryBean">
        <constructor-arg index="0">
            <map>
                <entry key="layer7-generator" value-ref="dataSourceIdGeneratorClass"/>
            </map>
        </constructor-arg>
        <property name="mappingResources">
            <list>
                <value>com/l7tech/server/resources/audit.hbm.xml</value>
            </list>
        </property>
        <property name="annotatedClasses">
            <list>
                <!-- Customer Mapping -->
                <value>com.l7tech.gateway.common.mapping.MessageContextMappingKeys</value>
                <value>com.l7tech.gateway.common.mapping.MessageContextMappingValues</value>
            </list>
        </property>
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
    </bean>


    <!--
      Hibernate transaction manager
    -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <!-- Abstract "parent" of any bean that needs access to sessionFactory and transactionManager -->
    <bean id="hibernateBean" abstract="true">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!-- Audit record manager -->
    <bean id="auditRecordManager" class="com.l7tech.server.audit.SimpleAuditRecordManagerImpl" parent="hibernateBean"/>

</beans>
