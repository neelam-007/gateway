<?xml version="1.0" encoding="utf-8"?>
<definitions targetNamespace="http://schemas.hp.com/wsmf/2003/03/Events#" xmlns:evt="http://schemas.hp.com/wsmf/2003/03/Events#" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/">
    <!-- BEGIN TYPES SECTION -->
    <types>
        <xs:schema targetNamespace="http://schemas.hp.com/wsmf/2003/03/Events#" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
            <xs:include schemaLocation="WS-Events.xsd" />
            <!-- Discovery -->
            <xs:element name="GetSupportedEventTypes">
                <xs:complexType />
            </xs:element>
            <xs:element name="GetSupportedEventTypesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element ref="evt:EventTypeList" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <!-- Subscription -->
            <xs:element name="PushSubscribe">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="EventTypeList" type="evt:EventTypeListType" />
                        <xs:element name="ExpirationTime" type="xs:dateTime" />
                        <xs:element name="CallbackUrl" type="evt:CallBackType" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="PullSubscribe">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="EventTypeList" type="evt:EventTypeListType" />
                        <xs:element name="ExpirationTime" type="xs:dateTime" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="SubscribeResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Result" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <!-- Subscription cancellation -->
            <xs:element name="CancelSubscription">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubscriptionId" type="xs:string" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CancelSubscriptionResponse" />
            <!-- Getters for the pull mode -->
            <!-- Get since Id -->
            <xs:element name="GetEventsSinceId">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubscriptionId" type="xs:string" />
                        <xs:element name="EventId" type="xs:anyURI" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <!-- Get since date -->
            <xs:element name="GetEventsSinceDate">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubscriptionId" type="xs:string" />
                        <xs:element name="Date" type="xs:dateTime" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <!-- Get by date range -->
            <xs:element name="GetEventsRangeByDate">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="SubscriptionId" type="xs:string" />
                        <xs:element name="BeginDate" type="xs:dateTime" />
                        <xs:element name="EndDate" type="xs:dateTime" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <!-- Notify -->
            <xs:element name="Notify">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element ref="evt:NotificationList" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
    </types>
    <!-- END TYPES SECTION -->
    <!-- BEGIN MESSAGES SECTION -->
    <!-- Event Types discovery -->
    <message name="GetSupportedEventTypesInput">
        <part name="document" element="evt:GetSupportedEventTypes" />
    </message>
    <message name="GetSupportedEventTypesOutput">
        <part name="document" element="evt:GetSupportedEventTypesResponse" />
    </message>
    <!-- Push and Pull Subscribe messages -->
    <message name="PushSubscribeInput">
        <part name="document" element="evt:PushSubscribe" />
    </message>
    <message name="PullSubscribeInput">
        <part name="document" element="evt:PullSubscribe" />
    </message>
    <message name="SubscribeOutput">
        <part name="document" element="evt:SubscribeResponse" />
    </message>
    <!-- Subscription cancellation -->
    <message name="CancelSubscriptionInput">
        <part name="document" element="evt:CancelSubscription" />
    </message>
    <message name="CancelSubscriptionOutput">
        <part name="document" element="evt:CancelSubscriptionResponse" />
    </message>
    <!-- Getters messages for the pull model -->
    <message name="GetEventsSinceIdInput">
        <part name="document" element="evt:GetEventsSinceId" />
    </message>
    <message name="GetEventsSinceDateInput">
        <part name="document" element="evt:GetEventsSinceDate" />
    </message>
    <message name="GetEventsRangeByDateInput">
        <part name="document" element="evt:GetEventsRangeByDate" />
    </message>
    <!-- One response fits all getters -->
    <message name="GetEventsOutput">
        <part name="document" element="evt:NotificationList" />
    </message>
    <!-- Notify  message for the push model-->
    <message name="NotifyInput">
        <part name="document" element="evt:Notify" />
    </message>
    <!-- Notify OLD DEFINITION message for the push model>
    <message name="NotifyInput">
      <part name="document" element="evt:NotificationList" />
    </message-->
    <!-- END MESSAGES SECTION -->
    <!-- BEGIN PORTTYPE SECTION -->
    <portType name="EventPushPortType">
        <operation name="GetSupportedEventTypes" evt:attributeType="evt:EventTypeListType">
            <input message="evt:GetSupportedEventTypesInput" />
            <output message="evt:GetSupportedEventTypesOutput" />
        </operation>
        <operation name="PushSubscribe" evt:attributeType="xs:string">
            <input message="evt:PushSubscribeInput" />
            <output message="evt:SubscribeOutput" />
        </operation>
        <operation name="CancelSubscription">
            <input message="evt:CancelSubscriptionInput" />
            <output message="evt:CancelSubscriptionOutput" />
        </operation>
    </portType>
    <portType name="NotifyPortType">
        <operation name="Notify">
            <input message="evt:NotifyInput" />
        </operation>
    </portType>
    <portType name="EventPullPortType">
        <operation name="GetSupportedEventTypes" evt:attributeType="evt:EventTypeListType">
            <input message="evt:GetSupportedEventTypesInput" />
            <output message="evt:GetSupportedEventTypesOutput" />
        </operation>
        <operation name="PullSubscribe" evt:attributeType="xs:string">
            <input message="evt:PullSubscribeInput" />
            <output message="evt:SubscribeOutput" />
        </operation>
        <operation name="CancelSubscription">
            <input message="evt:CancelSubscriptionInput" />
            <output message="evt:CancelSubscriptionOutput" />
        </operation>
        <operation name="GetEventsSinceId">
            <input message="evt:GetEventsSinceIdInput" />
            <output message="evt:GetEventsOutput" />
        </operation>
        <operation name="GetEventsSinceDate">
            <input message="evt:GetEventsSinceDateInput" />
            <output message="evt:GetEventsOutput" />
        </operation>
        <operation name="GetEventsRangeByDate">
            <input message="evt:GetEventsRangeByDateInput" />
            <output message="evt:GetEventsOutput" />
        </operation>
    </portType>
    <!-- END PORTTYPE SECTION -->
    <!-- BEGIN BINDING SECTION -->
    <!-- Push subscription bindings -->
    <binding name="EventPushSoapHttpBinding" type="evt:EventPushPortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
        <operation name="GetSupportedEventTypes">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="PushSubscribe">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="CancelSubscription">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
    </binding>
    <!-- Push notification bindings -->
    <binding name="NotifySoapHttpBinding" type="evt:NotifyPortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
        <operation name="Notify">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
        </operation>
    </binding>
    <!-- Pull subscription and getters bindings -->
    <binding name="EventPullSoapHttpBinding" type="evt:EventPullPortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
        <operation name="GetSupportedEventTypes">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="PullSubscribe">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="CancelSubscription">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="GetEventsSinceId">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="GetEventsSinceDate">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        <operation name="GetEventsRangeByDate">
            <soap:operation soapAction="" style="document" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
    </binding>
    <!-- END BINDING SECTION -->
</definitions>