#
# Server Configuration Properties (used by ServerConfig)
#

ssgHome.description = SSG home directory
ssgHome.systemProperty = com.l7tech.server.home
ssgHome.default = /ssg
ssgHome.setSystemProperty = true

fs.description = File separator (/ on Unix, \\ in Windows, etc.)
fs.systemProperty = file.separator
fs.default = /

# General ServerConfig configuration
jndiPrefix = java:comp/env
propertyPrefix = com.l7tech.server
ssg.etc = ${ssgHome}${fs}etc
ssg.conf = ${ssg.etc}${fs}conf
resolutionPackage = com.l7tech.server.service.resolution

partitionHome.description = Base directory for all partitions
partitionHome.systemProperty = ${propertyPrefix}.partitionHome
partitionHome.default = ${ssg.conf}${fs}partitions
partitionHome.setSystemProperty = true

partitionName.description = Name of the partition to start
partitionName.systemProperty = ${propertyPrefix}.partitionName
partitionName.default = default_
partitionName.setSystemProperty = true

# Directory for SSG configuration files
configDirectory.description = Directory for SSG configuration files
configDirectory.systemProperty = ${propertyPrefix}.configDirectory
configDirectory.default = ${partitionHome}${fs}${partitionName}
configDirectory.setSystemProperty = true

# space-delimited list of ServerComponentLifecycle instances to start on boot
serverComponents.description = Server components to start on boot
serverComponents.jndi = ${jndiPrefix}/ServerComponents
serverComponents.systemProperty = ${propertyPrefix}.serverComponents
serverComponents.default = \
    com.l7tech.server.cluster.ClusterBootProcess


# Numeric server ID (default generated from IP address)
serverId.description = Numeric server identifier
serverId.jndi = ${jndiPrefix}/ServerId
serverId.systemProperty = ${propertyPrefix}.serverId

# Multicast address (default generated randomly)
multicastAddress.description = Cluster multicast address
multicastAddress.jndi = ${jndiPrefix}/MulticastAddress
multicastAddress.systemProperty = ${propertyPrefix}.multicastAddress

# keystore.properties path
keystorePropertiesPath.description = SSL keystore properties path
keystorePropertiesPath.default = ${configDirectory}${fs}keystore.properties
keystorePropertiesPath.jndi = ${jndiPrefix}/KeystorePropertiesPath
keystorePropertiesPath.systemProperty = ${propertyPrefix}.keystorePropertiesPath

# ldap templates path
ldapTemplatesPath.description = LDAP templates path
ldapTemplatesPath.default = ${ssg.etc}${fs}ldapTemplates
ldapTemplatesPath.systemProperty = ${propertyPrefix}.ldapTemplatesPath

# uddi templates path
uddiTemplatesPath.description = UDDI templates path
uddiTemplatesPath.default = ${ssg.etc}${fs}uddiTemplates
uddiTemplatesPath.systemProperty = ${propertyPrefix}.uddiTemplatesPath

# hibernate.properties path
hibernatePropertiesPath.description = Hibernate properties path
hibernatePropertiesPath.default = ${configDirectory}${fs}hibernate.properties
hibernatePropertiesPath.jndi = ${jndiPrefix}/HibernatePropertiesPath
hibernatePropertiesPath.systemProperty = ${propertyPrefix}.hibernatePropertiesPath

# directory for ssg log files
logDirectory.description = Directory for SSG log files
logDirectory.default = ${ssgHome}${fs}logs
logDirectory.systemProperty = ${propertyPrefix}.logDirectory

# template for log file pattern
#  0 - partition name
#  1 - sink name (e.g. "ssg")
#  2 - "%g" the generation number to distinguish rotated logs
#  3 - "%u" a unique number to resolve conflicts 
logFileTemplate.description = Template for log filename pattern ('{0}' is partition name, '{1}' is sink name, '{2}' the generation number to distinguish rotated logs, '{3}' a unique number to resolve file conflicts)
logFileTemplate.default = {0}-{1}_{2}_{3}.log
logFileTemplate.systemProperty = ${propertyPrefix}.logFileTemplate
logFileTemplate.clusterProperty = log.filenameTemplate

# customized logger levels
logLevels.description = Log level configuration (one level per line)
logLevels.default = com.l7tech.level = CONFIG
logLevels.clusterProperty = log.levels

# server.xml (connector properties) path.  read-only, for supporting upgrades from pre-4.3 configurations
serverXmlPath.description = server.xml (connector properties) path
serverXmlPath.default = ${configDirectory}${fs}server.xml
serverXmlPath.jndi = ${jndiPrefix}/ServerXmlPath
serverXmlPath.systemProperty = ${propertyPrefix}.serverXmlPath

# comma-separated list of IP addresses (defaults to all)
ipAddresses.description = IP addresses
ipAddresses.jndi = ${jndiPrefix}/IpAddresses
ipAddresses.systemProperty = ${propertyPrefix}.ipAddresses

#
# The defaultHttpPort and defaultHttpsPort are kept up-to-date dynamically by the
# SsgConnectorManager, pointing at an HTTP or HTTPS port (respectively) that has
# the service OTHER_SERVLETS enabled, or removed completely whenever an appropriate
# connector doesn't exist.
#
defaultHttpPort.default = 8080
defaultHttpPort.mutable = true
httpPort.description = HTTP listening port for built-in services
httpPort.default = ${defaultHttpPort}
httpPort.jndi = ${jndiPrefix}/HttpPort
httpPort.systemProperty = ${propertyPrefix}.httpPort

defaultHttpsPort.default = 8443
defaultHttpsPort.mutable = true
httpsPort.description = HTTPS listening port for built-in services
httpsPort.default = ${defaultHttpsPort}
httpsPort.jndi = ${jndiPrefix}/HttpsPort
httpsPort.systemProperty = ${propertyPrefix}.httpsPort

#
# The port used for internode communications in a cluster
#
defaultClusterPort.default = 2124
deafultClusterPort.systemProperty = ${propertyPrefix}.clusterPort

clusterPort.description = Inter-Node communication port for clusters
clusterPort.default = ${defaultClusterPort}
clusterPort.clusterProperty = cluster.internodePort

#
# The host used for accessing the cluster
#
defaultClusterHost.default = 
defaultClusterHost.systemProperty = java.rmi.server.hostname

clusterHost.description = External hostname from outside the cluster
clusterHost.default = ${defaultClusterHost}

#
# Following two settings should be modified if the cluster is configured in such a
# way that port forwarding is used
#
clusterhttpport.description = external HTTP port from outside the cluster
clusterhttpport.default = ${httpPort}
clusterhttpport.jndi = ${jndiPrefix}/ClusterHttpPort
clusterhttpport.systemProperty = ${propertyPrefix}.clusterHttpPort

clusterhttpsport.description = external HTTPS port from outside the cluster
clusterhttpsport.default = ${httpsPort}
clusterhttpsport.jndi = ${jndiPrefix}/ClusterHttpsPort
clusterhttpsport.systemProperty = ${propertyPrefix}.clusterHttpsPort

# hostname (defaults to OS hostname)
hostname.description = Hostname
hostname.jndi = ${jndiPrefix}/Hostname
hostname.systemProperty = ${propertyPrefix}.hostname

# system properties path
systemPropertiesPath.description = System properties path
systemPropertiesPath.default = ${configDirectory}${fs}system.properties
systemPropertiesPath.jndi = ${jndiPrefix}/SystemPropertiesPath
systemPropertiesPath.systemProperty = ${propertyPrefix}.systemPropertiesPath

#custom assertions (file name or resource name)
custom.assertions.file=custom_assertions.properties
custom.assertions.modules=${ssgHome}${fs}modules${fs}lib
custom.assertions.temp=${configDirectory}${fs}var${fs}modules

# ldap fallback timeout
# the time (in ms) for which the ldap connector will not try to reconnect to
# a particular ldap url when the connection failed
ldap.reconnect.timeout = 60000

# Audit settings
auditMessageThreshold.description = Minimum level required of a Message Audit Record for it to be saved to the database (Level)
auditMessageThreshold.default = WARNING
auditMessageThreshold.jndi = ${jndiPrefix}/AuditMessageThreshold
auditMessageThreshold.systemProperty = ${propertyPrefix}.audit.messageThreshold
auditMessageThreshold.clusterProperty = audit.messageThreshold

auditAdminThreshold.description = Minimum level required of an Admin Audit Record for it to be saved to the database (Level)
auditAdminThreshold.default = INFO
auditAdminThreshold.jndi = ${jndiPrefix}/AuditAdminThreshold
auditAdminThreshold.systemProperty = ${propertyPrefix}.audit.adminThreshold
auditAdminThreshold.clusterProperty = audit.adminThreshold

# asssocated logs threshold
auditAssociatedLogsThreshold.default = INFO
auditAssociatedLogsThreshold.description = Minimum level required of an Audit Detail Message for it to be saved to the database (Level)
auditAssociatedLogsThreshold.clusterProperty = audit.detailThreshold

# client component system logs threshold
auditClientSystemLogsThreshold.default = WARNING
auditClientSystemLogsThreshold.description = Minimum level required of an System Audit Record for a client component for it to be saved to the database (Level)
auditClientSystemLogsThreshold.clusterProperty = audit.clientServicesThreshold

auditHintingEnabled.description = Enable audit messages to provide hints for audited information, such as request XML (true/false)
auditHintingEnabled.default = true
auditHintingEnabled.systemProperty = ${propertyPrefix}.audit.hinting
auditHintingEnabled.clusterProperty = audit.hinting

auditAssertionStatusEnabled.description = Use the highest assertion status level when checking if a record should be saved (true/false)
auditAssertionStatusEnabled.default = true
auditAssertionStatusEnabled.systemProperty = ${propertyPrefix}.audit.assertionStatus
auditAssertionStatusEnabled.clusterProperty = audit.assertionStatus

auditAssociatedLogsThresholdRespected.description = Use the audit detail level when checking if a record should be saved (true/false)
auditAssociatedLogsThresholdRespected.default = true
auditAssociatedLogsThresholdRespected.systemProperty = ${propertyPrefix}.audit.detailThresholdRespected
auditAssociatedLogsThresholdRespected.clusterProperty = audit.detailThresholdRespected

# default = 1 week
auditPurgeMinimumAge.description = Minimum age of Audit Records that can be purged (Hours)
auditPurgeMinimumAge.default = 168
auditPurgeMinimumAge.jndi = ${jndiPrefix}/AuditPurgeMinimumAge
auditPurgeMinimumAge.systemProperty = ${propertyPrefix}.audit.purgeMinimumAge
auditPurgeMinimumAge.clusterProperty = audit.purgeMinimumAge

auditSigningEnabled.description = Sign audited data (true/false)
auditSigningEnabled.default = false
auditSigningEnabled.systemProperty = ${propertyPrefix}.audit.sign
auditSigningEnabled.clusterProperty = audit.signing

auditBatchExternal.description = Should audit information be batched when logging (true/false)
auditBatchExternal.default = true
auditBatchExternal.systemProperty = ${propertyPrefix}.audit.batchExternal
auditBatchExternal.clusterProperty = audit.batchExternal

# default = /ssg/var/attachments
attachmentDirectory.description = Directory in which to cache large SOAP attachments
attachmentDirectory.default = ${configDirectory}${fs}var${fs}attachments
attachmentDirectory.jndi = ${jndiPrefix}/AttachmentDirectory
attachmentDirectory.systemProperty = ${propertyPrefix}.attachmentDirectory

# default = /ssg/modules/assertions
modularAssertionsDirectory.description = Directory in which to find modular assertion jarfiles
modularAssertionsDirectory.default = ${ssgHome}${fs}modules${fs}assertions
modularAssertionsDirectory.jndi = ${jndiPrefix}/ModularAssertionsDirectory
modularAssertionsDirectory.systemProperty = ${propertyPrefix}.modularAssertionsDirectory

modularAssertionsRescanMillis.description = Milliseconds in between checks to see if the modules directory timestamp has changed
modularAssertionsRescanMillis.default = 4523
modularAssertionsRescanMillis.jndi = ${jndiPrefix}/ModularAssertionsRescanMillis
modularAssertionsRescanMillis.systemProperty = ${propertyPrefix}.modularAssertionsRescanMillis

modularAssertionsFileExtensions.description = Space separated list of file extensions (including leading dot) that will be considered as modular assertions.  Set to a single dash to disable scanning for modules
modularAssertionsFileExtensions.default = .jar .assertion .ass .assn .aar
modularAssertionsFileExtensions.jndi = ${jndiPrefix}/ModularAssertionsFileExtensions
modularAssertionsFileExtensions.systemProperty = ${propertyPrefix}.modularAssertionsFileExtensions

# default = 131071
attachmentDiskThreshold.description = Threshold for size of attachments in a single request to keep in RAM (Bytes)
attachmentDiskThreshold.default = 1048576
attachmentDiskThreshold.jndi = ${jndiPrefix}/AttachmentDiskThreshold
attachmentDiskThreshold.systemProperty = ${propertyPrefix}.attachmentDiskThreshold
attachmentDiskThreshold.clusterProperty = attachment.diskThreshold

# Symantec AntiVirus ScanEngine (savseEnable = yes to enable scanning)
savseEnable.description = Whether or not this gateway has access to a sav scan engine to do virus scanning
savseEnable.default = no
savseEnable.jndi = ${jndiPrefix}/SavSEEnable
savseEnable.systemProperty = ${propertyPrefix}.savseEnable

# The hostname of the sav se
savseHost.description = The hostname of the sav scan engine that this gateway can connect to
savseHost.default = 127.0.0.1
savseHost.jndi = ${jndiPrefix}/SavSEHost
savseHost.systemProperty = ${propertyPrefix}.savseHost

# The port of the sav se
savsePort.description = The port number associated with the savseHost property
savsePort.default = 7777
savsePort.jndi = ${jndiPrefix}/SavSEPort
savsePort.systemProperty = ${propertyPrefix}.savsePort

# the number of max results in an idendity provider search result operation
maxLdapSearchResultSize.description = The number of max results in an idendity provider search result operation
maxLdapSearchResultSize.default = 50
maxLdapSearchResultSize.jndi = ${jndiPrefix}/MaxLDAPResSize
maxLdapSearchResultSize.systemProperty = ${propertyPrefix}.maxLdapSearchResultSize

metricsFineInterval.description = Time interval for Service Metrics fine resolution bins (Milliseconds). (Note: A cluster-wide restart is required for changes to apply.)
metricsFineInterval.default = 5000
metricsFineInterval.systemProperty = com.l7tech.service.metrics.fineBinInterval
metricsFineInterval.clusterProperty = metrics.fineInterval

# passthrough filter for wsdl and policy downloads (requests for such documents will not require authentication
# if they come from an ip address belowmentioned)
# for example, a value could look like "127.0.0.1 192.168" and would allow localhost as well as anything starting with 192.168
passthroughDownloads.description = Remote IPs of requestors allowed to download WSDL and policy documents without credentials (Space separated list)
passthroughDownloads.default = 127.0.0.1
passthroughDownloads.systemProperty = com.l7tech.service.passthroughdownloads
passthroughDownloads.clusterProperty = service.passthroughdownloads

# IO timeout settings
ioInReadTimeout.description = IO timeout for incoming requests (Milliseconds)
ioInReadTimeout.default = 60000
ioInReadTimeout.systemProperty = ${propertyPrefix}.timeout
ioInReadTimeout.clusterProperty = io.timeout

ioInSlowReadThreshold.description = IO timeout for incoming request rate checking (Milliseconds)
ioInSlowReadThreshold.default = 60000
ioInSlowReadThreshold.systemProperty = ${propertyPrefix}.rateTimeout
ioInSlowReadThreshold.clusterProperty = io.rateTimeout

ioInSlowReadRate.description = Minimum permissible rate for incoming requests (Bytes per second)
ioInSlowReadRate.default = 1024
ioInSlowReadRate.systemProperty = ${propertyPrefix}.rateLimit
ioInSlowReadRate.clusterProperty = io.rateLimit

ioOutConnectionTimeout.description = IO timeout for outbound connection (Milliseconds)
ioOutConnectionTimeout.default = 30000
ioOutConnectionTimeout.systemProperty = ${propertyPrefix}.outConnectTimeout
ioOutConnectionTimeout.clusterProperty = io.outConnectTimeout

ioOutReadTimeout.description = IO timeout for outbound response (Milliseconds)
ioOutReadTimeout.default = 60000
ioOutReadTimeout.systemProperty = ${propertyPrefix}.outTimeout
ioOutReadTimeout.clusterProperty = io.outTimeout

ioHttpsHostVerify.description = Verify server host names against certificate name (true/false)
ioHttpsHostVerify.default = true
ioHttpsHostVerify.clusterProperty = io.httpsHostVerify

ioHttpUseExpectContinue.description = Use an HTTP 1.1 Expect/Continue handshake (true/false)
ioHttpUseExpectContinue.default = false
ioHttpUseExpectContinue.clusterProperty = io.httpExpectContinue

ioHttpNoKeepAlive.description = Disable HTTP Keep-Alive connections (true/false)
ioHttpNoKeepAlive.default = false
ioHttpNoKeepAlive.clusterProperty = io.httpDisableKeepAlive

ioHttpVersion.description = The HTTP version to use (1.0/1.1)
ioHttpVersion.default = 1.1
ioHttpVersion.clusterProperty = io.httpVersion

ioHttpPoolMaxIdleTime.description = Time an idle thread will wait for additional work before shutting down (milliseconds)
ioHttpPoolMaxIdleTime.default = 60000
ioHttpPoolMaxIdleTime.systemProperty = ${propertyPrefix}.ioHttpPoolMaxIdleTime

ioHttpPoolMaxConcurrency.description = Maximum number of concurrent active HTTP connections
ioHttpPoolMaxConcurrency.default = 200
ioHttpPoolMaxConcurrency.systemProperty = ${propertyPrefix}.ioHttpPoolMaxConcurrency
ioHttpPoolMaxConcurrency.clusterProperty = io.httpMaxConcurrency

ioHttpPoolMinSpareThreads.description = Minimum number of threads kept ready, even when fully idle
ioHttpPoolMinSpareThreads.default = 25
ioHttpPoolMinSpareThreads.systemProperty = ${propertyPrefix}.ioHttpPoolMinSpareThreads

ioJmsErrorSleep.description = Time to sleep after a connection error for an inbound JMS Queue (timeunit)
ioJmsErrorSleep.default = 60s
ioJmsErrorSleep.clusterProperty = jms.connectErrorSleep

ioJmsMessageMaxBytes.description = Maximum number of bytes permitted for a JMS message, or 0 for unlimited (Integer)
ioJmsMessageMaxBytes.default = 5242880
ioJmsMessageMaxBytes.systemProperty = ${propertyPrefix}.jmsMessageMaxBytes
ioJmsMessageMaxBytes.clusterProperty = io.jmsMessageMaxBytes

ioStaleCheckCount.description = Number of stale checked connections per interval (Integer)
ioStaleCheckCount.default = 1
ioStaleCheckCount.systemProperty = com.l7tech.common.http.prov.apache.CommonsHttpClient.staleCheckCount
ioStaleCheckCount.clusterProperty = io.staleCheckCount

ioStaleCheckHosts.description = Maximum mumber of stale checked hosts (Integer)
ioStaleCheckHosts.default = 10
ioStaleCheckHosts.systemProperty = com.l7tech.common.http.prov.apache.CommonsHttpClient.staleCheckHosts
ioStaleCheckHosts.clusterProperty = io.staleCheckHosts

ioXmlPartMaxBytes.description = Maximum number of bytes permitted in the XML part of a message, or 0 for unlimited (Integer)
ioXmlPartMaxBytes.default = 5242880
ioXmlPartMaxBytes.systemProperty = ${propertyPrefix}.xmlPartMaxBytes
ioXmlPartMaxBytes.clusterProperty = io.xmlPartMaxBytes

ioAttachmentSignedMaxBytes.description = Maximum number of bytes permitted in each signed attachment, or 0 for unlimited (Integer)
ioAttachmentSignedMaxBytes.default = 5242880
ioAttachmentSignedMaxBytes.systemProperty
ioAttachmentSignedMaxBytes.clusterProperty = io.signedPartMaxBytes

# Old name of this setting, but defaults live here -- new one points at this one for defaults
xsltMaxCacheEntries.description = Maximum number of cached stylesheets loaded from URLs (Integer)
xsltMaxCacheEntries.default = 100
xsltMaxCacheEntries.systemProperty = ${propertyPrefix}.xsltcache.maxEntries
xsltMaxCacheEntries.clusterProperty = xsltcache.maxEntries

# Old name of this setting, but defaults live here -- new one points at this one for defaults
xsltMaxCacheAge.description = Maximum age of cached stylesheets loaded from URLs (Milliseconds)
xsltMaxCacheAge.default = 300000
xsltMaxCacheAge.systemProperty = ${propertyPrefix}.xsltcache.maxAge
xsltMaxCacheAge.clusterProperty = xsltcache.maxAge

schemaMaxCacheAge.description = Maximum age of cached XML Schema documents loaded from URLs (Milliseconds)
schemaMaxCacheAge.default = 30000
schemaMaxCacheAge.systemProperty = ${propertyPrefix}.schemacache.maxAge
schemaMaxCacheAge.clusterProperty = schemacache.maxAge

schemaMaxCacheEntries.description = Maximum number of cached XML schema documents loaded from URLs (Integer)
schemaMaxCacheEntries.default = 100
schemaMaxCacheEntries.systemProperty = ${propertyPrefix}.schemacache.maxEntries
schemaMaxCacheEntries.clusterProperty = schemacache.maxEntries

schemaRecompileLatency.description = Minimum time that must elapse in between two consecutive rebuilds of the hardware schema table (Milliseconds). This prevents continuous rebuilding.
schemaRecompileLatency.default = 10000
schemaRecompileLatency.systemProperty = ${propertyPrefix}.schemacache.recompileLatency
schemaRecompileLatency.clusterProperty = schemacache.recompileLatency

schemaRecompileMinAge.description = Time after a schema becomes hardware eligible to wait for additional schemas to become eligible before triggering a batch rebuild of the hardware schema table (Milliseconds). Schema status changes often occur in clumps.
schemaRecompileMinAge.default = 500
schemaRecompileMinAge.systemProperty = ${propertyPrefix}.schemacache.recompileMinAge
schemaRecompileMinAge.clusterProperty = schemacache.recompileMinAge

schemaRecompileMaxAge.description = Maximum time a needed schema hardware cache rebuild can be held to wait for additional schemas to stop arriving (Milliseconds)
schemaRecompileMaxAge.default = 20000
schemaRecompileMaxAge.systemProperty = ${propertyPrefix}.schemacache.recompileMaxAge
schemaRecompileMaxAge.clusterProperty = schemacache.recompileMaxAge

schemaCacheMaxSchemaSize.description = Maximum size of schema allowed into the schema cache (bytes)
schemaCacheMaxSchemaSize.default = 1000000
schemaCacheMaxSchemaSize.systemProperty = ${propertyPrefix}.schemacache.maxSchemaSize
schemaCacheMaxSchemaSize.clusterProperty = schemacache.maxSchemaSize

ephemeralKeyMaxCacheEntries.description = Maximum number of cached ephemeral key thumbprints per-node, or 0 to disable ephemeral key caching (Integer)
ephemeralKeyMaxCacheEntries.default = 1000
ephemeralKeyMaxCacheEntries.systemProperty = ${propertyPrefix}.ekeycache.maxEntries
ephemeralKeyMaxCacheEntries.clusterProperty = ekeycache.maxEntries

privateKeyCacheMaxAgeMillis.description = Maximum time a recently-used private key can be held for reuse (Milliseconds)
privateKeyCacheMaxAgeMillis.default = 120000
privateKeyCacheMaxAgeMillis.systemProperty = ${propertyPrefix}.privatekeycache.maxAge
privateKeyCacheMaxAgeMillis.clusterProperty = privatekeycache.maxAge

rsaSignatureCacheMaxEntries.description = Maximum number of cached RSA signature results, or 0 to disable RSA signature caching (Integer)
rsaSignatureCacheMaxEntries.default = 0
rsaSignatureCacheMaxEntries.systemProperty = com.l7tech.common.security.xml.processor.MemoizedRsaSha1SignatureMethod.sigVerifyCacheSize
rsaSignatureCacheMaxEntries.clusterProperty = rsasigcache.maxEntries
rsaSignatureCacheMaxEntries.setSystemProperty = true

defaultfaultlevel.description = Level of details in SOAP faults returned by the SSG (can be overriden by FaultLevel assertion). Values are 0 for drop connection, 1 for template, 2 for generic, 3 for medium details, 4 for full details.
defaultfaultlevel.default = 2
defaultfaultlevel.systemProperty = ${propertyPrefix}.fault.level
defaultfaultlevel.clusterProperty = soapfault.level

defaultfaulttemplate.description = Template used for SOAP faults returned by the SSG (Text). This is only relevent when defaultfaultlevel is set to template.
defaultfaulttemplate.default = <s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body><s:Fault><faultcode>s:Client</faultcode><faultstring>Client Error</faultstring></s:Fault></s:Body></s:Envelope>
defaultfaulttemplate.systemProperty = ${propertyPrefix}.fault.template
defaultfaulttemplate.clusterProperty = soapfault.template

defaultfaultpolicyurl.description = Whether or not the SSG includes the policy download URL when returning SOAP faults (true/false)
defaultfaultpolicyurl.default = true
defaultfaultpolicyurl.systemProperty = ${propertyPrefix}.fault.policyurl
defaultfaultpolicyurl.clusterProperty = soapfault.policyurl

uddi.url.inquiry.description = List of UDDI Inquiry URLs (Space separated list)
uddi.url.inquiry.clusterProperty = uddi.inquiryUrls
uddi.result.max_rows.description = The maximum number of records to retrieve for any inquiry.
uddi.result.max_rows.clusterProperty = uddi.limit
uddi.result.max_rows.default = 100
uddi.result.batch_size.description = The number of records to retrieve at a time (Integer)
uddi.result.batch_size.clusterProperty = uddi.batch
uddi.result.batch_size.default = 100

# This setting is no longer used (should now be configured via manager log sink UI)
trafficLoggerEnabled.description = Whether or not traffic should be recorded (true/false)
trafficLoggerEnabled.default = false
trafficLoggerEnabled.clusterProperty = trafficlogger.enabled
trafficLoggerEnabled.systemProperty = ${propertyPrefix}.trafficlogger.enabled
trafficLoggerEnabled.visible = false

trafficLoggerDetail.description = Template for logged information related to the request (Text)
trafficLoggerDetail.default = ${request.time}, ${request.soap.namespace}, ${request.soap.operationname}, ${response.http.status}
trafficLoggerDetail.clusterProperty = trafficlogger.detail
trafficLoggerDetail.systemProperty = ${propertyPrefix}.trafficlogger.detail

# This setting is no longer used (should now be configured via manager log sink UI)
trafficLoggerPattern.description = File path in the style of java.util.logging.FileHandler.pattern; see java.util.logging (Text)
trafficLoggerPattern.default = ${ssgHome}${fs}logs${fs}traffic_%g_%u.log
trafficLoggerPattern.clusterProperty = trafficlogger.pattern
trafficLoggerPattern.systemProperty = ${propertyPrefix}.trafficlogger.pattern
trafficLoggerPattern.visible = false

# This setting is no longer used (should now be configured via manager log sink UI)
trafficLoggerLimit.description = Approximate maximum size for log files (Bytes). If this is zero, then there is no limit
trafficLoggerLimit.default = 5242880
trafficLoggerLimit.clusterProperty = trafficlogger.limit
trafficLoggerLimit.systemProperty = ${propertyPrefix}.trafficlogger.limit
trafficLoggerLimit.visible = false

# This setting is no longer used (should now be configured via manager log sink UI)
trafficLoggerCount.description = Number of output files (Integer)
trafficLoggerCount.default = 2
trafficLoggerCount.clusterProperty = trafficlogger.count
trafficLoggerCount.systemProperty = ${propertyPrefix}.trafficlogger.count
trafficLoggerCount.visible = false

trafficLoggerRecordReq.description = Append the contents of the request received by the SecureSpan Gateway at the end of each record (true/false)
trafficLoggerRecordReq.default = false
trafficLoggerRecordReq.clusterProperty = trafficlogger.recordreq
trafficLoggerRecordReq.systemProperty = ${propertyPrefix}.trafficlogger.recordreq

trafficLoggerRecordRes.description = Append the contents of the response returned by the SecureSpan Gateway at the end of each record (true/false)
trafficLoggerRecordRes.default = false
trafficLoggerRecordRes.clusterProperty = trafficlogger.recordres
trafficLoggerRecordRes.systemProperty = ${propertyPrefix}.trafficlogger.recordres

pingServletMode.description = Set the permission mode of the Ping Servlet (OFF | REQUIRE_CREDS | OPEN)
pingServletMode.default = REQUIRE_CREDS
pingServletMode.clusterProperty = pingServlet.mode
pingServletMode.systemProperty = ${propertyPrefix}.pingServlet.mode

serviceMetricsEnabled.description = Enable collection of service metrics (true/false)
serviceMetricsEnabled.default = true
serviceMetricsEnabled.clusterProperty = serviceMetrics.enabled
serviceMetricsEnabled.systemProperty = com.l7tech.service.metrics.enabled

wsdlImportFixupEnabled.default = true
wsdlImportFixupEnabled.systemProperty = com.l7tech.service.wsdlimportfix.enabled

wsdlImportProxyEnabled.description = Permit download of WSDL dependencies (WSDL/Schema). When enabled, available WSDL dependencies can be downloaded (true/false)
wsdlImportProxyEnabled.default = false
wsdlImportProxyEnabled.clusterProperty = service.wsdlDependenciesEnabled

schemaSoftwareFallback.description = If true, in the event of a hardware schema validation failure, the validation will be retried in software
schemaSoftwareFallback.default = true
schemaSoftwareFallback.systemProperty = ${propertyPrefix}.schema.softwareFallback
schemaSoftwareFallback.clusterProperty = schema.softwareFallback

samlBeforeOffsetMinute.description = The number of minutes (should be a positive integer) to offset the Not-Before aspect of the validity of SAML statements created by the token service
samlBeforeOffsetMinute.default = 2
samlBeforeOffsetMinute.clusterProperty = samlAssertion.NotBeforeOffsetMinutes
samlBeforeOffsetMinute.systemProperty = ${propertyPrefix}.saml.notbeforeoffsetmin

pkixValidation.identity.description = Default certificate validation setting for identity providers (validate/validatepath/revocation)
pkixValidation.identity.default = validate
pkixValidation.identity.clusterProperty = pkix.validation.identityProvider

pkixValidation.routing.description = Default certificate validation setting for message routing (validate/validatepath/revocation)
pkixValidation.routing.default = validate
pkixValidation.routing.clusterProperty = pkix.validation.routing

pkixValidation.other.description = Default certificate validation setting for other uses (validate/validatepath/revocation)
pkixValidation.other.default = validate
pkixValidation.other.clusterProperty = pkix.validation.other

pkixTrust.useDefaultAnchors.description = Should well known Certificate Authorities be included as Trust Anchors (true/false)
pkixTrust.useDefaultAnchors.default = true
pkixTrust.useDefaultAnchors.clusterProperty = pkix.useDefaultTrustAnchors

pkixCRL.expiry.description = Default setting for CRL expiry age (timeunit)
pkixCRL.expiry.default = 1h
pkixCRL.expiry.clusterProperty = pkix.crl.defaultExpiryAge

pkixCRL.minExpiryAge.description = Minimum allowed value for CRL expiry age (timeunit)
pkixCRL.minExpiryAge.default = 1h
pkixCRL.minExpiryAge.clusterProperty = pkix.crl.minExpiryAge

pkixCRL.maxExpiryAge.description = Maximum allowed value for CRL expiry age (timeunit)
pkixCRL.maxExpiryAge.default = 7d
pkixCRL.maxExpiryAge.clusterProperty = pkix.crl.maxExpiryAge

pkixOCSP.expiry.description = Default setting for OCSP response expiry age (timeunit)
pkixOCSP.expiry.default = 1m
pkixOCSP.expiry.clusterProperty = pkix.ocsp.defaultExpiryAge

pkixOCSP.minExpiryAge.description = Minimum allowed value for OCSP response expiry age (timeunit)
pkixOCSP.minExpiryAge.default = 1s
pkixOCSP.minExpiryAge.clusterProperty = pkix.ocsp.minExpiryAge

pkixOCSP.maxExpiryAge.description = Maximum allowed value for OCSP response expiry age (timeunit)
pkixOCSP.maxExpiryAge.default = 15m
pkixOCSP.maxExpiryAge.clusterProperty = pkix.ocsp.maxExpiryAge

pkixOCSP.useNonce.description = Include a nonce in OCSP requests (true/false)
pkixOCSP.useNonce.default = true
pkixOCSP.useNonce.clusterProperty = pkix.ocsp.useNonce

keyStoreSearchForAlias.description = If a key alias isn't found in the expected keystore, search all other keystores as well (true/false)
keyStoreSearchForAlias.default = true
keyStoreSearchForAlias.clusterProperty = keyStore.searchForAlias

license.expiryWarnAge.description = The period before license/SSL certificate expiry during which a warning should be displayed (timeunit)
license.expiryWarnAge.default = 30d
license.expiryWarnAge.clusterProperty = license.expiryWarningPeriod

trustedCert.expiryCheckPeriod.description = The delay to wait between successive Trusted Cert expiry checks
trustedCert.expiryCheckPeriod.default = 12h
trustedCert.expiryCheckPeriod.clusterProperty = trustedCert.expiryCheckPeriod

trustedCert.expiryFineAge.description = The period prior to the expiry of the Certificate in a Trusted Cert Entry that the Gateway should start logging/auditing FINE-level messages
trustedCert.expiryFineAge.default = 30d
trustedCert.expiryFineAge.clusterProperty = trustedCert.expiryFineAge

trustedCert.expiryInfoAge.description = The period prior to the expiry of the Certificate in a Trusted Cert Entry that the Gateway should start logging/auditing INFO-level messages
trustedCert.expiryInfoAge.default = 7d
trustedCert.expiryInfoAge.clusterProperty = trustedCert.expiryInfoAge

trustedCert.expiryWarningAge.description = The period prior to the expiry of the Certificate in a Trusted Cert Entry that the Gateway should start logging/auditing WARNING-level messages
trustedCert.expiryWarningAge.default = 2d
trustedCert.expiryWarningAge.clusterProperty = trustedCert.expiryWarningAge

serverPolicyValidation.maxConcurrency.description = Maximum number of server-side policy validation jobs that may be active simultaneously.
serverPolicyValidation.maxConcurrency.default = 15
serverPolicyValidation.maxConcurrency.clusterProperty = policyValidation.maxConcurrency

policyVersioningMaxRevisions.description = Maximum number of policy revisions to retain. Only revisions that are not active and which do not have a comment count toward the maximum.
policyVersioningMaxRevisions.default = 20
policyVersioningMaxRevisions.clusterProperty = policyVersioning.maxRevisions

hpsoamEnabled.description = Enable Agent web service for HP SOA Manager (true/false)
hpsoamEnabled.default = false
hpsoamEnabled.clusterProperty = hpsoam.enabled

hpsoamRequireSSL.description = Control whether SSL is required for Agent web service for HP SOA Manager (true/false)
hpsoamRequireSSL.default = false
hpsoamRequireSSL.clusterProperty = hpsoam.requireSSL

hpsoamRequireCreds.description = Control whether credentials of 'Administrator' or 'Operator' roles are required for Agent web service for HP SOA Manager (true/false)
hpsoamRequireCreds.default = false
hpsoamRequireCreds.clusterProperty = hpsoam.requireCreds

soapRejectMustUnderstand.description = If true, SOAP messages containing an unrecognized SOAP header addressed to the Gateway with mustUnderstand="1" will be rejected immediately (true/false)
soapRejectMustUnderstand.default = true
soapRejectMustUnderstand.clusterProperty = soap.rejectMustUnderstand

template.strictMode.description = If true, using nonexistent variables in a template will cause assertions to fail.  If false (the default) an empty string is used instead.
template.strictMode.default = false
template.strictMode.systemProperty = ${propertyPrefix}.template.strictMode
template.strictMode.clusterProperty = template.strictMode

template.defaultMultivalueDelimiter.description = The delimiter to use between values when a multivalued variable is interpolated (defaults to ", ")
template.defaultMultivalueDelimiter.default = ", "
template.defaultMultivalueDelimiter.systemProperty = ${propertyPrefix}.template.defaultMultivalueDelimiter
template.defaultMultivalueDelimiter.clusterProperty = template.defaultMultivalueDelimiter

# The auth cache tunings need to default to their old system properties, but let their cluster properties take precedence
defaultAuthCacheMaxSuccessTime.default=60000
defaultAuthCacheMaxSuccessTime.systemProperty=${propertyPrefix}.identity.AuthCache.maxSuccessTime
authCacheMaxSuccessTime.description=Milliseconds to cache successful authentications (default 60000)
authCacheMaxSuccessTime.default=${defaultAuthCacheMaxSuccessTime}
authCacheMaxSuccessTime.clusterProperty=authCache.maxSuccessTime

defaultAuthCacheMaxFailureTime.default=30000
defaultAuthCacheMaxFailureTime.systemProperty=${propertyPrefix}.identity.AuthCache.maxFailureTime
authCacheMaxFailureTime.description=Milliseconds to cache failed authentications (default 30000)
authCacheMaxFailureTime.default=${defaultAuthCacheMaxFailureTime}
authCacheMaxFailureTime.clusterProperty=authCache.maxFailureTime

defaultAuthCacheSuccessCacheSize.default=2000
defaultAuthCacheSuccessCacheSize.systemProperty=${propertyPrefix}.identity.AuthCache.successCacheSize
authCacheSuccessCacheSize.description=Milliseconds to cache successful authentications (default 2000)
authCacheSuccessCacheSize.default=${defaultAuthCacheSuccessCacheSize}
authCacheSuccessCacheSize.clusterProperty=authCache.successCacheSize

defaultAuthCacheFailureCacheSize.default=200
defaultAuthCacheFailureCacheSize.systemProperty=${propertyPrefix}.identity.AuthCache.failureCacheSize
authCacheFailureCacheSize.description=Milliseconds to cache failed authentications (default 200)
authCacheFailureCacheSize.default=${defaultAuthCacheFailureCacheSize}
authCacheFailureCacheSize.clusterProperty=authCache.failureCacheSize

defaultAuthCacheGroupMembershipCacheSize.default=5000
defaultAuthCacheGroupMembershipCacheSize.systemProperty=${propertyPrefix}.identity.AuthCache.groupMembershipCacheSize
authCacheGroupMembershipCacheSize.description=Milliseconds to cache successful authentications (default 5000)
authCacheGroupMembershipCacheSize.default=${defaultAuthCacheGroupMembershipCacheSize}
authCacheGroupMembershipCacheSize.clusterProperty=authCache.groupMembershipCacheSize

defaultPrincipalSessionCacheSize.default=100
defaultPrincipalSessionCacheSize.systemProperty=${propertyPrefix}.admin.SessionValidator.cacheSize
principalSessionCacheSize.description=Maximum number of principles to keep in cache
principalSessionCacheSize.default=${defaultPrincipalSessionCacheSize}
principalSessionCacheSize.clusterProperty=groupPrincipalCache.cacheSize

defaultPrincipalSessionCacheMaxTime.default=300000
defaultPrincipalSessionCacheMaxTime.systemProperty=${propertyPrefix}.admin.SessionValidator.cacheMaxTime
principalSessionCacheMaxTime.description=Milliseconds to cache successfull Principal validations
principalSessionCacheMaxTime.default=${defaultPrincipalSessionCacheMaxTime}
principalSessionCacheMaxTime.clusterProperty=principalSessionCache.maxTime

defaultPrincipalSessionCacheMaxPrincipalGroups.default=50
defaultPrincipalSessionCacheMaxPrincipalGroups.systemProperty=${propertyPrefix}.admin.SessionValidator.maxPrincipalGroups
principalSessionCacheMaxPrincipalGroups.description=Number of groups per Principal to store in the cache
principalSessionCacheMaxPrincipalGroups.default=${defaultPrincipalSessionCacheMaxPrincipalGroups}
principalSessionCacheMaxPrincipalGroups.clusterProperty=principalSessionCache.maxPrincipalGroups

defaultJmsListenerThreadLimit.default=25
defaultJmsListenerThreadLimit.systemProperty=${propertyPrefix}.jms.listenerThreadLimit
jmsListenerThreadLimit.description=The global limit on the number of processing threads that can be created to work off all JMS endpoints (default 100)
jmsListenerThreadLimit.default=25
jmsListenerThreadLimit.clusterProperty=jms.listenerThreadLimit

defaultJmsEndpointThreadDistribution.default=EVENLY_DISTRIBUTED
defaultJmsEndpointThreadDistribution.systemProperty=${propertyPrefix}.jms.listenerThreadLimit
jmsEndpointThreadDistribution.description=The global limit on the number of processing threads that can be created to work off all JMS endpoints (default 100)
jmsEndpointThreadDistribution.default=EVENLY_DISTRIBUTED
jmsEndpointThreadDistribution.clusterProperty=jms.endpointThreadDistribution
