#
# Server Configuration Properties (used by ServerConfig)
#
# Note:
# For each cluster property, please add default in the description.  For example, XYZ_Prop.description = This is a demo description (<unit>; default <default value>)
#

ssgBase.description = "Base of the SSG Installation"
ssgBase.systemProperty = com.l7tech.server.base
ssgBase.default = /opt/SecureSpan
ssgBase.setSystemProperty = true

ssgHome.description = SSG home directory
ssgHome.systemProperty = com.l7tech.server.home
ssgHome.default = ${ssgBase}${fs}Gateway${fs}node${fs}default
ssgHome.setSystemProperty = true

ssgAppliance.description = SSG Appliance root directory
ssgAppliance.systemProperty = com.l7tech.server.applianceroot
ssgAppliance.default = ${ssgBase}${fs}Appliance
ssgAppliance.setSystemProperty = true

fs.description = File separator (/ on Unix, \\ in Windows, etc.)
fs.systemProperty = file.separator
fs.default = /

# General ServerConfig configuration
jndiPrefix = java:comp/env
propertyPrefix = com.l7tech.server
ssg.etc = ${ssgHome}${fs}etc
ssg.conf = ${ssg.etc}${fs}conf
ssg.var = ${ssgHome}${fs}var
ssg.run = ${ssgHome}${fs}..${fs}..${fs}runtime
ssg.run.systemProperty = com.l7tech.server.runtime
resolutionPackage = com.l7tech.server.service.resolution

# Directory for SSG configuration files
configDirectory.description = Directory for SSG configuration files
configDirectory.systemProperty = ${propertyPrefix}.configDirectory
configDirectory.default = ${ssg.conf}
configDirectory.setSystemProperty = true

# Directory for general use SSG runtime files
varDirectory.description = Directory for SSG runtime files
varDirectory.systemProperty = ${propertyPrefix}.varDirectory
varDirectory.default = ${ssg.var}
varDirectory.setSystemProperty = true

# Directory for web content files
webDirectory.description = Directory for SSG web content
webDirectory.default = ${ssg.run}${fs}web

# Directory for modules configuration files
modConfDirectory.description = Directory for software module files
modConfDirectory.default = ${ssg.run}${fs}modules${fs}conf
modConfDirectory.systemProperty = ${propertyPrefix}.moduleConfigDirectory
modConfDirectory.setSystemProperty = true

# Shutdown delay
ssg.shutdownDelay.description = Seconds to wait during shutdown after stopping SSG components.
ssg.shutdownDelay.default = 0

# Numeric server ID (default generated from IP address)
serverId.description = Numeric server identifier
serverId.jndi = ${jndiPrefix}/ServerId
serverId.systemProperty = ${propertyPrefix}.serverId

# Multicast address (default generated randomly)
multicastAddress.description = Cluster multicast address
multicastAddress.jndi = ${jndiPrefix}/MulticastAddress
multicastAddress.systemProperty = ${propertyPrefix}.multicastAddress

# ldap templates path
ldapTemplatesPath.description = LDAP templates path
ldapTemplatesPath.systemProperty = ${propertyPrefix}.ldapTemplatesPath

# uddi templates path
uddiTemplatesPath.description = UDDI templates path
uddiTemplatesPath.systemProperty = ${propertyPrefix}.uddiTemplatesPath

# directory for ssg log files
logDirectory.description = Directory for SSG log files
logDirectory.default = ${ssg.var}${fs}logs
logDirectory.systemProperty = ${propertyPrefix}.logDirectory

# template for log file pattern
#  0 - "default_"
#  1 - sink name (e.g. "ssg")
#  2 - "%g" the generation number to distinguish rotated logs
#  3 - "%u" a unique number to resolve conflicts
logFileTemplate.description = Template for log filename pattern ('{1}' is sink name, '{2}' the generation number to distinguish rotated logs, '{3}' a unique number to resolve file conflicts).  The default is {1}_{2}_{3}.log.
logFileTemplate.default = {1}_{2}_{3}.log
logFileTemplate.systemProperty = ${propertyPrefix}.logFileTemplate
logFileTemplate.clusterProperty = log.filenameTemplate

# customized logger levels
logLevels.description = Log level configuration (one level per line).  The default is com.l7tech.level = CONFIG.
logLevels.default = com.l7tech.level = CONFIG
logLevels.clusterProperty = log.levels

# comma-separated list of IP addresses (defaults to all)
ipAddresses.description = IP addresses
ipAddresses.jndi = ${jndiPrefix}/IpAddresses
ipAddresses.systemProperty = ${propertyPrefix}.ipAddresses

#
# The defaultHttpPort and defaultHttpsPort are kept up-to-date dynamically by the
# SsgConnectorManager, pointing at an HTTP or HTTPS port (respectively) that has
# the service OTHER_SERVLETS enabled, or removed completely whenever an appropriate
# connector doesn't exist.
#
defaultHttpPort.default = 8080
defaultHttpPort.mutable = true
httpPort.description = HTTP listening port for built-in services
httpPort.default = ${defaultHttpPort}
httpPort.jndi = ${jndiPrefix}/HttpPort
httpPort.systemProperty = ${propertyPrefix}.httpPort

defaultHttpsPort.default = 8443
defaultHttpsPort.mutable = true
httpsPort.description = HTTPS listening port for built-in services
httpsPort.default = ${defaultHttpsPort}
httpsPort.jndi = ${jndiPrefix}/HttpsPort
httpsPort.systemProperty = ${propertyPrefix}.httpsPort

interfaceTags.visible = false
interfaceTags.description = Available named interfaces and their corresponding address pattern lists.  This is intended to be edited using the special GUI in the SSM (default loopback(127.0.0.1)).
interfaceTags.default = loopback(127.0.0.1)
interfaceTags.clusterProperty = interfaceTags

#
# The port used for internode communications in a cluster
#
clusterPortOld.visible = false
clusterPortOld.description = Inter-Node communication port for clusters (default 0)
clusterPortOld.default = 0
clusterPortOld.clusterProperty = cluster.internodePort

clusterNodePort.description = Inter-Node communication port for clusters
clusterNodePort.default = 2124
clusterNodePort.mutable = true

clusterAdminAppletPort.description = The port used for Browser-based Administration (default 9443)
clusterAdminAppletPort.default = 9443
clusterAdminAppletPort.clusterProperty = cluster.adminAppletPort
clusterAdminAppletPort.mutable = true

#
# The host used for accessing the cluster
#
defaultClusterHost.default =
defaultClusterHost.systemProperty = com.l7tech.server.defaultClusterHostname

clusterHost.description = External hostname for the cluster.  The default is empty.
clusterHost.default = ${defaultClusterHost}
clusterHost.clusterProperty = cluster.hostname

#
# Following two settings should be modified if the cluster is configured in such a
# way that port forwarding is used
#
clusterhttpport.description = External HTTP port for the cluster (default ${httpPort})
clusterhttpport.default = ${httpPort}
clusterhttpport.jndi = ${jndiPrefix}/ClusterHttpPort
clusterhttpport.systemProperty = ${propertyPrefix}.clusterHttpPort
clusterhttpport.clusterProperty = cluster.httpPort

clusterhttpsport.description = External HTTPS port for the cluster (default ${httpsPort})
clusterhttpsport.default = ${httpsPort}
clusterhttpsport.jndi = ${jndiPrefix}/ClusterHttpsPort
clusterhttpsport.systemProperty = ${propertyPrefix}.clusterHttpsPort
clusterhttpsport.clusterProperty = cluster.httpsPort

# hostname (defaults to OS hostname)
hostname.description = Hostname
hostname.jndi = ${jndiPrefix}/Hostname
hostname.systemProperty = ${propertyPrefix}.hostname

# system properties path
systemPropertiesPath.description = System properties path
systemPropertiesPath.default = ${configDirectory}${fs}system.properties
systemPropertiesPath.jndi = ${jndiPrefix}/SystemPropertiesPath
systemPropertiesPath.systemProperty = ${propertyPrefix}.systemPropertiesPath

#custom assertions (file name or resource name)
custom.assertions.file=custom_assertions.properties
custom.assertions.modules=${ssg.run}${fs}modules${fs}lib
custom.assertions.temp=${ssg.var}${fs}modules

# ldap fallback timeout
# the time (in ms) for which the ldap connector will not try to reconnect to
# a particular ldap url when the connection failed
ldap.reconnect.timeout = 60000

ldapConnectionTimeout.description = LDAP connection timeout (default 5s).  A value less than or equal to zero seconds means to use the network protocol's (i.e., TCP's) timeout value.
ldapConnectionTimeout.default = 5s
ldapConnectionTimeout.clusterProperty = ldap.connection.timeout

ldapReadTimeout.description =  LDAP read timeout (default 30s).  A value less than or equal to zero seconds means it will wait for the response infinitely until it is received.
ldapReadTimeout.default = 30s
ldapReadTimeout.clusterProperty = ldap.read.timeout

# Audit settings
auditMessageThreshold.description = Minimum level required of a Message Audit Record for it to be saved to the database (Level; default WARNING)
auditMessageThreshold.default = WARNING
auditMessageThreshold.jndi = ${jndiPrefix}/AuditMessageThreshold
auditMessageThreshold.systemProperty = ${propertyPrefix}.audit.messageThreshold
auditMessageThreshold.clusterProperty = audit.messageThreshold

auditAdminThreshold.description = Minimum level required of an Admin Audit Record for it to be saved to the database (Level; default INFO)
auditAdminThreshold.default = INFO
auditAdminThreshold.jndi = ${jndiPrefix}/AuditAdminThreshold
auditAdminThreshold.systemProperty = ${propertyPrefix}.audit.adminThreshold
auditAdminThreshold.clusterProperty = audit.adminThreshold

# associated logs threshold
auditAssociatedLogsThreshold.default = INFO
auditAssociatedLogsThreshold.description = Minimum level required of an Audit Detail Message for it to be saved to the database (Level; default INFO)
auditAssociatedLogsThreshold.clusterProperty = audit.detailThreshold

# client component system logs threshold
auditClientSystemLogsThreshold.default = WARNING
auditClientSystemLogsThreshold.description = Minimum level required of an System Audit Record for a client component for it to be saved to the database (Level; default WARNING)
auditClientSystemLogsThreshold.clusterProperty = audit.clientServicesThreshold

auditHintingEnabled.description = Enable audit messages to provide hints for audited information, such as request XML (true/false; default false)
auditHintingEnabled.default = false
auditHintingEnabled.systemProperty = ${propertyPrefix}.audit.hinting
auditHintingEnabled.clusterProperty = audit.hinting

auditAssertionStatusEnabled.description = Use the highest assertion status level when checking if a record should be saved (true/false; default true)
auditAssertionStatusEnabled.default = true
auditAssertionStatusEnabled.systemProperty = ${propertyPrefix}.audit.assertionStatus
auditAssertionStatusEnabled.clusterProperty = audit.assertionStatus

auditAssociatedLogsThresholdRespected.description = Use the audit detail level when checking if a record should be saved (true/false; default true)
auditAssociatedLogsThresholdRespected.default = true
auditAssociatedLogsThresholdRespected.systemProperty = ${propertyPrefix}.audit.detailThresholdRespected
auditAssociatedLogsThresholdRespected.clusterProperty = audit.detailThresholdRespected

# audit logging format
auditLogFormatServiceHeader.description = Format for the first log message of a service audit.  The default is Processing request for service: {3}.
auditLogFormatServiceHeader.default = Processing request for service: {3}
auditLogFormatServiceHeader.clusterProperty = audit.log.service.headerFormat

auditLogFormatServiceFooter.description = Format for the final (summary) log message of a service audit (default {1})
auditLogFormatServiceFooter.default = {1}
auditLogFormatServiceFooter.clusterProperty = audit.log.service.footerFormat

auditLogFormatServiceDetail.description = Format for details related to a service audit (default {0}: {1})
auditLogFormatServiceDetail.default = {0}: {1}
auditLogFormatServiceDetail.clusterProperty = audit.log.service.detailFormat

auditLogFormatOther.description = Format used for other (non-service) audit logs (i.e. System/Admin audits).  The default is {1}.
auditLogFormatOther.default = {1}
auditLogFormatOther.clusterProperty = audit.log.other.format

auditLogFormatOtherDetail.description = Format used for other (non-service) audit details (i.e. System/Admin audits).  The default is {0}: {1}.
auditLogFormatOtherDetail.default = {0}: {1}
auditLogFormatOtherDetail.clusterProperty = audit.log.other.detailFormat

# default = 1 week
auditPurgeMinimumAge.description = Minimum age of Audit Records that can be purged (Hours; default 168)
auditPurgeMinimumAge.default = 168
auditPurgeMinimumAge.jndi = ${jndiPrefix}/AuditPurgeMinimumAge
auditPurgeMinimumAge.systemProperty = ${propertyPrefix}.audit.purgeMinimumAge
auditPurgeMinimumAge.clusterProperty = audit.purgeMinimumAge

auditSigningEnabled.description = Sign audited data (true/false; default false)
auditSigningEnabled.default = false
auditSigningEnabled.systemProperty = ${propertyPrefix}.audit.sign
auditSigningEnabled.clusterProperty = audit.signing

auditBatchExternal.description = Should audit information be batched when logging (true/false; default true)
auditBatchExternal.default = true
auditBatchExternal.systemProperty = ${propertyPrefix}.audit.batchExternal
auditBatchExternal.clusterProperty = audit.batchExternal

logBuffer.messageSize.description = Maximum permitted size for unformatted log message (characters; default 4096)
logBuffer.messageSize.default = 4096
logBuffer.messageSize.systemProperty = ${propertyPrefix}.logBuffer.messageSize
logBuffer.messageSize.clusterProperty = log.buffer.messageSizeLimit

logBuffer.paramSize.description = Maximum permitted size for unformatted log message parameter (characters; default 4096)
logBuffer.paramSize.default = 4096
logBuffer.paramSize.systemProperty = ${propertyPrefix}.logBuffer.paramSize
logBuffer.paramSize.clusterProperty = log.buffer.parameterSizeLimit

auditArchiverTimerPeriod.description = Time period in seconds for scheduling the AuditArchiver task, or 0 to disable (default 600).
auditArchiverTimerPeriod.default = 600
auditArchiverTimerPeriod.clusterProperty = audit.archiverTimerPeriod

auditArchiverStaleTimeout.description = Timeout, in minutes, after which an "in progress" archive job is considered stale and dead, so that other nodes can steal the lock (default 120).
auditArchiverStaleTimeout.default = 120
auditArchiverStaleTimeout.clusterProperty = audit.archiverStaleTimeout

auditArchiverBatchSize.description = Number of audit records to be processed by one archiver job. Max 10000 (default 1000).
auditArchiverBatchSize.default = 1000
auditArchiverBatchSize.clusterProperty = audit.archiverBatchSize

auditArchiverInProgress.description = Used as the underlying mechanism with the ClusterLock; not exposed in the UI.  The default is empty.
auditArchiverInProgress.default =
auditArchiverInProgress.clusterProperty = audit.archiverInProgress
auditArchiverInProgress.visible = false

auditArchiverShutdownThreshold.description = The AuditArchiver will put the SSG in "no processing" mode when database disk usage (percentage; default 90) is above this threshold.
auditArchiverShutdownThreshold.default = 90
auditArchiverShutdownThreshold.clusterProperty = audit.archiverShutdownThreshold

auditArchiverStartThreshold.description = Archiving of audit records will start when database disk usage (percentage; default 75) is above this threshold.
auditArchiverStartThreshold.default = 75
auditArchiverStartThreshold.clusterProperty = audit.archiverStartThreshold

auditArchiverStopThreshold.description = Archiving of audit records will stop when database disk usage (percentage; default 50) drops below this threshold.
auditArchiverStopThreshold.default = 50
auditArchiverStopThreshold.clusterProperty = audit.archiverStopThreshold

auditArchiverFtpConfig.description = The serialized form of the FTP configuration where the archiver backs up the audit logs; not exposed in UI.  The default is empty.
auditArchiverFtpConfig.default =
auditArchiverFtpConfig.clusterProperty = audit.archiver.ftp.config
auditArchiverFtpConfig.visible = false

auditArchiverFtpFileprefix.description = The prefix for the audit archives file to be uploaded (default SSGAuditArchive-)
auditArchiverFtpFileprefix.default = SSGAuditArchive-
auditArchiverFtpFileprefix.clusterProperty = audit.archiver.ftp.fileprefix

auditArchiverFtpMaxUploadFileSize.description = Maximum file size to be uploaded (bytes; default 2000000000). Should be large enough to accomodate the largest audit record, and smaller than the FTP server's filesize limit, if any.
auditArchiverFtpMaxUploadFileSize.default = 2000000000
auditArchiverFtpMaxUploadFileSize.clusterProperty = audit.archiver.ftp.maxfilesize

# default = /ssg/var/attachments
attachmentDirectory.description = Directory in which to cache large SOAP attachments
attachmentDirectory.default = ${ssg.var}${fs}attachments
attachmentDirectory.jndi = ${jndiPrefix}/AttachmentDirectory
attachmentDirectory.systemProperty = ${propertyPrefix}.attachmentDirectory

# default = /ssg/modules/assertions
modularAssertionsDirectory.description = Directory in which to find modular assertion jarfiles
modularAssertionsDirectory.default = ${ssg.run}${fs}modules${fs}assertions
modularAssertionsDirectory.jndi = ${jndiPrefix}/ModularAssertionsDirectory
modularAssertionsDirectory.systemProperty = ${propertyPrefix}.modularAssertionsDirectory

modularAssertionsRescanMillis.description = Milliseconds in between checks to see if the modules directory timestamp has changed
modularAssertionsRescanMillis.default = 4523
modularAssertionsRescanMillis.jndi = ${jndiPrefix}/ModularAssertionsRescanMillis
modularAssertionsRescanMillis.systemProperty = ${propertyPrefix}.modularAssertionsRescanMillis

modularAssertionsFileExtensions.description = Space separated list of file extensions (including leading dot) that will be considered as modular assertions.  Set to a single dash to disable scanning for modules
modularAssertionsFileExtensions.default = .jar .assertion .ass .assn .aar
modularAssertionsFileExtensions.jndi = ${jndiPrefix}/ModularAssertionsFileExtensions
modularAssertionsFileExtensions.systemProperty = ${propertyPrefix}.modularAssertionsFileExtensions

# default = 131071
attachmentDiskThreshold.description = Threshold for size of attachments in a single request to keep in RAM (Bytes; default 1048576)
attachmentDiskThreshold.default = 1048576
attachmentDiskThreshold.jndi = ${jndiPrefix}/AttachmentDiskThreshold
attachmentDiskThreshold.systemProperty = ${propertyPrefix}.attachmentDiskThreshold
attachmentDiskThreshold.clusterProperty = attachment.diskThreshold

# Symantec AntiVirus ScanEngine (savseEnable = yes to enable scanning)
savseEnable.description = Whether or not this gateway has access to a sav scan engine to do virus scanning
savseEnable.default = no
savseEnable.jndi = ${jndiPrefix}/SavSEEnable
savseEnable.systemProperty = ${propertyPrefix}.savseEnable

# The hostname of the sav se
savseHost.description = The hostname of the sav scan engine that this gateway can connect to
savseHost.default = 127.0.0.1
savseHost.jndi = ${jndiPrefix}/SavSEHost
savseHost.systemProperty = ${propertyPrefix}.savseHost

# The port of the sav se
savsePort.description = The port number associated with the savseHost property
savsePort.default = 7777
savsePort.jndi = ${jndiPrefix}/SavSEPort
savsePort.systemProperty = ${propertyPrefix}.savsePort

# the number of max results in an idendity provider search result operation
maxLdapSearchResultSize.description = The number of max results in an idendity provider search result operation
maxLdapSearchResultSize.default = 50
maxLdapSearchResultSize.jndi = ${jndiPrefix}/MaxLDAPResSize
maxLdapSearchResultSize.systemProperty = ${propertyPrefix}.maxLdapSearchResultSize

metricsFineInterval.description = Time interval for Service Metrics fine resolution bins (Milliseconds; default 5000). (Note: A cluster-wide restart is required for changes to apply.)
metricsFineInterval.default = 5000
metricsFineInterval.systemProperty = com.l7tech.service.metrics.fineBinInterval
metricsFineInterval.clusterProperty = metrics.fineInterval

# passthrough filter for wsdl and policy downloads (requests for such documents will not require authentication
# if they come from an ip address belowmentioned)
# for example, a value could look like "127.0.0.1 192.168" and would allow localhost as well as anything starting with 192.168
passthroughDownloads.description = Remote IPs of requestors allowed to download WSDL and policy documents without credentials (Space separated list).  The default is 127.0.0.1.
passthroughDownloads.default = 127.0.0.1
passthroughDownloads.systemProperty = com.l7tech.service.passthroughdownloads
passthroughDownloads.clusterProperty = service.passthroughdownloads

# IO timeout settings
ioInReadTimeout.description = IO timeout for incoming requests (Milliseconds; default 60000)
ioInReadTimeout.default = 60000
ioInReadTimeout.systemProperty = ${propertyPrefix}.timeout
ioInReadTimeout.clusterProperty = io.timeout

ioInSlowReadThreshold.description = IO timeout for incoming request rate checking (Milliseconds; default 60000)
ioInSlowReadThreshold.default = 60000
ioInSlowReadThreshold.systemProperty = ${propertyPrefix}.rateTimeout
ioInSlowReadThreshold.clusterProperty = io.rateTimeout

ioInSlowReadRate.description = Minimum permissible rate for incoming requests (Bytes per second; default 1024)
ioInSlowReadRate.default = 1024
ioInSlowReadRate.systemProperty = ${propertyPrefix}.rateLimit
ioInSlowReadRate.clusterProperty = io.rateLimit

ioOutConnectionTimeout.description = IO timeout for outbound connection (Milliseconds; default 30000)
ioOutConnectionTimeout.default = 30000
ioOutConnectionTimeout.systemProperty = ${propertyPrefix}.outConnectTimeout
ioOutConnectionTimeout.clusterProperty = io.outConnectTimeout

ioOutReadTimeout.description = IO timeout for outbound response (Milliseconds; default 60000)
ioOutReadTimeout.default = 60000
ioOutReadTimeout.systemProperty = ${propertyPrefix}.outTimeout
ioOutReadTimeout.clusterProperty = io.outTimeout

ioHttpsHostVerify.description = Verify server host names against certificate name (true/false; default true)
ioHttpsHostVerify.default = true
ioHttpsHostVerify.clusterProperty = io.httpsHostVerify

ioHttpUseExpectContinue.description = Use an HTTP 1.1 Expect/Continue handshake (true/false; default false)
ioHttpUseExpectContinue.default = false
ioHttpUseExpectContinue.clusterProperty = io.httpExpectContinue

ioHttpNoKeepAlive.description = Disable HTTP Keep-Alive connections (true/false; default false)
ioHttpNoKeepAlive.default = false
ioHttpNoKeepAlive.clusterProperty = io.httpDisableKeepAlive

ioHttpVersion.description = The HTTP version to use (1.0/1.1; default 1.1)
ioHttpVersion.default = 1.1
ioHttpVersion.clusterProperty = io.httpVersion

ioHttpDefaultContentType.description = The value of the "Content-Type" HTTP header to use if a response does not have a "Content-Type" header (no default value).
ioHttpDefaultContentType.clusterProperty = io.httpDefaultContentType
ioHttpDefaultContentType.systemProperty = ${propertyPrefix}.ioHttpDefaultContentType

ioHttpPoolMaxIdleTime.description = Time an idle thread will wait for additional work before shutting down (milliseconds)
ioHttpPoolMaxIdleTime.default = 60000
ioHttpPoolMaxIdleTime.systemProperty = ${propertyPrefix}.ioHttpPoolMaxIdleTime

ioHttpPoolMaxConcurrency.description = Maximum number of concurrent active HTTP connections (default 400).  This is a hard upper limit.
ioHttpPoolMaxConcurrency.default = 400
ioHttpPoolMaxConcurrency.systemProperty = ${propertyPrefix}.ioHttpPoolMaxConcurrency
ioHttpPoolMaxConcurrency.clusterProperty = io.httpMaxConcurrency

ioHttpPoolMinSpareThreads.description = Core number of concurrent active HTTP connections.  This is a soft limit that can be temporarily exceeded if necessary.  A negative number means to use a fraction of io.httpMaxConcurrency.  The default is -2 meaning "1/2 of the maximum".
ioHttpPoolMinSpareThreads.default = -2
ioHttpPoolMinSpareThreads.systemProperty = ${propertyPrefix}.ioHttpPoolMinSpareThreads
ioHttpPoolMinSpareThreads.clusterProperty = io.httpCoreConcurrency

ioJmsErrorSleep.description = Time to sleep after a connection error for an inbound JMS Queue (timeunit; default 60s)
ioJmsErrorSleep.default = 60s
ioJmsErrorSleep.clusterProperty = jms.connectErrorSleep

ioJmsMessageMaxBytes.description = Maximum number of bytes permitted for a JMS message, or 0 for unlimited (Integer; default 5242880)
ioJmsMessageMaxBytes.default = 5242880
ioJmsMessageMaxBytes.systemProperty = ${propertyPrefix}.jmsMessageMaxBytes
ioJmsMessageMaxBytes.clusterProperty = io.jmsMessageMaxBytes

ioStaleCheckCount.description = Number of stale checked connections per interval (Integer; default 1)
ioStaleCheckCount.default = 1
ioStaleCheckCount.systemProperty = com.l7tech.common.http.prov.apache.CommonsHttpClient.staleCheckCount
ioStaleCheckCount.clusterProperty = io.staleCheckCount

ioStaleCheckHosts.description = Maximum mumber of stale checked hosts (Integer; default 10)
ioStaleCheckHosts.default = 10
ioStaleCheckHosts.systemProperty = com.l7tech.common.http.prov.apache.CommonsHttpClient.staleCheckHosts
ioStaleCheckHosts.clusterProperty = io.staleCheckHosts

ioXmlPartMaxBytes.description = Maximum number of bytes permitted in the XML part of a message, or 0 for unlimited (Integer; default 2621440)
ioXmlPartMaxBytes.default = 2621440
ioXmlPartMaxBytes.systemProperty = ${propertyPrefix}.xmlPartMaxBytes
ioXmlPartMaxBytes.clusterProperty = io.xmlPartMaxBytes

ioAttachmentSignedMaxBytes.description = Maximum number of bytes permitted in each signed attachment, or 0 for unlimited (Integer; default 5242880)
ioAttachmentSignedMaxBytes.default = 5242880
ioAttachmentSignedMaxBytes.systemProperty
ioAttachmentSignedMaxBytes.clusterProperty = io.signedPartMaxBytes

ioMailConnectTimeout.description = IO timeout for outbound connection to mail server (timeunit; default 30s)
ioMailConnectTimeout.default = 30s
ioMailConnectTimeout.clusterProperty = mail.outConnectTimeout

ioMailReadTimeout.description = IO timeout for outbound communication with mail server (timeunit; default 60s)
ioMailReadTimeout.default = 60s
ioMailReadTimeout.clusterProperty = mail.outTimeout

ioMailInConnectTimeout.description = IO timeout for inbound connection from mail server (timeunit; default 30s)
ioMailInConnectTimeout.default = 30s
ioMailInConnectTimeout.clusterProperty = mail.inConnectTimeout

ioMailInTimeout.description = IO timeout for inbound communication with mail server (timeunit; default 60s)
ioMailInTimeout.default = 60s
ioMailInTimeout.clusterProperty = mail.inTimeout

# Old name of this setting, but defaults live here -- new one points at this one for defaults
xsltMaxCacheEntries.description = Maximum number of cached stylesheets loaded from URLs (Integer; 100)
xsltMaxCacheEntries.default = 100
xsltMaxCacheEntries.systemProperty = ${propertyPrefix}.xsltcache.maxEntries
xsltMaxCacheEntries.clusterProperty = xsltcache.maxEntries

# Old name of this setting, but defaults live here -- new one points at this one for defaults
xsltMaxCacheAge.description = Maximum age of cached stylesheets loaded from URLs (Milliseconds; default 300000)
xsltMaxCacheAge.default = 300000
xsltMaxCacheAge.systemProperty = ${propertyPrefix}.xsltcache.maxAge
xsltMaxCacheAge.clusterProperty = xsltcache.maxAge

schemaMaxCacheAge.description = Maximum age of cached XML Schema documents loaded from URLs (Milliseconds; default 30000)
schemaMaxCacheAge.default = 30000
schemaMaxCacheAge.systemProperty = ${propertyPrefix}.schemacache.maxAge
schemaMaxCacheAge.clusterProperty = schemacache.maxAge

schemaMaxCacheEntries.description = Maximum number of cached XML schema documents loaded from URLs (Integer; default 100)
schemaMaxCacheEntries.default = 100
schemaMaxCacheEntries.systemProperty = ${propertyPrefix}.schemacache.maxEntries
schemaMaxCacheEntries.clusterProperty = schemacache.maxEntries

schemaRecompileLatency.description = Minimum time that must elapse in between two consecutive rebuilds of the hardware schema table (Milliseconds; default 10000). This prevents continuous rebuilding.
schemaRecompileLatency.default = 10000
schemaRecompileLatency.systemProperty = ${propertyPrefix}.schemacache.recompileLatency
schemaRecompileLatency.clusterProperty = schemacache.recompileLatency

schemaRecompileMinAge.description = Time after a schema becomes hardware eligible to wait for additional schemas to become eligible before triggering a batch rebuild of the hardware schema table (Milliseconds; default 500). Schema status changes often occur in clumps.
schemaRecompileMinAge.default = 500
schemaRecompileMinAge.systemProperty = ${propertyPrefix}.schemacache.recompileMinAge
schemaRecompileMinAge.clusterProperty = schemacache.recompileMinAge

schemaRecompileMaxAge.description = Maximum time a needed schema hardware cache rebuild can be held to wait for additional schemas to stop arriving (Milliseconds; default 20000)
schemaRecompileMaxAge.default = 20000
schemaRecompileMaxAge.systemProperty = ${propertyPrefix}.schemacache.recompileMaxAge
schemaRecompileMaxAge.clusterProperty = schemacache.recompileMaxAge

schemaCacheMaxSchemaSize.description = Maximum size of schema allowed into the schema cache (bytes; default 1000000)
schemaCacheMaxSchemaSize.default = 1000000
schemaCacheMaxSchemaSize.systemProperty = ${propertyPrefix}.schemacache.maxSchemaSize
schemaCacheMaxSchemaSize.clusterProperty = schemacache.maxSchemaSize

ephemeralKeyMaxCacheEntries.description = Maximum number of cached ephemeral key thumbprints per-node, or 0 to disable ephemeral key caching (Integer; default 1000)
ephemeralKeyMaxCacheEntries.default = 1000
ephemeralKeyMaxCacheEntries.systemProperty = ${propertyPrefix}.ekeycache.maxEntries
ephemeralKeyMaxCacheEntries.clusterProperty = ekeycache.maxEntries

privateKeyCacheMaxAgeMillis.description = Maximum time a recently-used private key can be held for reuse (Milliseconds; default 120000)
privateKeyCacheMaxAgeMillis.default = 120000
privateKeyCacheMaxAgeMillis.systemProperty = ${propertyPrefix}.privatekeycache.maxAge
privateKeyCacheMaxAgeMillis.clusterProperty = privatekeycache.maxAge

defaultfaultlevel.description = Level of details in SOAP faults returned by the SSG (can be overriden by FaultLevel assertion). Values are 0 for drop connection, 1 for template, 2 for generic, 3 for medium details, 4 for full details (default 2).
defaultfaultlevel.default = 2
defaultfaultlevel.systemProperty = ${propertyPrefix}.fault.level
defaultfaultlevel.clusterProperty = soapfault.level

defaultfaulttemplate.description = Template used for SOAP faults returned by the SSG (Text). This is only relevent when defaultfaultlevel is set to template.  The default is <s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body><s:Fault><faultcode>s:Client</faultcode><faultstring>Client Error</faultstring></s:Fault></s:Body></s:Envelope>.
defaultfaulttemplate.default = <s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body><s:Fault><faultcode>s:Client</faultcode><faultstring>Client Error</faultstring></s:Fault></s:Body></s:Envelope>
defaultfaulttemplate.systemProperty = ${propertyPrefix}.fault.template
defaultfaulttemplate.clusterProperty = soapfault.template

defaultfaultpolicyurl.description = Whether or not the SSG includes the policy download URL when returning SOAP faults (true/false; default true)
defaultfaultpolicyurl.default = true
defaultfaultpolicyurl.systemProperty = ${propertyPrefix}.fault.policyurl
defaultfaultpolicyurl.clusterProperty = soapfault.policyurl

uddi.url.inquiry.description = List of UDDI Inquiry URLs (Space separated list; default <no value>)
uddi.url.inquiry.clusterProperty = uddi.inquiryUrls
uddi.result.max_rows.description = The maximum number of records to retrieve for any inquiry (default 100).
uddi.result.max_rows.clusterProperty = uddi.limit
uddi.result.max_rows.default = 100
uddi.result.batch_size.description = The number of records to retrieve at a time (Integer; default 100). (This value is effective only if less than or equal to the uddi.limit value.)
uddi.result.batch_size.clusterProperty = uddi.batch
uddi.result.batch_size.default = 100

# This setting is no longer used (should now be configured via manager log sink UI)
trafficLoggerEnabled.description = Whether or not traffic should be recorded (true/false; default false)
trafficLoggerEnabled.default = false
trafficLoggerEnabled.clusterProperty = trafficlogger.enabled
trafficLoggerEnabled.systemProperty = ${propertyPrefix}.trafficlogger.enabled
trafficLoggerEnabled.visible = false

trafficLoggerDetail.description = Template for logged information related to the request (Text).  The default is ${request.time}, ${request.soap.namespace}, ${request.soap.operationname}, ${response.http.status}.
trafficLoggerDetail.default = ${request.time}, ${request.soap.namespace}, ${request.soap.operationname}, ${response.http.status}
trafficLoggerDetail.clusterProperty = trafficlogger.detail
trafficLoggerDetail.systemProperty = ${propertyPrefix}.trafficlogger.detail

# This setting is no longer used (should now be configured via manager log sink UI)
trafficLoggerPattern.description = File path in the style of java.util.logging.FileHandler.pattern; see java.util.logging (Text).  The default is ${ssgHome}${fs}logs${fs}traffic_%g_%u.log.
trafficLoggerPattern.default = ${ssgHome}${fs}logs${fs}traffic_%g_%u.log
trafficLoggerPattern.clusterProperty = trafficlogger.pattern
trafficLoggerPattern.systemProperty = ${propertyPrefix}.trafficlogger.pattern
trafficLoggerPattern.visible = false

# This setting is no longer used (should now be configured via manager log sink UI)
trafficLoggerLimit.description = Approximate maximum size for log files (Bytes; default 5242880). If this is zero, then there is no limit
trafficLoggerLimit.default = 5242880
trafficLoggerLimit.clusterProperty = trafficlogger.limit
trafficLoggerLimit.systemProperty = ${propertyPrefix}.trafficlogger.limit
trafficLoggerLimit.visible = false

# This setting is no longer used (should now be configured via manager log sink UI)
trafficLoggerCount.description = Number of output files (Integer; default 2)
trafficLoggerCount.default = 2
trafficLoggerCount.clusterProperty = trafficlogger.count
trafficLoggerCount.systemProperty = ${propertyPrefix}.trafficlogger.count
trafficLoggerCount.visible = false

trafficLoggerRecordReq.description = Append the contents of the request received by the SecureSpan Gateway at the end of each record (true/false; default false)
trafficLoggerRecordReq.default = false
trafficLoggerRecordReq.clusterProperty = trafficlogger.recordreq
trafficLoggerRecordReq.systemProperty = ${propertyPrefix}.trafficlogger.recordreq

trafficLoggerRecordRes.description = Append the contents of the response returned by the SecureSpan Gateway at the end of each record (true/false; default false)
trafficLoggerRecordRes.default = false
trafficLoggerRecordRes.clusterProperty = trafficlogger.recordres
trafficLoggerRecordRes.systemProperty = ${propertyPrefix}.trafficlogger.recordres

trafficLoggerSelective.description = Whether the traffic logging is selective (true) or globally turned on/off (false).  The default is false.
trafficLoggerSelective.default = false
trafficLoggerSelective.clusterProperty = trafficlogger.selective
trafficLoggerSelective.systemProperty = ${propertyPrefix}.trafficlogger.selective

pingServletMode.description = Set the permission mode of the Ping Servlet (OFF | REQUIRE_CREDS | OPEN; default REQUIRE_CREDS)
pingServletMode.default = REQUIRE_CREDS
pingServletMode.clusterProperty = pingServlet.mode
pingServletMode.systemProperty = ${propertyPrefix}.pingServlet.mode

serviceMetricsEnabled.description = Enable collection of service metrics (true/false; default true)
serviceMetricsEnabled.default = true
serviceMetricsEnabled.clusterProperty = serviceMetrics.enabled
serviceMetricsEnabled.systemProperty = com.l7tech.service.metrics.enabled

wsdlImportFixupEnabled.default = true
wsdlImportFixupEnabled.systemProperty = com.l7tech.service.wsdlimportfix.enabled

wsdlImportProxyEnabled.description = Permit download of WSDL dependencies (WSDL/Schema). When enabled, available WSDL dependencies can be downloaded (true/false; default false)
wsdlImportProxyEnabled.default = false
wsdlImportProxyEnabled.clusterProperty = service.wsdlDependenciesEnabled

wsdlQuery.description = Permit download of WSDL using '?wsdl' URL suffix. When enabled, WSDL documents can be downloaded using the Service's resolution path (true/false; default true)
wsdlQuery.default = true
wsdlQuery.clusterProperty = service.wsdlQueryEnabled

schemaSoftwareFallback.description = If true, in the event of a hardware schema validation failure, the validation will be retried in software (default true).
schemaSoftwareFallback.default = true
schemaSoftwareFallback.systemProperty = ${propertyPrefix}.schema.softwareFallback
schemaSoftwareFallback.clusterProperty = schema.softwareFallback

samlBeforeOffsetMinute.description = The number of minutes (should be a positive integer; default 2) to offset the Not-Before aspect of the validity of SAML statements created by the token service
samlBeforeOffsetMinute.default = 2
samlBeforeOffsetMinute.clusterProperty = samlAssertion.NotBeforeOffsetMinutes
samlBeforeOffsetMinute.systemProperty = ${propertyPrefix}.saml.notbeforeoffsetmin

pkixValidation.identity.description = Default certificate validation setting for identity providers (validate/validatepath/revocation; default validate)
pkixValidation.identity.default = validate
pkixValidation.identity.clusterProperty = pkix.validation.identityProvider

pkixValidation.routing.description = Default certificate validation setting for message routing (validate/validatepath/revocation; default validate)
pkixValidation.routing.default = validate
pkixValidation.routing.clusterProperty = pkix.validation.routing

pkixValidation.other.description = Default certificate validation setting for other uses (validate/validatepath/revocation; default validate)
pkixValidation.other.default = validate
pkixValidation.other.clusterProperty = pkix.validation.other

pkixTrust.useDefaultAnchors.description = Should well known Certificate Authorities be included as Trust Anchors (true/false; default true)
pkixTrust.useDefaultAnchors.default = true
pkixTrust.useDefaultAnchors.clusterProperty = pkix.useDefaultTrustAnchors

pkixCRL.expiry.description = Default setting for CRL expiry age (timeunit; default 1h)
pkixCRL.expiry.default = 1h
pkixCRL.expiry.clusterProperty = pkix.crl.defaultExpiryAge

pkixCRL.cache.expiry.description = CRL cache expiry age (timeunit; default 5m)
pkixCRL.cache.expiry.default = 5m
pkixCRL.cache.expiry.clusterProperty = pkix.crl.cacheExpiryAge

pkixCRL.cache.preexpiry.description = CRL cache refresh pre-expiry age (timeunit; default 1m)
pkixCRL.cache.preexpiry.default = 1m
pkixCRL.cache.preexpiry.clusterProperty = pkix.crl.cachePreExpiryAge
pkixCRL.cache.preexpiry.visible = false

pkixCRL.cache.threads.description = CRL cache refresh worker thread count, or 0 to disable (default 3).
pkixCRL.cache.threads.default = 3
pkixCRL.cache.threads.clusterProperty = pkix.crl.cachePreExpiryThreads
pkixCRL.cache.threads.visible = false

pkixCRL.minExpiryAge.description = Minimum allowed value for CRL expiry age (timeunit; default 1h)
pkixCRL.minExpiryAge.default = 1h
pkixCRL.minExpiryAge.clusterProperty = pkix.crl.minExpiryAge

pkixCRL.maxExpiryAge.description = Maximum allowed value for CRL expiry age (timeunit; default 7d)
pkixCRL.maxExpiryAge.default = 7d
pkixCRL.maxExpiryAge.clusterProperty = pkix.crl.maxExpiryAge

pkixOCSP.expiry.description = Default setting for OCSP response expiry age (timeunit; default 1m)
pkixOCSP.expiry.default = 1m
pkixOCSP.expiry.clusterProperty = pkix.ocsp.defaultExpiryAge

pkixOCSP.minExpiryAge.description = Minimum allowed value for OCSP response expiry age (timeunit; default 1s)
pkixOCSP.minExpiryAge.default = 1s
pkixOCSP.minExpiryAge.clusterProperty = pkix.ocsp.minExpiryAge

pkixOCSP.maxExpiryAge.description = Maximum allowed value for OCSP response expiry age (timeunit; default 15m)
pkixOCSP.maxExpiryAge.default = 15m
pkixOCSP.maxExpiryAge.clusterProperty = pkix.ocsp.maxExpiryAge

pkixOCSP.useNonce.description = Include a nonce in OCSP requests (true/false; default true)
pkixOCSP.useNonce.default = true
pkixOCSP.useNonce.clusterProperty = pkix.ocsp.useNonce

keyStoreDefaultSslKey.description = Keystore ID and alias of default SSL key, colon delimited.  A keystore ID of -1 means "unspecified" (default -1:SSL).
keyStoreDefaultSslKey.default = -1:SSL
keyStoreDefaultSslKey.clusterProperty = keyStore.defaultSsl.alias
keyStoreDefaultSslKey.visible = false

keyStoreDefaultCaKey.description = Keystore ID and alias of default CA key, colon delimited.  A keystore ID of -1 means "unspecified" (default -1:CA).
keyStoreDefaultCaKey.default = -1:CA
keyStoreDefaultCaKey.clusterProperty = keyStore.defaultCa.alias
keyStoreDefaultCaKey.visible = false

keyStoreSearchForAlias.description = If a key alias isn't found in the expected keystore, search all other keystores as well (true/false; true)
keyStoreSearchForAlias.default = true
keyStoreSearchForAlias.clusterProperty = keyStore.searchForAlias

keyStore.certgen.signWithSha1.description = If true, use SHA-1 by default the message digest when signing certificates.  If false, use SHA-384 if available.  (true/false; default false)
keyStore.certgen.signWithSha1.default = false
keyStore.certgen.signWithSha1.clusterProperty = keyStore.signWithSha1
keyStore.certgen.signWithSha1.systemProperty = com.l7tech.security.cert.alwaysSignWithSha1
keyStore.certgen.signWithSha1.setSystemProperty = true

license.expiryWarnAge.description = Time in days before a license/SSL expiry warning is displayed (default 30d)
license.expiryWarnAge.default = 30d
license.expiryWarnAge.clusterProperty = license.expiryWarningPeriod

trustedCert.expiryCheckPeriod.description = The delay to wait between successive Trusted Cert expiry checks (default 12h)
trustedCert.expiryCheckPeriod.default = 12h
trustedCert.expiryCheckPeriod.clusterProperty = trustedCert.expiryCheckPeriod

trustedCert.expiryFineAge.description = The period prior to the expiry of the Certificate in a Trusted Cert Entry that the Gateway should start logging/auditing FINE-level messages (default 30d)
trustedCert.expiryFineAge.default = 30d
trustedCert.expiryFineAge.clusterProperty = trustedCert.expiryFineAge

trustedCert.expiryInfoAge.description = The period prior to the expiry of the Certificate in a Trusted Cert Entry that the Gateway should start logging/auditing INFO-level messages (default 7d)
trustedCert.expiryInfoAge.default = 7d
trustedCert.expiryInfoAge.clusterProperty = trustedCert.expiryInfoAge

trustedCert.expiryWarningAge.description = The period prior to the expiry of the Certificate in a Trusted Cert Entry that the Gateway should start logging/auditing WARNING-level messages (default 2d)
trustedCert.expiryWarningAge.default = 2d
trustedCert.expiryWarningAge.clusterProperty = trustedCert.expiryWarningAge

serverPolicyValidation.maxConcurrency.description = Maximum number of server-side policy validation jobs that may be active simultaneously (default 15).
serverPolicyValidation.maxConcurrency.default = 15
serverPolicyValidation.maxConcurrency.clusterProperty = policyValidation.maxConcurrency

policyVersioningMaxRevisions.description = Maximum number of policy revisions to retain. Only revisions that are not active and which do not have a comment count toward the maximum (default 20).
policyVersioningMaxRevisions.default = 20
policyVersioningMaxRevisions.clusterProperty = policyVersioning.maxRevisions

hpsoamEnabled.description = Enable Agent web service for HP SOA Manager (true/false; default false)
hpsoamEnabled.default = false
hpsoamEnabled.clusterProperty = hpsoam.enabled

hpsoamRequireSSL.description = Control whether SSL is required for Agent web service for HP SOA Manager (true/false; default false)
hpsoamRequireSSL.default = false
hpsoamRequireSSL.clusterProperty = hpsoam.requireSSL

hpsoamRequireCreds.description = Control whether credentials of 'Administrator' or 'Operator' roles are required for Agent web service for HP SOA Manager (true/false; default false)
hpsoamRequireCreds.default = false
hpsoamRequireCreds.clusterProperty = hpsoam.requireCreds

soapRejectMustUnderstand.description = If true, SOAP messages containing an unrecognized SOAP header addressed to the Gateway with mustUnderstand="1" will be rejected immediately (true/false; default true)
soapRejectMustUnderstand.default = true
soapRejectMustUnderstand.clusterProperty = soap.rejectMustUnderstand

soap.actors.description = Additional SOAP (1.1) Actors for Security headers that will be processed by the SecureSpan Gateway (space separated list).  The default actors are\nsecure_span\nhttp://www.layer7tech.com/ws/policy
soap.actors.default = secure_span\nhttp://www.layer7tech.com/ws/policy
soap.actors.systemProperty = com.l7tech.xml.soap.actors
soap.actors.clusterProperty = soap.actors
soap.actors.getSystemProperty = false
soap.actors.setSystemProperty = true

soap.roles.description = Additional SOAP (1.2) Roles for Security headers that will be processed by the SecureSpan Gateway (space separated list).  The default roles are\nsecure_span\nhttp://www.layer7tech.com/ws/policy
soap.roles.default = secure_span\nhttp://www.layer7tech.com/ws/policy
soap.roles.systemProperty = com.l7tech.xml.soap.roles
soap.roles.clusterProperty = soap.roles
soap.roles.getSystemProperty = false
soap.roles.setSystemProperty = true

template.strictMode.description = If true, using nonexistent variables in a template will cause assertions to fail.  If false (the default) an empty string is used instead.
template.strictMode.default = false
template.strictMode.systemProperty = ${propertyPrefix}.template.strictMode
template.strictMode.clusterProperty = template.strictMode

template.defaultMultivalueDelimiter.description = The delimiter to use between values when a multivalued variable is interpolated (defaults to ", ")
template.defaultMultivalueDelimiter.default = ", "
template.defaultMultivalueDelimiter.systemProperty = ${propertyPrefix}.template.defaultMultivalueDelimiter
template.defaultMultivalueDelimiter.clusterProperty = template.defaultMultivalueDelimiter

# The auth cache tunings need to default to their old system properties, but let their cluster properties take precedence
defaultAuthCacheMaxSuccessTime.default = 60000
defaultAuthCacheMaxSuccessTime.systemProperty = ${propertyPrefix}.identity.AuthCache.maxSuccessTime
authCacheMaxSuccessTime.description = Milliseconds to cache successful authentications (default 60000)
authCacheMaxSuccessTime.default = ${defaultAuthCacheMaxSuccessTime}
authCacheMaxSuccessTime.clusterProperty = authCache.maxSuccessTime

defaultAuthCacheMaxFailureTime.default = 30000
defaultAuthCacheMaxFailureTime.systemProperty = ${propertyPrefix}.identity.AuthCache.maxFailureTime
authCacheMaxFailureTime.description = Milliseconds to cache failed authentications (default 30000)
authCacheMaxFailureTime.default = ${defaultAuthCacheMaxFailureTime}
authCacheMaxFailureTime.clusterProperty = authCache.maxFailureTime

defaultAuthCacheSuccessCacheSize.default = 2000
defaultAuthCacheSuccessCacheSize.systemProperty = ${propertyPrefix}.identity.AuthCache.successCacheSize
authCacheSuccessCacheSize.description = The cache size for successful authentications (default 2000)
authCacheSuccessCacheSize.default = ${defaultAuthCacheSuccessCacheSize}
authCacheSuccessCacheSize.clusterProperty = authCache.successCacheSize

defaultAuthCacheFailureCacheSize.default = 200
defaultAuthCacheFailureCacheSize.systemProperty = ${propertyPrefix}.identity.AuthCache.failureCacheSize
authCacheFailureCacheSize.description = The cache size for failed authentications (default 200)
authCacheFailureCacheSize.default = ${defaultAuthCacheFailureCacheSize}
authCacheFailureCacheSize.clusterProperty = authCache.failureCacheSize

defaultAuthCacheGroupMembershipCacheSize.default = 5000
defaultAuthCacheGroupMembershipCacheSize.systemProperty = ${propertyPrefix}.identity.AuthCache.groupMembershipCacheSize
authCacheGroupMembershipCacheSize.description = The cache size for group memberships (default 5000)
authCacheGroupMembershipCacheSize.default = ${defaultAuthCacheGroupMembershipCacheSize}
authCacheGroupMembershipCacheSize.clusterProperty = authCache.groupMembershipCacheSize

principalSessionCacheSize.description = Maximum number of principals to keep in cache (default 100)
principalSessionCacheSize.default = 100
principalSessionCacheSize.clusterProperty = principalSessionCache.cacheSize

principalSessionCacheMaxTime.description = Milliseconds to cache successful principal validations (default 300000)
principalSessionCacheMaxTime.default = 300000
principalSessionCacheMaxTime.clusterProperty = principalSessionCache.maxTime

principalSessionCacheMaxPrincipalGroups.description = Number of groups per principal to store in the cache (default 50)
principalSessionCacheMaxPrincipalGroups.default = 50
principalSessionCacheMaxPrincipalGroups.clusterProperty = principalSessionCache.maxPrincipalGroups

jmsListenerThreadLimit.description=The global limit on the number of processing threads that can be created to work off all JMS endpoints (default 25)
jmsListenerThreadLimit.default=25
jmsListenerThreadLimit.clusterProperty=jms.listenerThreadLimit

emailListenerThreadLimit.description=The global limit on the number of processing threads that can be created to work off all Email endpoints (default 25)
emailListenerThreadLimit.default=25
emailListenerThreadLimit.clusterProperty=email.listenerThreadLimit

customerMapping.addToGatewayAuditEvents.description=Add customer mapping information into the gateway audit, so the user can view the information in Gateway Audit Events window. (true/false; default true)
customerMapping.addToGatewayAuditEvents.default=true
customerMapping.addToGatewayAuditEvents.clusterProperty=customerMapping.addToGatewayAuditEvents
customerMapping.addToGatewayAuditEvents.visible=false

customerMapping.addToServiceMetrics.description=Add customer mapping information into the service_metrics table, so the user can apply the information in the Dashboard. (true/false; default true)
customerMapping.addToServiceMetrics.default=true
customerMapping.addToServiceMetrics.clusterProperty=customerMapping.addToServiceMetrics
customerMapping.addToServiceMetrics.visible=false

services.certificateDiscoveryEnabled.description=Enabling certificate discovery allows XML VPN Clients and Bridge Routing Assertions that send requests to this Gateway to securely discover this Gateway's SSL certificate without user intervention (true/false; default true).
services.certificateDiscoveryEnabled.default=true
services.certificateDiscoveryEnabled.clusterProperty=services.certificateDiscoveryEnabled

processControllerPresent.description = Nodes in this cluster are managed processes (true/false; default false).
processControllerPresent.visible = false
processControllerPresent.clusterProperty = node.processControllerPresent
processControllerPresent.systemProperty = ${propertyPrefix}.processControllerPresent
processControllerPresent.default = false

processControllerPort.description = Port number for internal communication with the process manager (default 8765).
processControllerPort.visible = false
processControllerPort.clusterProperty = node.processControllerPort
processControllerPort.systemProperty = ${propertyPrefix}.processControllerPort
processControllerPort.default = 8765

processControllerExternalPort.description = Port number for ESM remote management of cluster node process managers (default 8765).
processControllerExternalPort.clusterProperty = node.processControllerExternalPort
processControllerExternalPort.systemProperty = ${propertyPrefix}.processControllerExternalPort
processControllerExternalPort.default = 8765

logon.warningBanner.description=Warning message that will be displayed to the user upon successful login to the SecureSpan Manager. By default, this cluster property is empty, which will result in no warning banner being displayed.
logon.warningBanner.default=
logon.warningBanner.clusterProperty=logon.warningBanner

logon.maxAllowableAttempts.description=Maximum number of failed login attempts before the account is locked.   Default is set to 5 attempts max.
logon.maxAllowableAttempts.default=5
logon.maxAllowableAttempts.clusterProperty=logon.maxAllowableAttempts

logon.lockoutTime.description=The time interval that the locked account will have to wait before next possible login retry after lock out.  The default time is set to 1200 seconds (20mins).  Value should be entered in seconds.
logon.lockoutTime.default=1200
logon.lockoutTime.clusterProperty=logon.lockoutTime

password.expiry.description=Number of days until password expires (max 90 days).  The default is set to 90 days.
password.expiry.default=90
password.expiry.clusterProperty=password.expiry

security.stig.enabled.default=true
security.stig.enabled.systemProperty=${propertyPrefix}.stigEnabled

krb5Keytab.description = Kerberos keytab file data (default <no value>)
krb5Keytab.visible = false
krb5Keytab.clusterProperty = krb5.keytab

krb5Realm.description=The Realm value in the Kerberos configuration file krb5.conf (default <no value>).
krb5Realm.clusterProperty=krb5.realm

krb5KDC.description=The KDC value in the Kerberos configuration file krb5.conf. Supports a list of comma-separated (,) IP addresses where the first in the list is the preferred host (default <no value>).
krb5KDC.clusterProperty=krb5.kdc

defaultKrb5TicketCacheLifetime.default=3600
krb5TicketCacheLifetime.systemProperty=com.l7tech.common.security.kerberos.lifetime

policyorganization.maxFolderDepth.default=8
policyorganization.maxFolderDepth.systemProperty=${propertyPrefix}.maxFolderDepth

ldapCertIndexInterval.description=Milliseconds in between LDAP certificate indexing (default 600000)
ldapCertIndexInterval.default=600000
ldapCertIndexInterval.clusterProperty=ldap.certificateIndex.interval

ldapCertCacheLifetime.description=Milliseconds to keep LDAP certificates in the LDAP certificate cache (default 600000)
ldapCertCacheLifetime.default=600000
ldapCertCacheLifetime.clusterProperty=ldap.certificate.cachetime

ldapCaseInsensitiveComparison.description=Compare LDAP attribute values in a case insensitive manner (ture/false; default true).
ldapCaseInsensitiveComparison.default=true
ldapCaseInsensitiveComparison.clusterProperty=ldap.attributecomparison.caseinsensitive
ldapCaseInsensitiveComparison.visible=false

request.compress.gzip.allow.description=Allow GZIP compressed requests (true/false; default true)
request.compress.gzip.allow.default=true
request.compress.gzip.allow.clusterProperty=request.compress.gzip.allow

timestampCreatedFutureGrace.description = To accommodate clock skew, WSS timestamp created dates are permitted to be up to this far in the future (milliseconds; default 60000).
timestampCreatedFutureGrace.default = 60000
timestampCreatedFutureGrace.systemProperty = ${propertyPrefix}.policy.assertion.xmlsec.ServerRequestWssTimestamp.createdFutureGrace
timestampCreatedFutureGrace.clusterProperty = security.wss.timestamp.createdFutureGrace

timestampExpiresPastGrace.description = To accommodate clock skew, WSS timestamp expiry dates are permitted to be up to this far in the past (milliseconds; default 60000).
timestampExpiresPastGrace.default = 60000
timestampExpiresPastGrace.systemProperty = ${propertyPrefix}.policy.assertion.xmlsec.ServerRequestWssTimestamp.expiresPastGrace
timestampExpiresPastGrace.clusterProperty = security.wss.timestamp.expiresPastGrace

esmNotificationEnabled.description = Enable ESM subscription notifications (true/false; default true)
esmNotificationEnabled.default = true
esmNotificationEnabled.clusterProperty = esm.notification.enabled

esmNotificationInterval.description = The interval between ESM subscription notification attempts (in milliseconds; default 60000). Note that this only applies to metrics notifications; status changes are sent as they occur.
esmNotificationInterval.default = 60000
esmNotificationInterval.clusterProperty = esm.notification.interval

pkix.keyUsagePolicy.description=Policy for enforcement of X.509 Key Usage and Extended Key Usage extensions (XML string; empty to use system default policy)
pkix.keyUsagePolicy.default=
pkix.keyUsagePolicy.systemProperty=com.l7tech.pkix.keyUsagePolicy
pkix.keyUsagePolicy.clusterProperty=pkix.keyUsagePolicy

pkix.keyUsage.description=Whether X.509 Key Usage and Extended Key Usage extensions should be enforced per the pkix.keyUsagePolicy. (values IGNORE and ENFORCE; default ENFORCE)
pkix.keyUsage.default=ENFORCE
pkix.keyUsage.systemProperty=com.l7tech.pkix.keyUsage
pkix.keyUsage.clusterProperty=pkix.keyUsage

wss.decorator.mustUnderstand.description=Whether Security headers should be generated with mustUnderstand asserted (true/false; default true)
wss.decorator.mustUnderstand.default=true
wss.decorator.mustUnderstand.systemProperty=com.l7tech.common.security.xml.decorator.secHdrMustUnderstand
wss.decorator.mustUnderstand.clusterProperty=wss.decorator.mustUnderstand
wss.decorator.mustUnderstand.setSystemProperty=true

wss.processor.allowMultipleTimestampSignatures.description = Whether Security headers should be permitted to contain multiple Signatures covering the timestamp (true/false; default false)
wss.processor.allowMultipleTimestampSignatures.default = false
wss.processor.allowMultipleTimestampSignatures.clusterProperty = wss.processor.allowMultipleTimestampSignatures

wss.processor.allowUnknownBinarySecurityTokens.description = Should Binary Security Tokens of an unknown type be permitted or cause security processing to fail (true/false; default false).
wss.processor.allowUnknownBinarySecurityTokens.default = false
wss.processor.allowUnknownBinarySecurityTokens.clusterProperty = wss.processor.allowUnknownBinarySecurityTokens

wss.processor.strictSignatureConfirmationValidation.description = Strict enforcement of signature confirmation validation, default true.
wss.processor.strictSignatureConfirmationValidation.default = true
wss.processor.strictSignatureConfirmationValidation.clusterProperty = wss.processor.strictSignatureConfirmationValidation

wss.decorator.digsig.messagedigest.description=Specify the digital signature message digest algorithm used by the WSS decorator (SHA-1, SHA-256, SHA-384, or SHA-512; default SHA-1)
wss.decorator.digsig.messagedigest.default=SHA-1
wss.decorator.digsig.messagedigest.clusterProperty=wss.decorator.digsig.messagedigest
wss.decorator.digsig.messagedigest.systemProperty=com.l7tech.security.xml.decorator.digsig.messagedigest
wss.decorator.digsig.messagedigest.setSystemProperty=true


#
# Note:
# For each cluster property, please add default in the description.  For example, XYZ_Prop.description = This is a demo description (<unit>; default <default value>)
#