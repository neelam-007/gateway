<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC  "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

    <!--
    The Admin Services Context contains the definitions that describe and export The Admin Services.
    Things such as RMI exports, SSL admin configuration are deifned here.
 -->


<!--suppress PlaceholderValuesInspection -->
<beans>
    <!-- the internal rmi/ssl trust failue handler that allows connection to self -->
    <bean id="internalSslTrustFailureHandler"
          class="com.l7tech.gateway.common.spring.remoting.rmi.ssl.CertificateTrustedTrustFailureHandler">
        <constructor-arg ref="sslKeystoreCertificate"/>
    </bean>

    <!--
    set the internal trust failurte handler. This is required when the ssl connection to self is attempted,
    such as when connection to the local rmi registry.
    -->
    <bean id="setInternalTrustFailureHandler"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="com.l7tech.gateway.common.spring.remoting.rmi.ssl.SslRMIClientSocketFactory.setTrustFailureHandler"/>
        <property name="arguments">
            <list>
                <ref local="internalSslTrustFailureHandler"/>
            </list>
        </property>
    </bean>
    <!-- Handler for SSL RMI Client certificates -->
    <bean id="setNode2NodeInternalTrustFailureHandler"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="com.l7tech.gateway.common.spring.remoting.rmi.ssl.SslRMIServerSocketFactory.setTrustFailureHandler"/>
        <property name="arguments">
            <list>
                <ref local="internalSslTrustFailureHandler"/>
            </list>
        </property>
    </bean>

    <!-- admin services, Rmi socket factories -->
    <bean id="rmiServerSocketFactory" class="com.l7tech.gateway.common.spring.remoting.rmi.ssl.SslRMIServerSocketFactory"
          depends-on="setNode2NodeInternalTrustFailureHandler">
        <property name="keyStoreType" value="${keystoretype}"/>
        <property name="keyStoreFile" value="${keystoredir}${file.separator}${sslkstorename}"/>
        <property name="keyStoreAlias" value="${sslkeyalias}"/>
        <property name="keyStorePassword" value="${sslkspasswd}"/>
    </bean>

    <bean id="rmiClientSocketFactory" class="com.l7tech.gateway.common.spring.remoting.rmi.ssl.SslRMIClientSocketFactory"
          depends-on="setKeyManagersForNodeToNodeRMI, setInternalTrustFailureHandler, setNode2NodeInternalTrustFailureHandler">
        <property name="host">
            <!-- Extract host name from this nodes cluster node info -->
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetObject">
                    <!-- Get this nodes info -->
                    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                        <property name="targetObject" ref="clusterInfoManager"/>
                        <property name="targetMethod" value="getSelfNodeInf"/>
                    </bean>
                </property>
                <property name="targetMethod" value="getAddress"/>
            </bean>
        </property>
    </bean>

    <bean id="adminSessionInvocationFactory" class="com.l7tech.gateway.common.spring.remoting.rmi.AdminSessionInvocationFactory"/>

    <bean id="rmiPort" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="serverConfig">
        <property name="targetObject" ref="serverConfig"/>
        <property name="targetMethod" value="getIntProperty"/>
        <property name="arguments"><list><value>clusterPort</value><value>2124</value></list></property> 
    </bean>

    <bean id="rmiRegistryInit" class="com.l7tech.gateway.common.spring.remoting.rmi.RmiRegistryInitializer" depends-on="systemProperties">
        <property name="port">
            <!--suppress InjectionValueTypeInspection -->
            <ref local="rmiPort"/>
        </property>
        <property name="clientSocketFactory" ref="rmiClientSocketFactory"/>
        <property name="serverSocketFactory" ref="rmiServerSocketFactory"/>
    </bean>

    <bean id="rmiRegistry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean" depends-on="rmiRegistryInit">
        <property name="port">
            <!--suppress InjectionValueTypeInspection -->
            <ref local="rmiPort"/>
        </property>
        <property name="clientSocketFactory" ref="rmiClientSocketFactory"/>
        <property name="serverSocketFactory" ref="rmiServerSocketFactory"/>
    </bean>

    <!--    shared export properties, inherited with parent= -->
    <bean id="sharedClusterExportProperties" abstract="true" depends-on="rmiRegistryInit">
        <property name="registry" ref="rmiRegistry"/>
        <property name="servicePort">
            <!--suppress InjectionValueTypeInspection -->
            <ref local="rmiPort"/>
        </property>
        <property name="clientSocketFactory" ref="rmiClientSocketFactory"/>
        <property name="serverSocketFactory" ref="rmiServerSocketFactory"/>
        <property name="stubRemoteInvocationFactory" ref="adminSessionInvocationFactory"/>
        <property name="remoteInvocationExecutor">
            <bean class="com.l7tech.gateway.common.spring.remoting.rmi.ClusterRemoteInvocationExecutor">
                <constructor-arg ref="remotingProvider"/>
            </bean>
        </property>
    </bean>

    <bean id="remotingProvider" class="com.l7tech.server.admin.AdminRemotingProvider">
        <constructor-arg ref="licenseManager"/>
        <constructor-arg ref="adminSessionManager"/>
        <constructor-arg ref="clusterInfoManager"/>
    </bean>

    <!-- cluster login exporter -->
    <bean class="com.l7tech.gateway.common.spring.remoting.rmi.RmiServiceExporterStubFactoryBean" parent="sharedClusterExportProperties">
        <property name="serviceName" value="ClusterLogin"/>
        <property name="service" ref="clusterLogin"/>
        <property name="serviceInterface" value="com.l7tech.gateway.common.cluster.ClusterLogin"/>
    </bean>
    <!-- cluster login servant -->
    <bean id="clusterLogin" class="com.l7tech.server.cluster.ClusterLoginImpl"/>

    <!-- cluster context exporter -->
    <bean id="clusterContextRemote" class="com.l7tech.gateway.common.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedClusterExportProperties">
        <property name="service" ref="clusterContext"/>
        <property name="serviceInterface" value="com.l7tech.gateway.common.cluster.ClusterContext"/>
        <property name="singleton" value="false"/>
    </bean>
    <!-- cluster context servant -->
    <bean id="clusterContext" class="com.l7tech.server.cluster.ClusterContextImpl">
        <constructor-arg ref="clusterLogRemote"/>
    </bean>

    <!-- cluster audit exporter -->
    <bean id="clusterLogRemote" class="com.l7tech.gateway.common.spring.remoting.rmi.RmiServiceExporterStubFactoryBean"
          parent="sharedClusterExportProperties">
        <property name="service" ref="auditAdmin"/>
        <property name="serviceInterface" value="com.l7tech.gateway.common.logging.GenericLogAdmin"/>
    </bean>

    <!-- admin session tracker -->
    <bean id="adminSessionManager" class="com.l7tech.server.admin.AdminSessionManager" singleton="true">
        <property name="sessionValidator" ref="adminLogin_UNSECURED"/>
    </bean>

    <bean id="groupPrincipalCache" class="com.l7tech.server.admin.GroupPrincipalCache" singleton="true" factory-method="getInstance" />

    <!--==============================================================-
    RBAC Enforcement and other interceptors
    -===============================================================-->

    <bean id="rbacPointcut" class="com.l7tech.server.security.rbac.SecuredPointcut"/>

    <bean id="rbacAdvice" class="com.l7tech.server.security.rbac.SecuredMethodInterceptor">
        <constructor-arg ref="roleManager"/>
        <constructor-arg ref="cachingEntityFinder"/>
        <constructor-arg ref="policyManager"/>
    </bean>

    <bean id="rbacAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="pointcut" ref="rbacPointcut"/>
        <property name="advice" ref="rbacAdvice"/>
    </bean>

    <!-- Exception advices for server side error handling -->
    <bean id="unsupportedExceptionInterceptor" class="com.l7tech.server.util.UnsupportedExceptionsThrowsAdvice"/>

    <bean id="mysqlFailureThrowsAdvice" class="com.l7tech.server.util.MySqlFailureThrowsAdvice"/>

    <bean id="constraintViolationThrowsAdvice" class="com.l7tech.server.util.ConstraintViolationThrowsAdvice"/>

    <bean id="adminConnectionPoolSelector" class="com.l7tech.server.util.UserSwitchedRoutingDataSourceSelector">
        <constructor-arg value="admin"/>
    </bean>

    <!-- Transaction, RBAC, etc interception -->
    <bean id="adminIntercepted" abstract="true" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interceptorNames">
            <list>
                <idref bean="unsupportedExceptionInterceptor"/>
                <idref bean="mysqlFailureThrowsAdvice"/>
                <idref bean="constraintViolationThrowsAdvice"/>
                <idref bean="adminConnectionPoolSelector"/>
                <idref bean="annotationTransactionInterceptor"/>
                <idref bean="rbacAdvisor"/>
            </list>
        </property>
    </bean>

    <!--==============================================================-
    Administration beans (admin intercepted)
    -===============================================================-->

    <bean id="adminLogin" parent="adminIntercepted">
        <property name="target" ref="adminLogin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.admin.AdminLogin"/>
    </bean>

    <bean id="serviceAdmin" parent="adminIntercepted">
        <property name="target" ref="serviceAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.service.ServiceAdmin"/>
    </bean>

    <bean id="auditAdmin" parent="adminIntercepted">
        <property name="target" ref="auditAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.audit.AuditAdmin"/>
    </bean>

    <bean id="identityAdmin" parent="adminIntercepted">
        <property name="target" ref="identityAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.admin.IdentityAdmin"/>
    </bean>

    <bean id="jmsAdmin" parent="adminIntercepted">
        <property name="target" ref="jmsAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.transport.jms.JmsAdmin"/>
    </bean>

    <bean id="ftpAdmin" parent="adminIntercepted">
        <property name="target" ref="ftpAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.transport.ftp.FtpAdmin"/>
    </bean>

    <bean id="rbacAdmin" parent="adminIntercepted">
        <property name="target" ref="rbacAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.security.rbac.RbacAdmin"/>
    </bean>

    <bean id="schemaAdmin" parent="adminIntercepted">
        <property name="target" ref="schemaAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.schema.SchemaAdmin"/>
    </bean>

    <bean id="trustedCertAdmin" parent="adminIntercepted">
        <property name="target" ref="trustedCertAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.security.TrustedCertAdmin"/>
    </bean>

    <bean id="clusterStatusAdmin" parent="adminIntercepted">
        <property name="target" ref="clusterStatusAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.cluster.ClusterStatusAdmin"/>
    </bean>

    <bean id="transportAdmin" parent="adminIntercepted">
        <property name="target" ref="transportAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.transport.TransportAdmin"/>
    </bean>

    <bean id="policyAdmin" parent="adminIntercepted">
        <property name="target" ref="policyAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.admin.PolicyAdmin"/>
    </bean>

    <bean id="logSinkAdmin" parent="adminIntercepted">
        <property name="target" ref="logSinkAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.log.LogSinkAdmin"/>
    </bean>

    <bean id="kerberosAdmin" parent="adminIntercepted">
        <property name="target" ref="kerberosAdmin_UNSECURED"/>
        <property name="proxyInterfaces" value="com.l7tech.gateway.common.admin.KerberosAdmin"/>
    </bean>

    <!--==============================================================-
    Administration bean servants
    -===============================================================-->

    <!-- admin login servant -->
    <bean id="adminLogin_UNSECURED" class="com.l7tech.server.admin.AdminLoginImpl">
        <property name="identityProviderConfigManager" ref="identityProviderConfigManager"/>
        <property name="identityProviderFactory" ref='identityProviderFactory'/>
        <property name="serverCertificate" ref ="sslKeystoreCertificate"/>
        <property name="adminSessionManager" ref="adminSessionManager"/>
        <property name="roleManager" ref="roleManager"/>
        <property name="groupPrincipalCache" ref="groupPrincipalCache"/>
    </bean>

    <!-- identity admin servant -->
    <bean id="identityAdmin_UNSECURED" class="com.l7tech.server.identity.IdentityAdminImpl">
        <constructor-arg ref="roleManager"/>
        <constructor-arg ref="rootCertificate"/>
        <property name="identityProviderConfigManager" ref="identityProviderConfigManager"/>
        <property name="clientCertManager" ref="clientCertManager"/>
        <property name="identityProviderFactory" ref="identityProviderFactory"/>
    </bean>

    <!-- audit admin servant -->
    <bean id="auditAdmin_UNSECURED" class="com.l7tech.server.audit.AuditAdminImpl">
        <property name="auditRecordManager" ref="auditRecordManager"/>
        <property name="logRecordManager" ref="logRecordManager"/>
        <property name="keystore" ref="keystore"/>
        <property name="serverConfig" ref="serverConfig"/>
        <property name="clusterPropertyManager" ref="clusterPropertyManager"/>
    </bean>

    <!-- service admin servant -->
    <bean id="serviceAdmin_UNSECURED" class="com.l7tech.server.service.ServiceAdminImpl">
        <constructor-arg ref="licenseManager"/>
        <constructor-arg ref="registryPublicationManager"/>
        <constructor-arg ref="uddiAgentFactory"/>
        <constructor-arg ref="serviceManager"/>
        <constructor-arg ref="serviceAliasManager"/>
        <constructor-arg ref="serverPolicyValidator"/>
        <constructor-arg ref="sampleMessageManager"/>
        <constructor-arg ref="serviceDocumentManager"/>
        <constructor-arg ref="counterIDManager"/>
        <constructor-arg ref="trustManager"/>
        <constructor-arg ref="roleManager"/>
        <constructor-arg ref="wspReader"/>
        <constructor-arg>
            <bean class="com.l7tech.server.uddi.UDDITemplateManager">
                <constructor-arg ref="serverConfig"/>
            </bean>
        </constructor-arg>
        <constructor-arg ref="policyVersionManager"/>
        <constructor-arg ref="serverConfig"/>
        <constructor-arg ref="serviceTemplateManager"/>
        <constructor-arg ref="policyFolderManager"/>
    </bean>

    <!-- schema admin servant -->
    <bean id="schemaAdmin_UNSECURED" class="com.l7tech.server.communityschemas.SchemaAdminImpl">
        <property name="schemaEntryManager" ref="schemaEntryManager"/>
    </bean>

    <!-- jms admin servant -->
    <bean id="jmsAdmin_UNSECURED" class="com.l7tech.server.transport.jms.JmsAdminImpl">
        <constructor-arg ref="jmsConnectionManager"/>
        <constructor-arg ref="jmsEndpointManager"/>
        <constructor-arg ref="jmsPropertyMapper"/>
    </bean>

    <!-- FTP admin servant -->
    <bean id="ftpAdmin_UNSECURED" class="com.l7tech.server.transport.ftp.FtpAdminImpl">
        <constructor-arg ref="routingTrustManager"/>
        <constructor-arg ref="ssgKeyStoreManager"/>
        <constructor-arg ref="assertionRegistry"/>
    </bean>

    <!-- trusted cert admin servant -->
    <bean id="trustedCertAdmin_UNSECURED" class="com.l7tech.server.TrustedCertAdminImpl">
        <constructor-arg ref="trustedCertManager"/>
        <constructor-arg ref="revocationCheckPolicyManager"/>
        <constructor-arg ref="rootCertificate"/>
        <constructor-arg ref="sslKeystoreCertificate"/>
        <constructor-arg ref="licenseManager"/>
        <constructor-arg ref="ssgKeyStoreManager"/>
    </bean>

    <bean id="transportAdmin_UNSECURED" class="com.l7tech.server.transport.TransportAdminImpl">
        <constructor-arg ref="serverConfig"/>
        <constructor-arg ref="ssgConnectorManager"/>
        <constructor-arg ref="keystore"/>
    </bean>

    <!-- custom assertions admin servant -->
    <bean id="customAssertionsAdmin" class="com.l7tech.server.admin.CustomAssertionsRegistrarImpl">
        <property name="delegate" ref="customAssertionRegistrar"/>
    </bean>

    <!-- kerberos admin servant -->
    <bean id="kerberosAdmin_UNSECURED" class="com.l7tech.server.KerberosAdminImpl">
        <constructor-arg ref="clusterPropertyManager"/>        
    </bean>

    <!-- trusted cert admin servant -->
    <bean id="clusterStatusAdmin_UNSECURED" class="com.l7tech.server.cluster.ClusterStatusAdminImp">
        <constructor-arg ref="clusterInfoManager"/>
        <constructor-arg ref="serviceUsageManager"/>
        <constructor-arg ref="clusterPropertyManager"/>
        <constructor-arg ref="licenseManager"/>
        <constructor-arg ref="serviceMetricsManager"/>
        <constructor-arg ref="serverConfig"/>
        <constructor-arg ref="assertionRegistry"/>
    </bean>

    <!-- RBAC admin impl -->
    <bean id="rbacAdmin_UNSECURED" class="com.l7tech.server.security.rbac.RbacAdminImpl">
        <constructor-arg ref="roleManager"/>
        <constructor-arg ref="cachingEntityFinder"/>
    </bean>

    <!-- Policy admin impl -->
    <bean id="policyAdmin_UNSECURED" class="com.l7tech.server.policy.PolicyAdminImpl">
        <constructor-arg ref="policyManager"/>
        <constructor-arg ref="policyAliasManager"/>
        <constructor-arg ref="policyCache"/>
        <constructor-arg ref="policyVersionManager"/>
        <constructor-arg ref="roleManager"/>
        <constructor-arg ref="policyFolderManager"/>
    </bean>

    <bean id="logSinkAdmin_UNSECURED" class="com.l7tech.server.log.LogSinkAdminImpl">
        <constructor-arg ref="sinkManager"/>
    </bean>
</beans>
