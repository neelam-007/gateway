package com.l7tech.gateway.common.security.password;

/**
 * Interface implemented by a scheme that hashes and verified passwords.
 */
public interface PasswordHasher {
    /**
     * Construct a string encoding a verifier hash for the specified password bytes.
     *
     * @param passwordBytes the bytes of the password to hash.  Required.
     * @return a verifier string for the specified password, in a format determined by this particular hasher implementation.  Never null or empty.
     * @throws PasswordHashingException if there is an error constructing the verifier hash.
     */
    String hashPassword(byte[] passwordBytes) throws PasswordHashingException;

    /**
     * Verify the specified password against the specified verifier hash string.
     *
     * @param passwordBytes the password bytes to verifiy.  Required.
     * @param expectedHashedPassword the string encoded verifier hash, as generated by this hasher's {@link #hashPassword(byte[])} method.  Required.
     * @throws IncorrectPasswordException if the specified password does not verify against the specified verifier.
     * @throws PasswordHashingException if there is an error performing the verification.
     */
    void verifyPassword(byte[] passwordBytes, String expectedHashedPassword) throws IncorrectPasswordException, PasswordHashingException;
}
