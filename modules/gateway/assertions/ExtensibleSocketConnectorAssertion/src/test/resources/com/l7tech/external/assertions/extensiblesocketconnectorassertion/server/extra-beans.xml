<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC  "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

    <bean id="secureRandom" class="java.security.SecureRandom"/>

    <bean id="policyExporterImporterManager" class="com.l7tech.external.assertions.extensiblesocketconnectorassertion.mock.MockPolicyExporterImporterManager"/>

    <bean id="genericEntityManager" class="com.l7tech.external.assertions.extensiblesocketconnectorassertion.mock.MockGenericEntityManager"/>

    <bean id="clusterNodeId" class="java.lang.String">
        <constructor-arg index="0" value="MyCluster"/>
    </bean>
    <bean id="serverConfig" class="com.l7tech.server.ServerConfigStub">
        <property name="clusterPropertyCache" ref="clusterPropertyCache"/>
    </bean>

    <bean id="clusterPropertyCache" class="com.l7tech.server.cluster.ClusterPropertyCache">
        <property name="clusterPropertyManager" ref="clusterPropertyManager"/>
    </bean>

    <!-- server side identity provider factory (same as the prod)-->
    <bean id="identityProviderFactory" class="com.l7tech.server.identity.IdentityProviderFactory">
        <constructor-arg ref="identityProviderConfigManager"/>
    </bean>

    <!-- test identity configuration manager -->
    <bean id="identityProviderConfigManager" class="com.l7tech.server.identity.TestIdentityProviderConfigManager">
    </bean>

    <!--
        Test Identity Provider Factory
    -->
    <bean id="testIdentityProviderFactory" class="com.l7tech.server.identity.TestIdentityProvider$Factory"/>

    <!--  test service admin -->
    <bean id="serviceAdmin" class="com.l7tech.server.service.ServiceAdminStub">
        <property name="policyValidator" ref="defaultPolicyValidator"/>
        <property name="serviceManager" ref="serviceManager"/>
    </bean>

    <bean id="resolutionConfigurationManager" class="com.l7tech.server.transport.ResolutionConfigurationManagerStub"/>

    <bean id="folderManager" class="com.l7tech.server.folder.FolderManagerStub"/>

    <bean id="folderCache" class="com.l7tech.server.folder.FolderCacheImpl">
        <constructor-arg index="0" ref="folderManager"/>
    </bean>

    <!-- service cache -->
    <bean id="serviceCache" class="com.l7tech.server.service.ServiceCacheStub" depends-on="wsdlStrategyServiceDocumentsInitializer">
        <constructor-arg index="0" ref="policyCache"/>
        <constructor-arg index="1"><null/></constructor-arg>
        <constructor-arg index="2" ref="serviceManager"/>
        <constructor-arg index="3" ref="serviceUsageManager"/>
        <constructor-arg index="4">
            <bean class="com.l7tech.server.service.resolution.ServiceResolutionManager">
                <constructor-arg index="0" ref="resolutionConfigurationManager"/>
                <constructor-arg index="1" value="Default"/>
                <constructor-arg index="2">
                    <list>
                        <bean class="com.l7tech.server.service.resolution.ServiceIdResolver"><constructor-arg ref="auditFactory"/></bean>
                        <bean class="com.l7tech.server.service.resolution.UriResolver"><constructor-arg ref="auditFactory"/></bean>
                        <bean class="com.l7tech.server.service.resolution.SoapActionResolver"><constructor-arg ref="auditFactory"/></bean>
                        <bean class="com.l7tech.server.service.resolution.UrnResolver"><constructor-arg ref="auditFactory"/></bean>
                    </list>
                </constructor-arg>
                <constructor-arg index="3">
                    <list>
                        <bean class="com.l7tech.server.service.resolution.SoapOperationResolver">
                            <constructor-arg ref="auditFactory"/>
                            <constructor-arg ref="serviceDocumentManager"/>
                        </bean>
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg index="5" ref="clusterInfoManager"/>
        <constructor-arg index="6"><null/></constructor-arg>
    </bean>

    <!-- server side service manager -->
    <bean id="serviceManager" class="com.l7tech.server.service.ServiceManagerStub">
        <constructor-arg ref="policyManager"/>
    </bean>

    <bean id="serviceUsageManager" class="com.l7tech.server.cluster.ServiceUsageManagerStub"/>

    <!-- test config uses the policy validator without persistence -->
    <bean id="defaultPolicyValidator" class="com.l7tech.policy.validator.DefaultPolicyValidator">
        <constructor-arg ref="policyManager"/>
        <constructor-arg ref="policyPathBuilderFactory"/>
    </bean>

    <!-- server side policy factory -->
    <bean id="policyFactory" class="com.l7tech.server.policy.ServerPolicyFactory">
        <constructor-arg ref="licenseManager"/>
        <constructor-arg ref="injector"/>
    </bean>

    <!-- server side trusted cert manager -->
    <bean id="trustedCertManager" name="trustedCertCache" class="com.l7tech.server.identity.cert.TestTrustedCertManager">
        <constructor-arg ref="defaultKey"/>
    </bean>

    <bean id="trustedCertServices" class="com.l7tech.server.identity.cert.TrustedCertServicesImpl">
        <constructor-arg ref="trustedCertCache"/>
    </bean>

    <!-- server side custom assertions registrar -->
    <bean id="customAssertionRegistrar" class="com.l7tech.server.policy.custom.CustomAssertionsRegistrarStub">
    </bean>

    <!-- server side client cert manager -->
    <bean id="clientCertManager" class="com.l7tech.server.identity.cert.ClientCertManagerStub">
    </bean>

    <!-- stub audit record manager -->
    <bean id="auditRecordManager" class="com.l7tech.server.audit.AuditRecordManagerStub">
    </bean>

    <!-- server side HTTP routing client trust manager -->
    <bean id="trustManager" class="com.l7tech.external.assertions.extensiblesocketconnectorassertion.mock.MockSslTrustManager">
    </bean>
    <bean id="routingTrustManager" class="com.l7tech.server.transport.http.SslClientTrustManager">
        <constructor-arg ref="trustedCertServices"/>
        <constructor-arg ref="certValidationProcessor"/>
        <constructor-arg>
            <bean class="com.l7tech.server.security.cert.CertValidationProcessor$Facility" factory-method="valueOf">
                <constructor-arg><value>ROUTING</value></constructor-arg>
            </bean>
        </constructor-arg>
    </bean>
    <!-- server side HTTP routing hostname verifier -->
    <bean id="hostnameVerifier" class="com.l7tech.server.transport.http.SslClientHostnameVerifier">
        <constructor-arg ref="serverConfig"/>
        <constructor-arg ref="trustedCertServices"/>
    </bean>

    <!-- create test keys -->
    <!--<bean id="testKeys" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
    <!--<property name="staticMethod" value="com.l7tech.gateway.common.security.Keys.createTestSsgKeystoreProperties"/>-->
    <!--</bean>-->

    <bean id="masterPasswordManager" class="com.l7tech.server.security.MasterPasswordManagerStub">
        <constructor-arg>
            <value>test_mp_12345</value>
        </constructor-arg>
    </bean>

    <!-- ssl config  -->
    <bean id="defaultKey" class="com.l7tech.server.TestDefaultKey"/>



    <bean id="sslKeyEntry" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="defaultKey"/>
        <property name="targetMethod" value="getSslInfo"/>
    </bean>

    <bean id="sslKeystoreCertificate" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="sslKeyEntry"/>
        <property name="targetMethod" value="getCertificate"/>
    </bean>

    <bean id="sslKeystoreKey" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="sslKeyEntry"/>
        <property name="targetMethod" value="getPrivateKey"/>
    </bean>

    <bean id="sslKeyManagers" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="defaultKey"/>
        <property name="targetMethod" value="getSslKeyManagers"/>
    </bean>

    <!-- server Wss Decorator -->
    <bean id="wssDecorator" class="com.l7tech.security.xml.decorator.WssDecoratorImpl">
    </bean>

    <bean id="messageProcessorInjector" class="com.l7tech.server.MessageProcessorInjectorImpl" >
        <constructor-arg>
            <bean class="com.l7tech.server.extension.registry.processorinjection.ServiceInjectionsRegistry"/>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.l7tech.server.extension.registry.processorinjection.ServiceInjectionsRegistry"/>
        </constructor-arg>
    </bean>

    <!-- server Message Processor -->
    <!--bean id="messageProcessor" class="com.l7tech.server.TestMessageProcessor">
        <constructor-arg ref="serviceCache"/>
        <constructor-arg ref="policyCache"/>
        <constructor-arg ref="wssDecorator"/>
        <constructor-arg ref="inboundSecureConversationContextManager"/>
    </bean-->
    <bean id="messageProcessor" class="com.l7tech.external.assertions.extensiblesocketconnectorassertion.mock.MockMessageProcessor">
        <!-- ServiceCache, PolicyCache, WssDecorator, SecurityTokenResolver,
             SecurityContextFinder, LicenseManager, ServiceMetricsServices,
             AuditContext, Config, TrafficLogger, SoapFaultManager,
             ApplicationEventPublisher -->
        <constructor-arg index="0" ref="serviceCache"/>
        <constructor-arg index="1" ref="policyCache"/>
        <constructor-arg index="2" ref="wssDecorator"/>
        <constructor-arg index="3" ref="securityTokenResolver"/>
        <constructor-arg index="4" ref="securityContextFinder"/>
        <constructor-arg index="5" ref="licenseManager"/>
        <constructor-arg index="6" ref="serviceMetricsServices"/>
        <constructor-arg index="7" ref="auditContextFactory"/>
        <constructor-arg index="8" ref="messageSummaryAuditFactory"/>
        <constructor-arg index="9" ref="messageProcessorInjector"/>
        <constructor-arg index="10" ref="config"/>
        <constructor-arg index="11" ref="trafficLogger"/>
        <constructor-arg index="12" ><null/></constructor-arg>
    </bean>

    <bean id="auditContextFactory" class="com.l7tech.server.audit.AuditContextFactoryStub">
        <constructor-arg index="0" ref="config"/>
        <constructor-arg index="1" value=""/>
    </bean>

    <bean id="config" class="com.l7tech.server.ServerConfig">
        <!-- Properties, long -->
        <constructor-arg index="0">
            <props>
                <prop key="test">true</prop>
            </props>
        </constructor-arg>
        <constructor-arg index="1" value="0"/>
    </bean>

    <bean id="trafficLogger" class="com.l7tech.server.log.TrafficLogger">
        <!-- Config, SoapFaultManager -->
        <constructor-arg index="0" ref="config"/>
        <constructor-arg index="1" ref="soapFaultManager"/>
    </bean>

    <bean id="serviceMetricsServices" class="com.l7tech.server.service.ServiceMetricsServicesImpl" >
        <!-- String -->
        <constructor-arg value=""/>
    </bean>

    <!--bean id="applicationEventPublisher" class="com.l7tech.server.ems.util.ApplicationEventPublisherImpl"-->

    <!-- server side policy filter manager  -->
    <bean id="policyFilterManager" class="com.l7tech.server.policy.filter.FilterManager">
        <constructor-arg ref="identityProviderFactory"/>
        <constructor-arg>
            <list>
                <value>com.l7tech.server.policy.filter.IdentityRule</value>
                <value>com.l7tech.server.policy.filter.HideUnsupportedClientAssertions</value>
            </list>
        </constructor-arg>
    </bean>


    <bean id="auditContext" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces" value="com.l7tech.server.audit.AuditContextStubInt"/>
        <property name="targetSource">
            <ref local="auditContextTargetSource"/>
        </property>
    </bean>

    <bean id="auditContextTarget" class="com.l7tech.server.audit.AuditContextStub" singleton="false">
    </bean>

    <bean id="auditContextTargetSource" class="org.springframework.aop.target.ThreadLocalTargetSource">
        <property name="targetBeanName" value="auditContextTarget"/>
    </bean>

    <bean id="auditFactory" class="com.l7tech.server.audit.Auditor$DefaultAuditorFactory">
        <constructor-arg index="0"><null/></constructor-arg>
        <constructor-arg index="1"><null/></constructor-arg>
    </bean>

    <bean id="messageSummaryAuditFactory" class="com.l7tech.server.audit.MessageSummaryAuditFactory">
        <constructor-arg value="1234567890"/>
        <property name="identityProviderFactory" ref="identityProviderFactory" />
    </bean>

    <bean id="messageProcessingAuditListener" class="com.l7tech.server.audit.MessageProcessingAuditListener">
        <constructor-arg index="0" ref="messageSummaryAuditFactory"/>
        <constructor-arg index="1" ref="messageProcessingEventChannel"/>
    </bean>

    <bean id="securityTokenResolver" class="com.l7tech.security.xml.SimpleSecurityTokenResolver">
        <constructor-arg index="0" ref="sslKeystoreCertificate"/>
        <constructor-arg index="1" ref="sslKeystoreKey"/>
    </bean>

    <bean id="licenseManager" class="com.l7tech.server.TestLicenseManager">
    </bean>

    <bean id="soapFaultManager" class="com.l7tech.server.util.SoapFaultManager">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" >
            <null/>
        </constructor-arg>
    </bean>

    <bean id="clusterPropertyManager" class="com.l7tech.server.MockClusterPropertyManager"/>

    <bean id="schemaConfiguration" class="com.l7tech.server.communityschemas.SchemaConfiguration" depends-on="clusterPropertyManager">
        <constructor-arg ref="serverConfig"/>
    </bean>

    <bean id="schemaManager" class="com.l7tech.server.communityschemas.SchemaManagerImpl">
        <constructor-arg index="0" ref="schemaConfiguration"/>
        <constructor-arg index="1" >
            <null/>
        </constructor-arg>
        <constructor-arg index="2">
            <list/>
        </constructor-arg>
        <constructor-arg index="3" >
            <null/>
        </constructor-arg>
    </bean>

    <bean id="httpClientFactory" class="com.l7tech.server.util.HttpClientFactory">
        <constructor-arg ref="defaultKey"/>
        <constructor-arg ref="trustManager"/>
        <constructor-arg ref="hostnameVerifier"/>
    </bean>

    <bean id="anonHttpClientFactory" class="com.l7tech.server.util.HttpClientFactory">
        <constructor-arg ref="defaultKey"/>
        <constructor-arg ref="trustManager"/>
        <constructor-arg ref="hostnameVerifier"/>
    </bean>

    <bean id="anonUrlHttpClientFactory" class="com.l7tech.server.util.HttpClientFactory">
        <constructor-arg ref="defaultKey"/>
        <constructor-arg ref="trustManager"/>
        <constructor-arg ref="hostnameVerifier"/>
    </bean>

    <!-- server side HTTP routing HTTP client factory -->
    <bean id="httpRoutingHttpClientFactory"
          class="com.l7tech.server.util.TestingHttpClientFactory"/>

    <bean id="stashManagerFactory" class="com.l7tech.server.TestStashManagerFactory" factory-method="getInstance"/>

    <bean id="clusterInfoManager" class="com.l7tech.server.ClusterInfoManagerStub"/>

    <bean id="assertionRegistry" class="com.l7tech.policy.AssertionRegistry"/>

    <bean id="wspReader" class="com.l7tech.policy.wsp.WspReader">
        <constructor-arg ref="assertionRegistry"/>
    </bean>

    <bean id="jmsPropertyMapper" class="com.l7tech.server.transport.jms.JmsPropertyMapper">
        <constructor-arg index="0" ref="trustedCertManager"/>
        <constructor-arg index="1" ref="defaultKey"/>
    </bean>

    <bean id="jmsResourceManager" class="com.l7tech.server.transport.jms2.JmsResourceManager">
        <constructor-arg index="0" value="JmsRoutingTest"/>
        <constructor-arg index="1" ref="serverConfig"/>
    </bean>

    <bean id="jmsEndpointManager" class="com.l7tech.server.transport.jms.JmsEndpointManagerStub"/>

    <bean id="jmsConnectionManager" class="com.l7tech.server.transport.jms.JmsConnectionManagerStub"/>

    <!-- Jms2 -->
    <!--<bean id="jmsRequestHandler" class="com.l7tech.server.transport.jms2.JmsRequestHandlerImpl" lazy-init="true">-->
    <!--<property name="messageProcessor" ref="messageProcessor"/>-->
    <!--<property name="auditContext" ref="auditContext"/>-->
    <!--<property name="soapFaultManager" ref="soapFaultManager"/>-->
    <!--<property name="clusterPropertyManager" ref="clusterPropertyManager"/>-->
    <!--<property name="stashManagerFactory" ref="stashManagerFactory"/>-->
    <!--</bean>-->

    <bean id="jmsThreadPool" class="com.l7tech.server.util.ThreadPoolBean">
        <constructor-arg index="0"  ref="serverConfig" />
        <constructor-arg index="1" value="JMS Thread Pool" />
        <constructor-arg index="2" value="jmsListenerThreadLimit" />
        <constructor-arg index="3" value="jms.listenerThreadLimit" />
        <constructor-arg index="4" value="25" />
    </bean>

    <bean id="jmsBootprocess" class="com.l7tech.server.transport.jms2.JmsBootProcess">
        <constructor-arg index="0" ref="jmsThreadPool" />
        <constructor-arg index="1"  ref="licenseManager"/>
        <constructor-arg index="2"  ref="jmsConnectionManager"/>
        <constructor-arg index="3"  ref="jmsEndpointManager"/>
        <constructor-arg index="4"  ref="jmsPropertyMapper"/>
        <constructor-arg index="5">
            <!--<bean class="com.l7tech.server.transport.jms2.synch.LegacyJmsEndpointListenerFactory"/>-->
            <bean class="com.l7tech.server.transport.jms2.asynch.PooledJmsEndpointListenerFactory">
            </bean>
        </constructor-arg>
        <constructor-arg index="6"><null/></constructor-arg>
    </bean>
    <!-- Jms2 -->

    <bean id="applicationEventProxy" class="com.l7tech.server.util.ApplicationEventProxy"/>

    <bean id="messageProcessingEventChannel" class="com.l7tech.server.util.EventChannel"/>

    <bean id="crlCache" class="com.l7tech.server.TestCrlCache"/>

    <bean id="certValidationProcessor" class="com.l7tech.server.security.cert.TestCertValidationProcessor"/>

    <bean id="policyManager" class="com.l7tech.server.policy.PolicyManagerStub"/>

    <bean id="policyCache" class="com.l7tech.server.policy.PolicyCacheImpl">
        <constructor-arg index="0"><null/></constructor-arg>
        <constructor-arg index="1" ref="policyFactory"/>
        <constructor-arg index="2" ref="folderCache"/>
        <property name="policyManager" ref="policyManager"/>
    </bean>

    <bean id="entityFinder" class="com.l7tech.server.EntityFinderStub"/>

    <bean id="policyPathBuilderFactory" class="com.l7tech.policy.PolicyPathBuilderFactory">
        <constructor-arg ref="policyManager"/>
        <constructor-arg ref="entityFinder"/>
    </bean>

    <bean id="messageIdManager" class="com.l7tech.server.StubMessageIdManager"/>

    <bean id="messageContextMappingManager" class="com.l7tech.server.mapping.MessageContextMappingManagerStub"/>

    <bean id="mockJdbcDatabaseManager" class="com.l7tech.server.jdbc.MockJdbcDatabaseManager"/>

    <bean id="jdbcQueryingManager" class="com.l7tech.server.jdbc.JdbcQueryingManagerStub">
        <constructor-arg ref="mockJdbcDatabaseManager"/>
    </bean>

    <bean id="serviceDocumentManager" class="com.l7tech.server.service.ServiceDocumentManagerStub"/>

    <bean id="wsdlStrategyServiceDocumentsInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="com.l7tech.server.service.PersistentServiceDocumentWsdlStrategy"/>
        <property name="targetMethod" value="setServiceDocumentManager"/>
        <property name="arguments">
            <list>
                <ref bean="serviceDocumentManager"/>
            </list>
        </property>
    </bean>

    <bean id="ssgKeyStoreManager" class="com.l7tech.server.security.keystore.SsgKeyStoreManagerStub">
        <constructor-arg index="0" ref="ssgKeyFinder"/>
    </bean>

    <bean id="ssgKeyFinder" class="com.l7tech.external.assertions.extensiblesocketconnectorassertion.mock.MockSslKeyFinder"/>

    <bean id="inboundSecureConversationContextManager" class="com.l7tech.server.secureconversation.InboundSecureConversationContextManager">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" ref="storedSecureConversationSessionManager"/>
    </bean>

    <bean id="outboundSecureConversationContextManager" class="com.l7tech.server.secureconversation.OutboundSecureConversationContextManager">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" ref="storedSecureConversationSessionManager"/>
    </bean>

    <bean id="kerberosSessionContextManager" class="com.l7tech.server.security.kerberos.KerberosSessionContextManager"/>

    <bean id="securityContextFinder" class="com.l7tech.server.security.DelegatingSecurityContextFinder">
        <constructor-arg index="0">
            <list>
                <ref bean="inboundSecureConversationContextManager"/>
                <ref bean="kerberosSessionContextManager"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="storedSecureConversationSessionManager" class="com.l7tech.server.secureconversation.StoredSecureConversationSessionManagerStub"/>

    <bean id="injector" class="com.l7tech.server.util.ApplicationContextInjector"/>

    <bean id="counterManager" class="com.l7tech.server.sla.CounterManagerStub"/>

    <bean id="debugManager" class="com.l7tech.server.stepdebug.DebugManagerImpl">
        <constructor-arg ref="auditFactory"/>
    </bean>

</beans>
