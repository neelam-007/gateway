<?xml version="1.0" encoding="UTF-8"?>
<enumeration>
    <l7:Service xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" id="57477c668279c3c8d34da687b89a7562"
                version="2">
        <l7:ServiceDetail folderId="7864d3f60d281f929722cacc8c103b96" id="57477c668279c3c8d34da687b89a7562" version="2">
            <l7:Name>oauth/manager</l7:Name>
            <l7:Enabled>true</l7:Enabled>
            <l7:ServiceMappings>
                <l7:HttpMapping>
                    <l7:UrlPattern>/oauth/manager</l7:UrlPattern>
                    <l7:Verbs>
                        <l7:Verb>GET</l7:Verb>
                        <l7:Verb>POST</l7:Verb>
                        <l7:Verb>PUT</l7:Verb>
                        <l7:Verb>DELETE</l7:Verb>
                    </l7:Verbs>
                </l7:HttpMapping>
            </l7:ServiceMappings>
            <l7:Properties>
                <l7:Property key="policyRevision">
                    <l7:LongValue>3</l7:LongValue>
                </l7:Property>
                <l7:Property key="wssProcessingEnabled">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="soap">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
                <l7:Property key="internal">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:ServiceDetail>
        <l7:Resources>
            <l7:ResourceSet tag="policy">
                <l7:Resource type="policy" version="2">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy"
                    xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Implementation of a simple oauth manager that uses API calls only to
                    access the client- and tokenstore"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue="e503f8c2-0466-478d-937d-87c5a5f19bee"/&gt;
                    &lt;/L7p:Include&gt;
                    &lt;L7p:SslAssertion/&gt;
                    &lt;L7p:HttpBasic/&gt;
                    &lt;L7p:Authentication&gt;
                    &lt;L7p:IdentityProviderOid goidValue="0000000000000000fffffffffffffffe"/&gt;
                    &lt;/L7p:Authentication&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnN0YXRlfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="state"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="T0F1dGggTWFuYWdlcg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="this.app.name"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="aHR0cHM6Ly8ke3JlcXVlc3QudXJsLmhvc3R9OiR7cmVxdWVzdC51cmwucG9ydH0ke3JlcXVlc3QudXJsLnBhdGh9"/&gt;
                    &lt;L7p:VariableToSet stringValue="this.app.url"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="PHN0eWxlIHR5cGU9InRleHQvY3NzIj4NCmJvZHkuZHJhZ3tjdXJzb3I6bW92ZTt9dGguYWN0aXZlIGltZ3tkaXNwbGF5OmlubGluZTt9dHIuZXZlbix0ci5vZGR7YmFja2dyb3VuZC1jb2xvcjojZWVlO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNjY2M7cGFkZGluZzowLjFlbSAwLjZlbTt9DQp0ci5kcmFne2JhY2tncm91bmQtY29sb3I6I2ZmZmZmMDt9dHIuZHJhZy1wcmV2aW91c3tiYWNrZ3JvdW5kLWNvbG9yOiNmZmQ7fQ0KdGQuYWN0aXZle2JhY2tncm91bmQtY29sb3I6I2RkZDt9dGQuY2hlY2tib3gsdGguY2hlY2tib3h7dGV4dC1hbGlnbjpjZW50ZXI7fQ0KdGJvZHl7Ym9yZGVyLXRvcDoxcHggc29saWQgI2NjYzt9dGJvZHkgdGh7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2NjYzt9DQp0aGVhZCB0aHt0ZXh0LWFsaWduOmxlZnQ7DQogICAgcGFkZGluZy1yaWdodDoxZW07DQogICAgYm9yZGVyLWJvdHRvbTozcHggc29saWQgI2NjYzt9DQouYnJlYWRjcnVtYntwYWRkaW5nLWJvdHRvbTouNWVtfWRpdi5pbmRlbnRhdGlvbnt3aWR0aDoyMHB4O2hlaWdodDoxLjdlbTttYXJnaW46LTAuNGVtIDAuMmVtIC0wLjRlbSAtMC40ZW07DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjAuNDJlbSAwIDAuNDJlbSAwLjZlbTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsb2F0OmxlZnQ7fQ0KdWwucHJpbWFyeXtib3JkZXItY29sbGFwc2U6Y29sbGFwc2U7cGFkZGluZzowIDAgMCAxZW07DQogICAgd2hpdGUtc3BhY2U6bm93cmFwO2xpc3Qtc3R5bGU6bm9uZTttYXJnaW46NXB4O2hlaWdodDphdXRvO2xpbmUtaGVpZ2h0Om5vcm1hbDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjYmJiO30NCnVsLnByaW1hcnkgbGl7ZGlzcGxheTppbmxpbmU7fXVsLnByaW1hcnkgbGkgYXtiYWNrZ3JvdW5kLWNvbG9yOiNkZGQ7Ym9yZGVyLWNvbG9yOiNiYmI7Ym9yZGVyLXdpZHRoOjFweDtib3JkZXItc3R5bGU6c29saWQgc29saWQgbm9uZSBzb2xpZDtoZWlnaHQ6YXV0bzttYXJnaW4tcmlnaHQ6MC41ZW07DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzowIDFlbTt0ZXh0LWRlY29yYXRpb246bm9uZTt9dWwucHJpbWFyeSBsaS5hY3RpdmUgYXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyOjFweCBzb2xpZCAjYmJiO2JvcmRlci1ib3R0b206I2ZmZiAxcHggc29saWQ7fQ0KdWwucHJpbWFyeSBsaSBhOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2VlZTtib3JkZXItY29sb3I6I2NjYztib3JkZXItYm90dG9tLWNvbG9yOiNlZWU7fXVsLnNlY29uZGFyeXtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjYmJiO3BhZGRpbmc6MC41ZW0gMWVtO21hcmdpbjo1cHg7fQ0KDQoqe21hcmdpbjowO30NCmh0bWwsYm9keXtiYWNrZ3JvdW5kOiNmZmY7Zm9udDoxMnB4LzEuMmVtIGhlbHZldGljYSxhcmlhbCxzYW5zLXNlcmlmO2NvbG9yOiM0YjRiNGI7aGVpZ2h0OjEwMCU7bGluZS1oZWlnaHQ6MS4zZW07fQ0KaHJ7aGVpZ2h0OjFweDtiYWNrZ3JvdW5kLWNvbG9yOiNkZGQ7IG5vLXJlcGVhdCBjZW50ZXIgYm90dG9tO3BhZGRpbmc6OHB4IGF1dG87Ym9yZGVyOjAgbm9uZTt9DQppbnB1dHtjb2xvcjojNGI0YjRiO30NCmgxLGgyLGgzLGg0LGg1LGg2e3BhZGRpbmc6MDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1mYW1pbHk6aGVsdmV0aWNhLGFyaWFsLHNhbnMtc2VyaWY7fQ0KaDF7Zm9udC1zaXplOjI1MCU7Y29sb3I6d2hpdGU7ei1pbmRleDo1O30NCmgye2ZvbnQtc2l6ZToxNzUlO30NCmgze2ZvbnQtc2l6ZToxNTAlO30NCmg0e2ZvbnQtc2l6ZToxMjAlO30NCmg1e2ZvbnQtc2l6ZToxMTAlO30NCmg2e2ZvbnQtc2l6ZToxMDUlO30NCmE6YWN0aXZlLGEuYWN0aXZle2NvbG9yOiM0YjRiNGI7dGV4dC1kZWNvcmF0aW9uOm5vbmU7fQ0KYTpsaW5rLGE6dmlzaXRlZHtjb2xvcjojNGI0YjRiO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7b3V0bGluZTpub25lO30NCmE6aG92ZXJ7Y29sb3I6I2RiM2IyYzt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO30NCnB7bWFyZ2luLWJvdHRvbTouNWVtO2xpbmUtaGVpZ2h0OjEuM2VtO2xpc3Qtc3R5bGU6bm9uZTt0ZXh0LWFsaWduOmxlZnQ7bGluZS1oZWlnaHQ6MS41ZW07Y29sb3I6IzRiNGI0Yjt9DQpibG9ja3F1b3RlICp7bWFyZ2luOjVweCAwIDAgMTBweDt9dWx7bGluZS1oZWlnaHQ6MS41ZW07DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6LjJlbSAxZW0gMWVtIDFlbTt9b2x7bGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZzouMmVtIDFlbSAxZW0gMWVtO310ci5ldmVuLHRyLm9kZHtiYWNrZ3JvdW5kOm5vbmU7fWltZyxhIGltZ3tib3JkZXI6bm9uZTt9DQpuby1yZXBlYXQgbGVmdCAzNSU7bWFyZ2luLWxlZnQ6LjVlbTtwYWRkaW5nLWxlZnQ6MWVtO30NCiN3cmFwcGVye21pbi1oZWlnaHQ6MTAwJTtoZWlnaHQ6YXV0byAhaW1wb3J0YW50O2hlaWdodDoxMDAlO21hcmdpbjowIGF1dG8gLTVlbTt9I2NvbnRhaW5lcnttYXJnaW46LTIuNWVtIGF1dG8gMCAyLjVlbTt9DQouZmllbGQtY29udGVudCAudmlldy1kb20taWQtNSAudmlldy1jb250ZW50IC52aWV3cy1yb3d7DQogICAgbWFyZ2luOjBweDtwYWRkaW5nOjBweDt9DQoNCiNzaWRlYmFyLWxlZnR7cG9zaXRpb246cmVsYXRpdmU7ZmxvYXQ6bGVmdDtjbGVhcjpsZWZ0O3BhZGRpbmc6MmVtIDAgNmVtIDA7ei1pbmRleDo1MDA7d2lkdGg6MTMuNWVtO30NCiNzaWRlYmFyLWxlZnQgLmNvbnRlbnR7bWFyZ2luLXRvcDouOGVtO30NCiNzaWRlYmFyLWxlZnQgYXtkaXNwbGF5OmJsb2NrO2xpbmUtaGVpZ2h0OjEuMmVtO3BhZGRpbmc6M3B4IDAgMXB4IDNweDt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXNpemU6MTA1JTttYXJnaW4tbGVmdDozcHg7bWFyZ2luLXJpZ2h0OjNweDt9DQojc2lkZWJhci1sZWZ0IHVse3dpZHRoOjEzLjVlbTtkaXNwbGF5OmJsb2NrO2xpc3Qtc3R5bGU6bm9uZTt9DQojc2lkZWJhci1sZWZ0IHVsIHVse25vLXJlcGVhdCBjZW50ZXIgdG9wO3BhZGRpbmctbGVmdDouMmVtO30NCiNzaWRlYmFyLWxlZnQgYTpob3ZlciwNCiNzaWRlYmFyLWxlZnQgYS5hY3RpdmV7YmFja2dyb3VuZC1jb2xvcjojZDgzYjJjO2NvbG9yOndoaXRlO30NCiNzaWRlYmFyLWxlZnQgLm5vbGluay1saXtwYWRkaW5nLXRvcDoxLjNlbTt9DQojc2lkZWJhci1sZWZ0IC5maXJzdC5ub2xpbmstbGl7cGFkZGluZy10b3A6MDt9DQojc2lkZWJhci1sZWZ0IC5ub2xpbmt7Y29sb3I6IzIzMjAyMTtmb250LXNpemU6MTIwJTtmb250LXdlaWdodDo2MDA7fQ0KI3NpZGViYXItbGVmdCAubWVudS1uYW1lLW1lbnUtcmVzb3VyY2VzIC5ub2xpbmt7Zm9udC13ZWlnaHQ6MTAwO2ZvbnQtc2l6ZToxMDUlO30NCiNzaWRlYmFyLWxlZnQgbGkubGVhZntib3JkZXI6bm9uZTt0ZXh0LWluZGVudDpub25lOyBuby1yZXBlYXQgY2VudGVyIGJvdHRvbTtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6MXB4IDAgMnB4O30NCiNzaWRlYmFyLWxlZnQgdWwgdWwgbGkuZmlyc3R7cGFkZGluZy10b3A6MnB4O30NCg0KLnZpZXctY29udGVudCBoNHtmb250LXNpemU6MTAwJTt9I25hdmlnYXRpb257cG9zaXRpb246cmVsYXRpdmU7Ym9yZGVyOjBweCBzb2xpZCByZWQ7bWFyZ2luOjBweDtwYWRkaW5nOjBweDt9DQoNCi5icmVhZGNydW1ie3RleHQtYWxpZ246bGVmdDtwYWRkaW5nOjA7cG9zaXRpb246YWJzb2x1dGU7dG9wOjQuN2VtO2xlZnQ6MTUuOGVtO3otaW5kZXg6NTA7fS5icmVhZGNydW1iIGEuYWN0aXZlLC5icmVhZGNydW1iIGE6YWN0aXZle2NvbG9yOiMyMzIwMjE7dGV4dC1kZWNvcmF0aW9uOm5vbmU7fS5icmVhZGNydW1iIGE6aG92ZXJ7Y29sb3I6I2RiM2IyYzt9bGkubGVhZntkaXNwbGF5OmlubGluZTtwYWRkaW5nOjAgMC41ZW0gMCAwLjNlbTt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjNzI3MjcyO30NCg0KI2hlYWRlcntoZWlnaHQ6Ni41ZW07bWF4LXdpZHRoOjEwMCU7cG9zaXRpb246cmVsYXRpdmU7fSNoZWFkZXIgI2xvZ28tZmxvYXRlcntmbG9hdDpsZWZ0O3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDoxMCU7d2lkdGg6MTU5cHg7aGVpZ2h0OjUzcHg7bWFyZ2luLWxlZnQ6Mi41ZW07fWRpdiNyZXN7ZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuO30jbWVudWJrZ3twb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO2hlaWdodDozMXB4O2JhY2tncm91bmQtY29sb3I6IzY2Njt0b3A6Ni42ZW07ei1pbmRleDowO30NCg0KZGl2Lmxpbmtze2Rpc3BsYXk6bm9uZTt9DQoNCiNjb250ZW50e21hcmdpbjo0LjNlbSBhdXRvIDFlbSAyLjVlbTt9DQouc3VibWl0dGVke2Rpc3BsYXk6bm9uZTt9LmNvbnRhaW5lcnt6LWluZGV4OjU7aGVpZ2h0OjEwMCU7cGFkZGluZy10b3A6LjJlbTt9DQoudGl0bGUtYm94IGgxe2NvbG9yOiNkYjNiMmM7bGluZS1oZWlnaHQ6MWVtO30NCg0KI25hdmlnYXRpb24gZGl2Lm1lbnUtbmFtZS1wcmltYXJ5LWxpbmtzIHVse2JvcmRlcjowO2xpc3Qtc3R5bGU6bm9uZTtoZWlnaHQ6MzFweDttYXJnaW46MDtwYWRkaW5nOjA7d2lkdGg6MTAwJTt9DQojbmF2aWdhdGlvbiBkaXYubWVudS1uYW1lLXByaW1hcnktbGlua3MgdWwgbGl7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtib3JkZXI6MDtmbG9hdDpsZWZ0O21hcmdpbjowO3BhZGRpbmc6MDtsaXN0LXN0eWxlOm5vbmU7cG9zaXRpb246cmVsYXRpdmU7fQ0KI25hdmlnYXRpb24gZGl2Lm1lbnUtbmFtZS1wcmltYXJ5LWxpbmtzIHVsIGxpIGF7ZGlzcGxheTpibG9jaztoZWlnaHQ6MzFweDt0ZXh0LWluZGVudDotNTAwMHB4O30NCiNuYXZpZ2F0aW9uIGRpdi5tZW51LW5hbWUtcHJpbWFyeS1saW5rcyBsaSBhe2JhY2tncm91bmQtY29sb3I6I2NjYzt9DQojbmF2aWdhdGlvbiBkaXYubWVudS1uYW1lLXByaW1hcnktbGlua3MgbGkgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNjY2M7fQ0KI25hdmlnYXRpb24gZGl2Lm1lbnUtbmFtZS1wcmltYXJ5LWxpbmtzIGxpLm1lbnUtbWxpZC0yMzkzID4gYTpob3Zlcnt9DQoNCiNib3R0b21iYXJ7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzoyZW0gMCA2ZW0gMDt6LWluZGV4OjUwMDt3aWR0aDoxMy41ZW07Zm9udC1zaXplOjEzMCU7fQ0KI2JvdHRvbWJhciAuY29udGVudHttYXJnaW4tdG9wOi44ZW07fQ0KI2JvdHRvbWJhciBhe2xpbmUtaGVpZ2h0OjEuMmVtO3BhZGRpbmc6M3B4IDNweCAzcHggM3B4O3RleHQtZGVjb3JhdGlvbjpub25lO30NCiNib3R0b21iYXIgYTpob3ZlciwNCiNib3R0b21iYXIgYS5hY3RpdmV7Y29sb3I6I2Q4M2IyYzt9DQojYm90dG9tYmFyIGJ7Zm9udC1zaXplOjEzMyU7fQ0KDQo8L3N0eWxlPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="website_style"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="website_top"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="JHt3ZWJzaXRlX3RvcH0NCjxkaXY+DQpJIGFtIDxiPiR7dGhpcy5hcHAubmFtZX08L2I+IHRvIG1hbmFnZSBjbGllbnQgYXBwbGljYXRpb25zLiBZb3UgY2FuIG1hbmFnZSBjbGllbnQgYXBwcyBhbmQgZ3JhbnRlZCByZXNvdXJjZSBvd25lci9jbGllbnQgY29tYmluYXRpb25zDQo8dGFibGU+DQo8dHI+DQo8dGQ+DQo8Zm9ybSBhY3Rpb249IiR7dGhpcy5hcHAudXJsfSIgbWV0aG9kPUdFVD4NCgk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzdGF0ZSIgdmFsdWU9Im1hbmFnZUNsaWVudHMiLz4NCgk8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iTWFuYWdlIENsaWVudHMiLz4NCjwvZm9ybT4NCjwvdGQ+DQo8dGQ+DQo8Zm9ybSBhY3Rpb249IiR7dGhpcy5hcHAudXJsfSIgbWV0aG9kPUdFVD4NCgk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzdGF0ZSIgdmFsdWU9Im1hbmFnZU93bmVyc0NsaWVudHMiLz4NCgk8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iTWFuYWdlIFVzZXJzL0NsaWVudHMiLz4NCjwvZm9ybT4NCjwvdGQ+DQo8L3RyPg0KPC90YWJsZT4NCjwvZGl2Pg0KPGhyPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="htmlHeader"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="PGhyPg0KPGRpdj4NCjxwIGNsYXNzPSJmb290ZXIiPg0KTGF5ZXI3IFRlY2hub2xvZ2llcyBJbmMuLCAke2dhdGV3YXkudGltZS5kZC9NTS95eXl5fSAoRGF5LyBNb250aC8gWWVhcikNCjwvcD4NCjwvZGl2Pg0KPC9ib2R5Pg0KPC9odG1sPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="htmlFooter"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PGJyIC8+DQo8aHI+DQo8L2JvZHk+DQo8L2h0bWw+"/&gt;
                    &lt;L7p:VariableToSet stringValue="website_bottom"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Configure the manager here"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:ExpressionIsVariable booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPHA+VGhpcyBtYW5hZ2VtZW50IGFwcGxpY2F0aW9uIGlzIGEgc2ltcGxlIHRvb2wgdG8gbWFuYWdlIGNsaWVudCBhcHBsaWNhdGlvbnMgYW5kIGdyYW50ZWQgcmVzb3VyY2Ugb3duZXIvY2xpZW50IGNvbWJpbmF0aW9uczwvcD4KJHt3ZWJzaXRlX2JvdHRvbX0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="manageClients"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="manageClients"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Configured to not fail on status code!"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/get"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="getResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${httpRouting.reasonCode}"/&gt;
                    &lt;L7p:Expression2 stringValue="200"/&gt;
                    &lt;L7p:ExpressionIsVariable booleanValue="false"/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:RightValue stringValue="200"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${getResult.mainpart}"/&gt;
                    &lt;L7p:Expression2 stringValue="API Portal Integration is configured"/&gt;
                    &lt;L7p:ExpressionIsVariable booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="CONTAINS"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Operator operator="CONTAINS"/&gt;
                    &lt;L7p:RightValue stringValue="API Portal Integration is configured"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoKCXZhciBtYW5hZ2VDbGllbnRzQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hbmFnZUNsaWVudHMnKTsKCW1hbmFnZUNsaWVudHNCdG4uZGlzYWJsZWQgPSB0cnVlOwo8L3NjcmlwdD4KCjxkaXY+CjxwPk9USyBoYXMgYmVlbiBpbnRlZ3JhdGVkIHdpdGggdGhlIExheWVyIDcgQVBJIFBvcnRhbC4gQ2xpZW50IG1hbmFnZW1lbnQgaXMgbm90IGF2YWlsYWJsZS48L3A+CjwvZGl2Pgoke3dlYnNpdGVfYm90dG9tfQ=="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnZXRSZXN1bHQubWFpbnBhcnR9"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="findDates"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathCount"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="getResult"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="count(/ns:values/ns:value)"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="getResult"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                    &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                    xmlns:ns="http://ns.l7tech.com/2012/11/otk-clientstore"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

                    &lt;xsl:output method="html"/&gt;

                    &lt;xsl:param name="this.app.url"/&gt;

                    &lt;xsl:template match="/ns:values"&gt;
                    &lt;table border="1" style="padding:2px; empty-cells: show;"&gt;
                    &lt;tr&gt;
                    &lt;th&gt;index&lt;/th&gt;
                    &lt;xsl:for-each select="ns:value[1][node()]/descendant::node()[not(name()='')]"&gt;
                    &lt;th&gt;
                    &lt;xsl:value-of select="name()"/&gt;
                    &lt;/th&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;th colspan="3"&gt;action&lt;/th&gt;
                    &lt;/tr&gt;
                    &lt;xsl:for-each select="ns:value[node()]"&gt;
                    &lt;xsl:variable name="tempClientName" select="descendant::node()[local-name()='name']"/&gt;
                    &lt;xsl:variable name="tempClientIdent" select="descendant::node()[local-name()='client_ident']"/&gt;
                    &lt;tr&gt;
                    &lt;td&gt;
                    &lt;xsl:value-of select="@index"/&gt;
                    &lt;/td&gt;
                    &lt;xsl:for-each select="descendant::node()[not(name()='')]"&gt;
                    &lt;td&gt;
                    &lt;xsl:value-of select="text()"/&gt;
                    &lt;/td&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"
                    onsubmit="return confirmDelete('{$tempClientName}')"&gt;
                    &lt;input name="state" type="hidden" value="deleteClient"/&gt;
                    &lt;input name="name" type="hidden" value="{$tempClientName}"/&gt;
                    &lt;input name="client_ident" type="hidden" value="{$tempClientIdent}"/&gt;
                    &lt;input type="submit" value="Delete"/&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"&gt;
                    &lt;input name="state" type="hidden" value="editClient"/&gt;
                    &lt;input name="name" type="hidden" value="{$tempClientName}"/&gt;
                    &lt;input name="client_ident" type="hidden" value="{$tempClientIdent}"/&gt;
                    &lt;input type="submit" value="Edit"/&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"&gt;
                    &lt;input name="state" type="hidden" value="clientKeys"/&gt;
                    &lt;input name="client_ident" type="hidden" value="{$tempClientIdent}"/&gt;
                    &lt;input type="submit" value="List Keys"/&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;/table&gt;
                    &lt;/xsl:template&gt;

                    &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                    &lt;/L7p:XslTransformation&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnZXRSZXN1bHQubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="toBeReturned"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${xpathCount.result}"/&gt;
                    &lt;L7p:Expression2 stringValue="0"/&gt;
                    &lt;L7p:Operator operator="GT"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="GT"/&gt;
                    &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:MsgVarPrefix stringValue="xsltFindDates"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="findDates"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                    &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                    xmlns:ns="http://ns.l7tech.com/2012/11/otk-clientstore"&gt;

                    &lt;xsl:output method="text" omit-xml-declaration="yes"/&gt;

                    &lt;xsl:template match="/"&gt;
                    &lt;xsl:for-each select="(//ns:rexpiration|//ns:expiration|//ns:created)[text()!='0']"&gt;
                    &lt;xsl:value-of select="text()"/&gt;&lt;xsl:text&gt;;&lt;/xsl:text&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;/xsl:template&gt;

                    &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                    &lt;/L7p:XslTransformation&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtmaW5kRGF0ZXMubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="inputDates"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="inputDates"/&gt;
                    &lt;L7p:OutputVariable stringValue="dates"/&gt;
                    &lt;L7p:SplitPattern stringValue=";"/&gt;
                    &lt;L7p:SplitPatternRegEx booleanValue="false"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                    iterationLimit="10000"
                    loopVariable="dates" variablePrefix="date"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtkYXRlLmN1cnJlbnR9"/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateFormat stringValue="&amp;lt;Timestamp&gt;"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="current"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="toBeReturned"/&gt;
                    &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                    &lt;L7p:Regex stringValue="${date.current}"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${current.yyyy-MM-dd HH:mm:ss z}"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;/L7p:ForEachLoop&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgpmdW5jdGlvbiBjb25maXJtRGVsZXRlKGRlbENsaWVudCkKewogIHJldHVybiBjb25maXJtKCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIHRoZSBjbGllbnQgYXBwbGljYXRpb24gJyIrZGVsQ2xpZW50KyInPyBUaGlzIHdpbGwgaW5jbHVkZSBhbGwgZ3JhbnRlZCBjbGllbnRzIHRoYXQgYXJlIGluIHVzZSEiKTsKfQo8L3NjcmlwdD4KPGRpdj4KPHA+VGhpcyBpcyBhbiBvdmVydmlldyBvZiBhbGwgcmVnaXN0ZXJlZCBjbGllbnQgYXBwbGljYXRpb25zPC9wPgoke3RvQmVSZXR1cm5lZH0KPHA+WW91IGNhbiBhbHNvIHJlZ2lzdGVyIGFub3RoZXIgY2xpZW50IGFwcGxpY2F0aW9uPC9wPgo8Zm9ybSBhY3Rpb249IiR7dGhpcy5hcHAudXJsfSIgbWV0aG9kPUdFVD4KCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InN0YXRlIiB2YWx1ZT0icmVnaXN0ZXIiLz4KCTxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJSZWdpc3RlciBDbGllbnQiLz4KPC9mb3JtPgo8L2Rpdj4KJHt3ZWJzaXRlX2JvdHRvbX0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue=" Check if the route failed due to API Portal integration"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="List client Apps"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="manageOwnersClients"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="manageOwnersClients"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_tokenstore_server}/oauth/tokenstore/get"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="getResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnZXRSZXN1bHQubWFpbnBhcnR9"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="findDates"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathCount"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="getResult"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="count(/ns:values/ns:value)"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="getResult"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                    &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                    xmlns:ns="http://ns.l7tech.com/2012/11/otk-tokenstore"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

                    &lt;xsl:output method="html"/&gt;

                    &lt;xsl:param name="this.app.url"/&gt;

                    &lt;xsl:template match="/ns:values"&gt;
                    &lt;table&gt;
                    &lt;tr&gt;
                    &lt;td&gt;offset: &lt;/td&gt;
                    &lt;td&gt;&lt;input id="offset" type="text" value="0"/&gt;&lt;/td&gt;
                    &lt;td&gt;&lt;input onclick="loadPrevious(); return false;" type="submit" value="Previous"/&gt;&lt;/td&gt;
                    &lt;td&gt;&lt;input onclick="loadNext(); return false;" type="submit" value="Next"/&gt;&lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;/table&gt;
                    &lt;div id="tblTokens"&gt;
                    &lt;table border="1" style="padding:2px; empty-cells: show;"&gt;
                    &lt;tr&gt;
                    &lt;th&gt;index&lt;/th&gt;
                    &lt;xsl:for-each select="ns:value[1][node()]/descendant::node()[not(name()='')]"&gt;
                    &lt;th&gt;
                    &lt;xsl:value-of select="name()"/&gt;
                    &lt;/th&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;th colspan="2"&gt;action&lt;/th&gt;
                    &lt;/tr&gt;
                    &lt;xsl:for-each select="ns:value[node()]"&gt;
                    &lt;xsl:variable name="tempToken" select="descendant::node()[local-name()='token']"/&gt;
                    &lt;xsl:variable name="tempClient" select="descendant::node()[local-name()='client_key']"/&gt;
                    &lt;xsl:variable name="tempOwner" select="descendant::node()[local-name()='resource_owner']"/&gt;
                    &lt;xsl:variable name="tempStatus" select="descendant::node()[local-name()='status']"/&gt;
                    &lt;tr&gt;
                    &lt;td&gt;
                    &lt;xsl:value-of select="@index"/&gt;
                    &lt;/td&gt;
                    &lt;xsl:for-each select="descendant::node()[not(name()='')]"&gt;
                    &lt;td&gt;
                    &lt;xsl:value-of select="text()"/&gt;
                    &lt;/td&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"
                    onsubmit="return confirmRevoke('{$tempOwner}', '{$tempClient}')"&gt;
                    &lt;input name="state" type="hidden" value="revoke"/&gt;
                    &lt;input name="token" type="hidden" value="{$tempToken}"/&gt;
                    &lt;input type="submit" value="Revoke"/&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"
                    onsubmit="return confirmStautsChange('{$tempToken}')"&gt;
                    &lt;input name="state" type="hidden" value="toggleStatus"/&gt;
                    &lt;input name="token" type="hidden" value="{$tempToken}"/&gt;
                    &lt;xsl:choose&gt;
                    &lt;xsl:when test="$tempStatus = 'ENABLED'"&gt;
                    &lt;input name="newStatus" type="hidden" value="DISABLED"/&gt;
                    &lt;input type="submit" value="DISABLE"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                    &lt;input name="newStatus" type="hidden" value="ENABLED"/&gt;
                    &lt;input type="submit" value="ENABLE"/&gt;
                    &lt;/xsl:otherwise&gt;
                    &lt;/xsl:choose&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;/table&gt;
                    &lt;/div&gt;
                    &lt;/xsl:template&gt;

                    &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                    &lt;/L7p:XslTransformation&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnZXRSZXN1bHQubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="toBeReturned"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${xpathCount.result}"/&gt;
                    &lt;L7p:Expression2 stringValue="0"/&gt;
                    &lt;L7p:Operator operator="GT"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="GT"/&gt;
                    &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:MsgVarPrefix stringValue="xsltFindDates"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="findDates"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                    &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                    xmlns:ns="http://ns.l7tech.com/2012/11/otk-tokenstore"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

                    &lt;xsl:output method="text" omit-xml-declaration="yes"/&gt;

                    &lt;xsl:template match="/"&gt;
                    &lt;xsl:for-each select="(//ns:rexpiration|//ns:expiration|//ns:created)[text()!='0']"&gt;
                    &lt;xsl:value-of select="text()"/&gt;&lt;xsl:text&gt;;&lt;/xsl:text&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;/xsl:template&gt;

                    &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                    &lt;/L7p:XslTransformation&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtmaW5kRGF0ZXMubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="inputDates"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="inputDates"/&gt;
                    &lt;L7p:OutputVariable stringValue="dates"/&gt;
                    &lt;L7p:SplitPattern stringValue=";"/&gt;
                    &lt;L7p:SplitPatternRegEx booleanValue="false"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                    iterationLimit="10000" loopVariable="dates" variablePrefix="date"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtkYXRlLmN1cnJlbnR9"/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateFormat stringValue="&amp;lt;Timestamp&gt;"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="current"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="toBeReturned"/&gt;
                    &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                    &lt;L7p:Regex stringValue="${date.current}"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${current.yyyy-MM-dd HH:mm:ss z}"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;/L7p:ForEachLoop&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgpmdW5jdGlvbiBjb25maXJtUmV2b2tlKHJldk93bmVyLCByZXZDbGllbnQpCnsKICByZXR1cm4gY29uZmlybSgiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJldm9rZSBhY2Nlc3MgZm9yICciK3JldkNsaWVudCsiJyBncmFudGVkIGJ5ICciK3Jldk93bmVyKyInPyIpOwp9CmZ1bmN0aW9uIGNvbmZpcm1TdGF1dHNDaGFuZ2UocmV2VG9rZW4pCnsKICByZXR1cm4gY29uZmlybSgiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGNoYW5nZSB0aGUgc3RhdHVzIGZvciB0aGUgdG9rZW4gJyIrcmV2VG9rZW4rIic/Iik7Cn0KPC9zY3JpcHQ+CjxkaXY+CjxwPlRoaXMgaXMgYW4gb3ZlcnZpZXcgb2YgYWxsIHVzZXJzIHdpdGggZ3JhbnRlZCBjbGllbnQgYXBwbGljYXRpb25zPC9wPgoke3RvQmVSZXR1cm5lZH0KPC9kaXY+CiR7d2Vic2l0ZV9ib3R0b219"/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="List long living tokens"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="manageOwnersClientsPagination"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="manageOwnersClientsPagination"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm9mZnNldFZhbHVlSW5wdXR9"/&gt;
                    &lt;L7p:DataType variableDataType="int"/&gt;
                    &lt;L7p:VariableToSet stringValue="offsetValueInput"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                    &lt;L7p:DataType variableDataType="int"/&gt;
                    &lt;L7p:VariableToSet stringValue="offsetValueInput"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm9mZnNldH0="/&gt;
                    &lt;L7p:DataType variableDataType="int"/&gt;
                    &lt;L7p:VariableToSet stringValue="offset"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                    &lt;L7p:DataType variableDataType="int"/&gt;
                    &lt;L7p:VariableToSet stringValue="offset"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_tokenstore_server}/oauth/tokenstore/get"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:CustomizeValue stringValue="${offset}"/&gt;
                    &lt;L7p:Name stringValue="offset"/&gt;
                    &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="getResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnZXRSZXN1bHQubWFpbnBhcnR9"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="findDates"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathCount"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="getResult"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="count(/ns:values/ns:value)"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-tokenstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="getResult"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                    &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                    xmlns:ns="http://ns.l7tech.com/2012/11/otk-tokenstore"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

                    &lt;xsl:output method="html"/&gt;

                    &lt;xsl:param name="this.app.url"/&gt;
                    &lt;xsl:param name="offsetValueInput"/&gt;

                    &lt;xsl:template match="/ns:values"&gt;
                    &lt;tr&gt;
                    &lt;th&gt;index&lt;/th&gt;
                    &lt;xsl:for-each select="ns:value[1][node()]/descendant::node()[not(name()='')]"&gt;
                    &lt;th&gt;
                    &lt;xsl:value-of select="name()"/&gt;
                    &lt;/th&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;th colspan="2"&gt;action&lt;/th&gt;
                    &lt;/tr&gt;
                    &lt;xsl:for-each select="ns:value[node()]"&gt;
                    &lt;xsl:variable name="tempToken" select="descendant::node()[local-name()='token']"/&gt;
                    &lt;xsl:variable name="tempClient" select="descendant::node()[local-name()='client_key']"/&gt;
                    &lt;xsl:variable name="tempOwner" select="descendant::node()[local-name()='resource_owner']"/&gt;
                    &lt;xsl:variable name="tempStatus" select="descendant::node()[local-name()='status']"/&gt;
                    &lt;tr&gt;
                    &lt;td&gt;
                    &lt;xsl:value-of select="number($offsetValueInput)+number(@index)"/&gt;
                    &lt;/td&gt;
                    &lt;xsl:for-each select="descendant::node()[not(name()='')]"&gt;
                    &lt;td&gt;
                    &lt;xsl:value-of select="text()"/&gt;
                    &lt;/td&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"
                    onsubmit="return confirmRevoke('{$tempOwner}', '{$tempClient}')"&gt;
                    &lt;input name="state" type="hidden" value="revoke"/&gt;
                    &lt;input name="token" type="hidden" value="{$tempToken}"/&gt;
                    &lt;input type="submit" value="Revoke"/&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"
                    onsubmit="return confirmStautsChange('{$tempToken}')"&gt;
                    &lt;input name="state" type="hidden" value="toggleStatus"/&gt;
                    &lt;input name="token" type="hidden" value="{$tempToken}"/&gt;
                    &lt;xsl:choose&gt;
                    &lt;xsl:when test="$tempStatus = 'ENABLED'"&gt;
                    &lt;input name="newStatus" type="hidden" value="DISABLED"/&gt;
                    &lt;input type="submit" value="DISABLE"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                    &lt;input name="newStatus" type="hidden" value="ENABLED"/&gt;
                    &lt;input type="submit" value="ENABLE"/&gt;
                    &lt;/xsl:otherwise&gt;
                    &lt;/xsl:choose&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;/xsl:template&gt;

                    &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                    &lt;/L7p:XslTransformation&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnZXRSZXN1bHQubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="toBeReturned"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${xpathCount.result}"/&gt;
                    &lt;L7p:Expression2 stringValue="0"/&gt;
                    &lt;L7p:Operator operator="GT"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="GT"/&gt;
                    &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:MsgVarPrefix stringValue="xsltFindDates"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="findDates"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                    &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                    xmlns:ns="http://ns.l7tech.com/2012/11/otk-tokenstore"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

                    &lt;xsl:output method="text" omit-xml-declaration="yes"/&gt;

                    &lt;xsl:template match="/"&gt;
                    &lt;xsl:for-each select="(//ns:rexpiration|//ns:expiration|//ns:created)[text()!='0']"&gt;
                    &lt;xsl:value-of select="text()"/&gt;&lt;xsl:text&gt;;&lt;/xsl:text&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;/xsl:template&gt;

                    &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                    &lt;/L7p:XslTransformation&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtmaW5kRGF0ZXMubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="inputDates"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="inputDates"/&gt;
                    &lt;L7p:OutputVariable stringValue="dates"/&gt;
                    &lt;L7p:SplitPattern stringValue=";"/&gt;
                    &lt;L7p:SplitPatternRegEx booleanValue="false"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                    iterationLimit="10000" loopVariable="dates" variablePrefix="date"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtkYXRlLmN1cnJlbnR9"/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateFormat stringValue="&amp;lt;Timestamp&gt;"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="current"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="toBeReturned"/&gt;
                    &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                    &lt;L7p:Regex stringValue="${date.current}"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${current.yyyy-MM-dd HH:mm:ss z}"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;/L7p:ForEachLoop&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt0b0JlUmV0dXJuZWR9"/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="pagination"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="List long living tokens"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="register"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="register"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2s="/&gt;
                    &lt;L7p:VariableToSet stringValue="token_type"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue="2dc66d50-fa74-489e-97f8-d6b2f4a13c08"/&gt;
                    &lt;/L7p:Include&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gdmFsaWRhdGVGb3JtKCkKICAgIHsKICAgICAgICB2YXIgYWxlcnRNZXNzYWdlID0gJyc7CiAgICAgICAgdmFyIGNsaWVudE5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibmFtZSIpLnZhbHVlOwogICAgICAgIHZhciBjbGllbnRLRVkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY2xpZW50X2tleSIpLnZhbHVlOwogICAgICAgIHZhciBjbGllbnRTZWNyZXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2VjcmV0IikudmFsdWU7CiAgICAgICAgdmFyIGNsaWVudE9yZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJvcmciKS52YWx1ZTsKICAgICAgICB2YXIgcmVnaXN0ZXJlZEJZID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJlZ2lzdGVyZWRfYnkiKS52YWx1ZTsKICAgICAgICBpZihjbGllbnROYW1lID09IG51bGwgfHwgY2xpZW50TmFtZS5yZXBsYWNlKC8oXlxzKil8KFxzKiQpL2csICIiKS5sZW5ndGg9PTApCiAgICAgICAgewogICAgICAgICAgICBhbGVydE1lc3NhZ2UgPSAnUGxlYXNlIHByb3ZpZGUgYSBDbGllbnQgTmFtZVxuJzsKICAgICAgICB9CiAgICAgICAgaWYoY2xpZW50S0VZID09IG51bGwgfHwgY2xpZW50S0VZLnJlcGxhY2UoLyheXHMqKXwoXHMqJCkvZywgIiIpLmxlbmd0aD09MCkKICAgICAgICB7CiAgICAgICAgICAgIGFsZXJ0TWVzc2FnZSA9IGFsZXJ0TWVzc2FnZSArICdQbGVhc2UgcHJvdmlkZSBhIENsaWVudCBLZXlcbic7CiAgICAgICAgfQogICAgICAgIGlmKGNsaWVudFNlY3JldCA9PSBudWxsIHx8IGNsaWVudFNlY3JldC5yZXBsYWNlKC8oXlxzKil8KFxzKiQpL2csICIiKS5sZW5ndGg9PTApCiAgICAgICAgewogICAgICAgICAgICBhbGVydE1lc3NhZ2UgPSBhbGVydE1lc3NhZ2UgKyAnUGxlYXNlIHByb3ZpZGUgYSBDbGllbnQgU2VjcmV0XG4nOwogICAgICAgIH0KICAgICAgICBpZihjbGllbnRPcmcgPT0gbnVsbCB8fCBjbGllbnRPcmcucmVwbGFjZSgvKF5ccyopfChccyokKS9nLCAiIikubGVuZ3RoPT0wKQogICAgICAgIHsKICAgICAgICAgICAgYWxlcnRNZXNzYWdlID0gYWxlcnRNZXNzYWdlICsgJ1BsZWFzZSBwcm92aWRlIGFuIE9yZ2FuaXphdGlvblxuJzsKICAgICAgICB9CiAgICAgICAgaWYocmVnaXN0ZXJlZEJZID09IG51bGwgfHwgcmVnaXN0ZXJlZEJZLnJlcGxhY2UoLyheXHMqKXwoXHMqJCkvZywgIiIpLmxlbmd0aD09MCkKICAgICAgICB7CiAgICAgICAgICAgIGFsZXJ0TWVzc2FnZSA9IGFsZXJ0TWVzc2FnZSArICdQbGVhc2UgcHJvdmlkZSBhIG5hbWUgb2Ygd2hvbSBpcyByZWdpc3RlcmluZyB0aGlzIGNsaWVudFxuJzsKICAgICAgICB9CiAgICAgICAgaWYgKGFsZXJ0TWVzc2FnZS5sZW5ndGggPiAwKQogICAgICAgIHsKICAgICAgICAgICAgYWxlcnQoYWxlcnRNZXNzYWdlKTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgfQo8L3NjcmlwdD4KPGRpdj4KICAgIDxwPkZpbGwgb3V0IHRoZSBmb3JtIHRvIHJlZ2lzdGVyIG5ldyBjbGllbnQgYXBwbGljYXRpb25zLjwvcD4KICAgIDxmb3JtIGFjdGlvbj0iJHt0aGlzLmFwcC51cmx9IiBtZXRob2Q9IlBPU1QiIGVuY3R5cGU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIgaWQ9InJlZ2lzdGVyRm9ybSIgb25zdWJtaXQ9InJldHVybiB2YWxpZGF0ZUZvcm0oKSI+CiAgICAgICAgPHRhYmxlIG5hbWU9InZhbHVlcyI+CiAgICAgICAgICAgIDx0cj48dGQ+Q2xpZW50IE5hbWU8L3RkPjx0ZD48aW5wdXQgaWQ9Im5hbWUiIG5hbWU9Im5hbWUiIHNpemU9IjEyOCIvPjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD5Pcmdhbml6YXRpb248L3RkPjx0ZD48aW5wdXQgbmFtZT0ib3JnIiBpZD0ib3JnIiB0eXBlPSJ0ZXh0IiBzaXplPSIxMjgiLz48L3RkPjwvdHI+CiAgICAgICAgICAgIDx0cj48dGQ+RGVzY3JpcHRpb248L3RkPjx0ZD48aW5wdXQgbmFtZT0iZGVzY3JpcHRpb24iIGlkPSJkZXNjcmlwdGlvbiIgdHlwZT0idGV4dCIgdmFsdWU9IldoYXQgaXMgdGhlIGFwcCB1c2VkIGZvcj8iIHNpemU9IjEyOCIgLz48L3RkPjwvdHI+CiAgICAgICAgICAgIDx0cj48dGQ+Q2xpZW50IFR5cGU8L3RkPjx0ZD48c2VsZWN0IG5hbWU9InR5cGUiPjxvcHRpb24gdmFsdWU9ImNvbmZpZGVudGlhbCI+Y29uZmlkZW50aWFsPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0icHVibGljIj5wdWJsaWM8L29wdGlvbj48L3NlbGVjdD4gKHVzZWQgd2l0aCBvYXV0aCAyLjApPC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPlJlZ2lzdGVyZWQgYnk8L3RkPjx0ZD48aW5wdXQgbmFtZT0icmVnaXN0ZXJlZF9ieSIgaWQ9InJlZ2lzdGVyZWRfYnkiIHZhbHVlPSIke3JlcXVlc3QudXNlcm5hbWV9IiB0eXBlPSJ0ZXh0IiBzaXplPSIxMjgiLz48L3RkPjwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgICAgICA8aHIvPgogICAgICAgIDx0YWJsZSBuYW1lPSJ2YWx1ZXMiPgogICAgICAgICAgICA8dHI+PHRkPkNsaWVudCBLZXk8L3RkPjx0ZD48aW5wdXQgbmFtZT0iY2xpZW50X2tleSIgaWQ9ImNsaWVudF9rZXkiIHZhbHVlPSIke2dlblRva2VufSIgc2l6ZT0iMTI4Ii8+IChtdXN0IGJlIHVuaXF1ZSB0byB0aGUgc3lzdGVtKTwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD5DbGllbnQgU2VjcmV0PC90ZD48dGQ+PGlucHV0IG5hbWU9InNlY3JldCIgaWQ9InNlY3JldCIgdmFsdWU9IiR7Z2VuU2VjcmV0fSIgdHlwZT0idGV4dCIgc2l6ZT0iMTI4Ii8+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPlN0YXR1czwvdGQ+PHRkPjxzZWxlY3QgbmFtZT0ic3RhdHVzIj48b3B0aW9uIHZhbHVlPSJFTkFCTEVEIj5FTkFCTEVEPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iRElTQUJMRUQiPkRJU0FCTEVEPC9vcHRpb24+PC9zZWxlY3Q+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPlNjb3BlPC90ZD48dGQ+PGlucHV0IG5hbWU9InNjb3BlIiBzaXplPSIxMjgiIHZhbHVlPSJvb2IiLz4gKHVzZWQgd2l0aCBvYXV0aCAyLjApPC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPkNhbGxiYWNrIFVSTDwvdGQ+PHRkPjxpbnB1dCBuYW1lPSJjYWxsYmFjayIgc2l6ZT0iMTI4IiB2YWx1ZT0ib29iIi8+IChpbiBvYXV0aCAyLjAgdGhpcyBpcyBjYWxsZWQgcmVkaXJlY3RfdXJpKTwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD5FbnZpcm9ubWVudDwvdGQ+PHRkPjxpbnB1dCBuYW1lPSJlbnZpcm9ubWVudCIgc2l6ZT0iMTI4IiB2YWx1ZT0iQUxMIi8+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPjxpbnB1dCBuYW1lPSJzdGF0ZSIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0icmVnaXN0ZXJlZCIvPjwvdGQ+PHRkPjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD48aW5wdXQgbmFtZT0iY2xpZW50X2lkZW50IiBpZD0iY2xpZW50X2lkZW50IiB0eXBlPSJoaWRkZW4iIHZhbHVlPSIke2dlblRva2VufSIvPjwvdGQ+PHRkPjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD48aW5wdXQgaWQ9InN1Ym1pdEJ1dHRvbiIgdHlwZT0ic3VibWl0IiB2YWx1ZT0iUmVnaXN0ZXIiLz48L3RkPjx0ZD48aW5wdXQgdHlwZT0icmVzZXQiLz48L3RkPjwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvZm9ybT4KCjwvZGl2Pgoke3dlYnNpdGVfYm90dG9tfQ=="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Register"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="registered"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="registered"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[${website_top}
                    &lt;div&gt;
                    &lt;p&gt;&lt;b&gt;ERROR:&lt;/b&gt;The application: ${request.http.parameter.client_name} could NOT
                    be registered. Please contact support or try again&lt;/p&gt;
                    &lt;/div&gt;
                    ${website_bottom}]]&gt;&lt;/L7p:Content&gt;
                    &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                    &lt;L7p:HttpStatus stringValue="401"/&gt;
                    &lt;/L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.name}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.client_key}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.client_ident}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.secret}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.registered_by}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.org}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.name"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="name"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.client_ident"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_ident"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.secret"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="secret"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.registered_by"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="registered_by"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.org"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="org"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmNhbGxiYWNrfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="callback"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${callback}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="callback"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="callback"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmRlc2NyaXB0aW9ufQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="description"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${description}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="description"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="description"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmVudmlyb25tZW50fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="environment"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${environment}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="environment"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="environment"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnNjb3BlfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="scope"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${scope}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="scope"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="scope"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnN0YXR1c30="/&gt;
                    &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${status}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="status"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="status"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnR5cGV9"/&gt;
                    &lt;L7p:VariableToSet stringValue="type"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${type}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="type"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="type"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2s="/&gt;
                    &lt;L7p:VariableToSet stringValue="token_type"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue="2dc66d50-fa74-489e-97f8-d6b2f4a13c08"/&gt;
                    &lt;/L7p:Include&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="Y2FsbGJhY2s9JHtjYWxsYmFja30mY2xpZW50X2lkZW50PSR7Y2xpZW50X2lkZW50fSZjbGllbnRfa2V5PSR7Y2xpZW50X2tleX0mZGVzY3JpcHRpb249JHtkZXNjcmlwdGlvbn0mZW52aXJvbm1lbnQ9JHtlbnZpcm9ubWVudH0mbmFtZT0ke25hbWV9Jm9yZz0ke29yZ30mcmVnaXN0ZXJlZF9ieT0ke3JlZ2lzdGVyZWRfYnl9JnNjb3BlPSR7c2NvcGV9JnNlY3JldD0ke3NlY3JldH0mc3RhdHVzPSR7c3RhdHVzfSZ0eXBlPSR7dHlwZX0mZXhwaXJhdGlvbj0ke2dlbkV4cGlyYXRpb259"/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/store"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="msg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="callback"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="client_ident"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="client_key"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="description"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="environment"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="name"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="org"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="registered_by"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="scope"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="secret"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="status"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="type"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:CustomizeValue stringValue="${genExpiration}"/&gt;
                    &lt;L7p:Name stringValue="expiration"/&gt;
                    &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="storeResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${storeResult.mainpart}"/&gt;
                    &lt;L7p:Expression2 stringValue="persisted"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:RightValue stringValue="persisted"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPGRpdj4KPHA+VGhlIGFwcGxpY2F0aW9uOiAnJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm5hbWV9JyBoYXMgc3VjY2Vzc2Z1bGx5IGJlZW4gcmVnaXN0ZXJlZDwvcD4KPC9kaXY+CiR7d2Vic2l0ZV9ib3R0b219"/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Registered"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="revoke"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="revoke"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_tokenstore_server}/oauth/tokenstore/revoke"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="token"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="revokeResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPGRpdj4KPHA+VGhlIHRva2VuICcke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIudG9rZW59JyB3YXMgc3VjY2Vzc2Z1bGx5IGRlbGV0ZWQhPC9wPgo8L2Rpdj4KJHt3ZWJzaXRlX2JvdHRvbX0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Revoke token"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="toggleStatus"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="toggleStatus"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_tokenstore_server}/oauth/tokenstore/update"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="token"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:CustomizeValue stringValue="${request.http.parameter.newStatus}"/&gt;
                    &lt;L7p:Name stringValue="status"/&gt;
                    &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="revokeResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPGRpdj4KPHA+VGhlIHRva2VuICcke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIudG9rZW59JyB3YXMgc3VjY2Vzc2Z1bGx5IGJlZW4gdXBkYXRlIHRvIHN0YXR1cyAnJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm5ld1N0YXR1c30nITwvcD4KPC9kaXY+CiR7d2Vic2l0ZV9ib3R0b219"/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Update token status"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="deleteClient"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="deleteClient"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/delete"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="client_ident"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="deleteClientResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPGRpdj4KPHA+VGhlIGNsaWVudCBhcHBsaWNhdGlvbiAnJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmNsaWVudF9uYW1lfScgd2FzIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5ITwvcD4KPC9kaXY+CiR7d2Vic2l0ZV9ib3R0b219"/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Delete client"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="editClient"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="editClient"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/get"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="client_ident"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="clientValues"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathType"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:type/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathIdent"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:client_ident/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathDescription"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:description"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathName"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:name/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathOrg"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:organization/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt4cGF0aFR5cGUucmVzdWx0fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="clientType"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${clientType}"/&gt;
                    &lt;L7p:Expression2 stringValue="confidential"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="confidential"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="PG9wdGlvbiB2YWx1ZT0iY29uZmlkZW50aWFsIiBzZWxlY3RlZD0ic2VsZWN0ZWQiPmNvbmZpZGVudGlhbDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9InB1YmxpYyI+cHVibGljPC9vcHRpb24+"/&gt;
                    &lt;L7p:VariableToSet stringValue="selectedOption"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="PG9wdGlvbiB2YWx1ZT0iY29uZmlkZW50aWFsIj5jb25maWRlbnRpYWw8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJwdWJsaWMiIHNlbGVjdGVkPSJzZWxlY3RlZCI+cHVibGljPC9vcHRpb24+"/&gt;
                    &lt;L7p:VariableToSet stringValue="selectedOption"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gdmFsaWRhdGVGb3JtKCkKICAgIHsKICAgICAgICB2YXIgYWxlcnRNZXNzYWdlID0gJyc7CiAgICAgICAgdmFyIGNsaWVudE5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibmFtZSIpLnZhbHVlOwogICAgICAgIHZhciBjbGllbnRPcmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgib3JnIikudmFsdWU7CiAgICAgICAgaWYoY2xpZW50TmFtZSA9PSBudWxsIHx8IGNsaWVudE5hbWUucmVwbGFjZSgvKF5ccyopfChccyokKS9nLCAiIikubGVuZ3RoPT0wKQogICAgICAgIHsKICAgICAgICAgICAgYWxlcnRNZXNzYWdlID0gJ1BsZWFzZSBwcm92aWRlIGEgQ2xpZW50IE5hbWVcbic7CiAgICAgICAgfQogICAgICAgIGlmKGNsaWVudE9yZyA9PSBudWxsIHx8IGNsaWVudE9yZy5yZXBsYWNlKC8oXlxzKil8KFxzKiQpL2csICIiKS5sZW5ndGg9PTApCiAgICAgICAgewogICAgICAgICAgICBhbGVydE1lc3NhZ2UgPSBhbGVydE1lc3NhZ2UgKyAnUGxlYXNlIHByb3ZpZGUgYW4gT3JnYW5pemF0aW9uXG4nOwogICAgICAgIH0KICAgICAgICBpZiAoYWxlcnRNZXNzYWdlLmxlbmd0aCA+IDApCiAgICAgICAgewogICAgICAgICAgICBhbGVydChhbGVydE1lc3NhZ2UpOwogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICAgICAgcmV0dXJuIGNvbmZpcm0oIkRvIHlvdSByZWFsbHkgd2FudCB0byB1cGRhdGUgdGhlIGNsaWVudCBhcHBsaWNhdGlvbiAnJHt4cGF0aE5hbWUucmVzdWx0fSc/Iik7CiAgICB9Cjwvc2NyaXB0Pgo8ZGl2PgogICAgPHA+RmlsbCBvdXQgdGhlIGZvcm0gdG8gZWRpdCB0aGUgY2xpZW50IGFwcGxpY2F0aW9uLjwvcD4KICAgIDxmb3JtIGFjdGlvbj0iJHt0aGlzLmFwcC51cmx9IiBtZXRob2Q9IlBPU1QiIGVuY3R5cGU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIgaWQ9InVwZGF0ZUNsaWVudCIgb25zdWJtaXQ9InJldHVybiB2YWxpZGF0ZUZvcm0oKSI+CiAgICAgICAgPHRhYmxlIG5hbWU9InZhbHVlcyI+CiAgICAgICAgICAgIDx0cj48dGQ+Q2xpZW50IE5hbWU8L3RkPjx0ZD48aW5wdXQgaWQ9Im5hbWUiIG5hbWU9Im5hbWUiIHNpemU9IjEyOCIgdmFsdWU9IiR7eHBhdGhOYW1lLnJlc3VsdH0iLz48L3RkPjwvdHI+CiAgICAgICAgICAgIDx0cj48dGQ+T3JnYW5pemF0aW9uPC90ZD48dGQ+PGlucHV0IG5hbWU9Im9yZyIgaWQ9Im9yZyIgdHlwZT0idGV4dCIgc2l6ZT0iMTI4IiB2YWx1ZT0iJHt4cGF0aE9yZy5yZXN1bHR9Ii8+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPkRlc2NyaXB0aW9uPC90ZD48dGQ+PGlucHV0IG5hbWU9ImRlc2NyaXB0aW9uIiBpZD0iZGVzY3JpcHRpb24iIHR5cGU9InRleHQiIHZhbHVlPSIke3hwYXRoRGVzY3JpcHRpb24ucmVzdWx0fSIgc2l6ZT0iMTI4IiAvPjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD5DbGllbnQgVHlwZTwvdGQ+PHRkPjxzZWxlY3QgbmFtZT0idHlwZSI+JHtzZWxlY3RlZE9wdGlvbn08L3NlbGVjdD4gKHVzZWQgd2l0aCBvYXV0aCAyLjApPC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPjxpbnB1dCBuYW1lPSJzdGF0ZSIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0idXBkYXRlQ2xpZW50Ii8+PC90ZD48dGQ+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPjxpbnB1dCBuYW1lPSJjbGllbnRfaWRlbnQiIGlkPSJjbGllbnRfaWRlbnQiIHR5cGU9ImhpZGRlbiIgdmFsdWU9IiR7eHBhdGhJZGVudC5yZXN1bHR9Ii8+PC90ZD48dGQ+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPjxpbnB1dCBpZD0ic3VibWl0QnV0dG9uIiB0eXBlPSJzdWJtaXQiIHZhbHVlPSJVcGRhdGUgQ2xpZW50Ii8+PC90ZD48dGQ+PGlucHV0IHR5cGU9InJlc2V0Ii8+PC90ZD48L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2Zvcm0+Cgo8L2Rpdj4KJHt3ZWJzaXRlX2JvdHRvbX0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Edit Client"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="updateClient"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="updateClient"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[${website_top}
                    &lt;div&gt;
                    &lt;p&gt;&lt;b&gt;ERROR:&lt;/b&gt;The application: ${request.http.parameter.client_name} could NOT
                    be updated. Please contact support or try again&lt;/p&gt;
                    &lt;/div&gt;
                    ${website_bottom}]]&gt;&lt;/L7p:Content&gt;
                    &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                    &lt;L7p:HttpStatus stringValue="401"/&gt;
                    &lt;/L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.name}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.client_ident}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.org}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.name"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="name"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.client_ident"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_ident"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.org"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="org"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnR5cGV9"/&gt;
                    &lt;L7p:VariableToSet stringValue="type"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${type}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="type"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="type"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmRlc2NyaXB0aW9ufQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="description"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${description}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="description"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="description"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="Y2xpZW50X2lkZW50PSR7Y2xpZW50X2lkZW50fSZkZXNjcmlwdGlvbj0ke2Rlc2NyaXB0aW9ufSZuYW1lPSR7bmFtZX0mb3JnPSR7b3JnfSZ0eXBlPSR7dHlwZX0="/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/update"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="msg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="updateResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPGRpdj4KPHA+VGhlIGFwcGxpY2F0aW9uOiAnJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm5hbWV9JyBoYXMgc3VjY2Vzc2Z1bGx5IGJlZW4gdXBkYXRlZDwvcD4KPC9kaXY+CiR7d2Vic2l0ZV9ib3R0b219"/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Update the client store"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="clientKeys"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="clientKeys"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/getKey"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="client_ident"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="getResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnZXRSZXN1bHQubWFpbnBhcnR9"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="findDates"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathCount"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="getResult"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="count(/ns:values/ns:value)"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="getResult"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                    &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                    xmlns:ns="http://ns.l7tech.com/2012/11/otk-clientstore"&gt;

                    &lt;xsl:output method="html"/&gt;

                    &lt;xsl:param name="this.app.url"/&gt;

                    &lt;xsl:template match="/ns:values"&gt;
                    &lt;table border="1" style="padding:2px; empty-cells: show;"&gt;
                    &lt;tr&gt;
                    &lt;th&gt;index&lt;/th&gt;
                    &lt;xsl:for-each select="ns:value[1][node()]/descendant::node()[not(name()='')]"&gt;
                    &lt;th&gt;
                    &lt;xsl:value-of select="name()"/&gt;
                    &lt;/th&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;th colspan="3"&gt;action&lt;/th&gt;
                    &lt;/tr&gt;
                    &lt;xsl:for-each select="ns:value[node()]"&gt;
                    &lt;xsl:variable name="tempClientKey" select="descendant::node()[local-name()='client_key']"/&gt;
                    &lt;tr&gt;
                    &lt;td&gt;
                    &lt;xsl:value-of select="@index"/&gt;
                    &lt;/td&gt;
                    &lt;xsl:for-each select="descendant::node()[not(name()='')]"&gt;
                    &lt;td&gt;
                    &lt;xsl:value-of select="text()"/&gt;
                    &lt;/td&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"
                    onsubmit="return confirmRevoke('{$tempClientKey}')"&gt;
                    &lt;input name="state" type="hidden" value="revokeKey"/&gt;
                    &lt;input name="client_key" type="hidden" value="{$tempClientKey}"/&gt;
                    &lt;input type="submit" value="Revoke"/&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"&gt;
                    &lt;input name="state" type="hidden" value="editKey"/&gt;
                    &lt;input name="client_key" type="hidden" value="{$tempClientKey}"/&gt;
                    &lt;input type="submit" value="Edit"/&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;td&gt;
                    &lt;form action="{$this.app.url}" enctype="application/x-www-form-urlencoded" method="POST"
                    onsubmit="return confirmDisableTokens('{$tempClientKey}')"&gt;
                    &lt;input name="state" type="hidden" value="disableTokens"/&gt;
                    &lt;input name="client_key" type="hidden" value="{$tempClientKey}"/&gt;
                    &lt;input type="submit" value="Disable Tokens"/&gt;
                    &lt;/form&gt;
                    &lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;/table&gt;
                    &lt;/xsl:template&gt;

                    &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                    &lt;/L7p:XslTransformation&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnZXRSZXN1bHQubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="toBeReturned"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${xpathCount.result}"/&gt;
                    &lt;L7p:Expression2 stringValue="0"/&gt;
                    &lt;L7p:Operator operator="GT"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="GT"/&gt;
                    &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:MsgVarPrefix stringValue="xsltFindDates"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="findDates"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                    &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                    xmlns:ns="http://ns.l7tech.com/2012/11/otk-clientstore"&gt;

                    &lt;xsl:output method="text" omit-xml-declaration="yes"/&gt;

                    &lt;xsl:template match="/"&gt;
                    &lt;xsl:for-each select="(//ns:rexpiration|//ns:expiration|//ns:created)[text()!='0']"&gt;
                    &lt;xsl:value-of select="text()"/&gt;&lt;xsl:text&gt;;&lt;/xsl:text&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;/xsl:template&gt;

                    &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                    &lt;/L7p:XslTransformation&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtmaW5kRGF0ZXMubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="inputDates"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Split&gt;
                    &lt;L7p:InputVariable stringValue="inputDates"/&gt;
                    &lt;L7p:OutputVariable stringValue="dates"/&gt;
                    &lt;L7p:SplitPattern stringValue=";"/&gt;
                    &lt;L7p:SplitPatternRegEx booleanValue="false"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                    iterationLimit="10000" loopVariable="dates" variablePrefix="date"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtkYXRlLmN1cnJlbnR9"/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateFormat stringValue="&amp;lt;Timestamp&gt;"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="current"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="toBeReturned"/&gt;
                    &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                    &lt;L7p:Regex stringValue="${date.current}"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="${current.yyyy-MM-dd HH:mm:ss z}"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;/L7p:ForEachLoop&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgpmdW5jdGlvbiBjb25maXJtUmV2b2tlKHJldm9rZUtleSkKewogIHJldHVybiBjb25maXJtKCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gcmV2b2tlIHRoZSBjbGllbnRfa2V5ICciK3Jldm9rZUtleSsiJz8gVGhpcyB3aWxsIGFsc28gcmV2b2tlIGFsbCBvZiBpdHMgYWNjZXNzIHRva2Vucy4iKTsKfQpmdW5jdGlvbiBjb25maXJtRGlzYWJsZVRva2VucyhjbGllbnRLZXkpCnsKICByZXR1cm4gY29uZmlybSgiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRpc2FibGUgYWxsIGFjY2VzcyB0b2tlbnMgZm9yIHRoZSBjbGllbnRfa2V5ICciK2NsaWVudEtleSsiJz8iKTsKfQo8L3NjcmlwdD4KPGRpdj4KPHA+VGhpcyBpcyBhbiBvdmVydmlldyBvZiBhbGwgcmVnaXN0ZXJlZCBjbGllbnRfa2V5wrRzIGZvciB0aGUgZ2l2ZW4gY2xpZW50IGFwcGxpY2F0aW9uPC9wPgoke3RvQmVSZXR1cm5lZH0KPHA+WW91IGNhbiBhbHNvIGFkZCBhbm90aGVyIGNsaWVudF9rZXkgYXBwbGljYXRpb248L3A+Cjxmb3JtIGFjdGlvbj0iJHt0aGlzLmFwcC51cmx9IiBtZXRob2Q9R0VUPgoJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic3RhdGUiIHZhbHVlPSJhZGRLZXkiLz4KCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImNsaWVudF9pZGVudCIgdmFsdWU9IiR7cmVxdWVzdC5odHRwLnBhcmFtZXRlci5jbGllbnRfaWRlbnR9Ii8+Cgk8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iQWRkIENsaWVudCBLZXkiLz4KPC9mb3JtPgo8L2Rpdj4KJHt3ZWJzaXRlX2JvdHRvbX0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="List client keys"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="revokeKey"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="revokeKey"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2xpZW50X2tleT0ke2NsaWVudF9rZXl9"/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/revoke"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="msg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="revokeResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPGRpdj4KPHA+VGhlIGNsaWVudF9rZXkgJyR7cmVxdWVzdC5odHRwLnBhcmFtZXRlci5jbGllbnRfa2V5fScgd2FzIHN1Y2Nlc3NmdWxseSByZXZva2VkITwvcD4KPC9kaXY+CiR7d2Vic2l0ZV9ib3R0b219"/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Revoke client_key"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="addKey"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="addKey"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2s="/&gt;
                    &lt;L7p:VariableToSet stringValue="token_type"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue="2dc66d50-fa74-489e-97f8-d6b2f4a13c08"/&gt;
                    &lt;/L7p:Include&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gdmFsaWRhdGVGb3JtKCkKICAgIHsKICAgICAgICB2YXIgYWxlcnRNZXNzYWdlID0gJyc7CiAgICAgICAgdmFyIGNsaWVudEtFWSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjbGllbnRfa2V5IikudmFsdWU7CiAgICAgICAgdmFyIGNsaWVudFNlY3JldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzZWNyZXQiKS52YWx1ZTsKICAgICAgICB2YXIgcmVnaXN0ZXJlZEJZID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJlZ2lzdGVyZWRfYnkiKS52YWx1ZTsKICAgICAgICBpZihjbGllbnRLRVkgPT0gbnVsbCB8fCBjbGllbnRLRVkucmVwbGFjZSgvKF5ccyopfChccyokKS9nLCAiIikubGVuZ3RoPT0wKQogICAgICAgIHsKICAgICAgICAgICAgYWxlcnRNZXNzYWdlID0gYWxlcnRNZXNzYWdlICsgJ1BsZWFzZSBwcm92aWRlIGEgY2xpZW50X2tleVxuJzsKICAgICAgICB9CiAgICAgICAgaWYoY2xpZW50U2VjcmV0ID09IG51bGwgfHwgY2xpZW50U2VjcmV0LnJlcGxhY2UoLyheXHMqKXwoXHMqJCkvZywgIiIpLmxlbmd0aD09MCkKICAgICAgICB7CiAgICAgICAgICAgIGFsZXJ0TWVzc2FnZSA9IGFsZXJ0TWVzc2FnZSArICdQbGVhc2UgcHJvdmlkZSBhIGNsaWVudF9rZXkgU2VjcmV0XG4nOwogICAgICAgIH0KICAgICAgICBpZihyZWdpc3RlcmVkQlkgPT0gbnVsbCB8fCByZWdpc3RlcmVkQlkucmVwbGFjZSgvKF5ccyopfChccyokKS9nLCAiIikubGVuZ3RoPT0wKQogICAgICAgIHsKICAgICAgICAgICAgYWxlcnRNZXNzYWdlID0gYWxlcnRNZXNzYWdlICsgJ1BsZWFzZSBwcm92aWRlIGEgbmFtZSBvZiB3aG9tIGlzIHJlZ2lzdGVyaW5nIHRoaXMgY2xpZW50X2tleVxuJzsKICAgICAgICB9CiAgICAgICAgaWYgKGFsZXJ0TWVzc2FnZS5sZW5ndGggPiAwKQogICAgICAgIHsKICAgICAgICAgICAgYWxlcnQoYWxlcnRNZXNzYWdlKTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgfQo8L3NjcmlwdD4KPGRpdj4KICAgIDxwPkZpbGwgb3V0IHRoZSBmb3JtIHRvIGFkZCBhIG5ldyBjbGllbnRfa2V5LjwvcD4KICAgIDxmb3JtIGFjdGlvbj0iJHt0aGlzLmFwcC51cmx9IiBtZXRob2Q9IlBPU1QiIGVuY3R5cGU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIgaWQ9ImFkZEtleUZvcm0iIG9uc3VibWl0PSJyZXR1cm4gdmFsaWRhdGVGb3JtKCkiPgogICAgICAgIDx0YWJsZSBuYW1lPSJ2YWx1ZXMiPgogICAgICAgICAgICA8dHI+PHRkPkNsaWVudCBLZXk8L3RkPjx0ZD48aW5wdXQgbmFtZT0iY2xpZW50X2tleSIgaWQ9ImNsaWVudF9rZXkiIHZhbHVlPSIke2dlblRva2VufSIgc2l6ZT0iMTI4Ii8+IChtdXN0IGJlIHVuaXF1ZSB0byB0aGUgc3lzdGVtKTwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD5DbGllbnQgU2VjcmV0PC90ZD48dGQ+PGlucHV0IG5hbWU9InNlY3JldCIgaWQ9InNlY3JldCIgdmFsdWU9IiR7Z2VuU2VjcmV0fSIgdHlwZT0idGV4dCIgc2l6ZT0iMTI4Ii8+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPlN0YXR1czwvdGQ+PHRkPjxzZWxlY3QgbmFtZT0ic3RhdHVzIj48b3B0aW9uIHZhbHVlPSJFTkFCTEVEIj5FTkFCTEVEPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iRElTQUJMRUQiPkRJU0FCTEVEPC9vcHRpb24+PC9zZWxlY3Q+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPlNjb3BlPC90ZD48dGQ+PGlucHV0IG5hbWU9InNjb3BlIiBzaXplPSIxMjgiIHZhbHVlPSJvb2IiLz4gKHVzZWQgd2l0aCBvYXV0aCAyLjApPC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPkNhbGxiYWNrIFVSTDwvdGQ+PHRkPjxpbnB1dCBuYW1lPSJjYWxsYmFjayIgc2l6ZT0iMTI4IiB2YWx1ZT0ib29iIi8+IChpbiBvYXV0aCAyLjAgdGhpcyBpcyBjYWxsZWQgcmVkaXJlY3RfdXJpKTwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD5FbnZpcm9ubWVudDwvdGQ+PHRkPjxpbnB1dCBuYW1lPSJlbnZpcm9ubWVudCIgc2l6ZT0iMTI4IiB2YWx1ZT0iQUxMIi8+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPlJlZ2lzdGVyZWQgYnk8L3RkPjx0ZD48aW5wdXQgbmFtZT0icmVnaXN0ZXJlZF9ieSIgaWQ9InJlZ2lzdGVyZWRfYnkiIHZhbHVlPSIke3JlcXVlc3QudXNlcm5hbWV9IiB0eXBlPSJ0ZXh0IiBzaXplPSIxMjgiIHJlYWRvbmx5PSJyZWFkb25seSIvPjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD48aW5wdXQgbmFtZT0ic3RhdGUiIHR5cGU9ImhpZGRlbiIgdmFsdWU9ImtleUFkZGVkIi8+PC90ZD48dGQ+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPjxpbnB1dCBuYW1lPSJjbGllbnRfaWRlbnQiIGlkPSJjbGllbnRfaWRlbnQiIHR5cGU9ImhpZGRlbiIgdmFsdWU9IiR7cmVxdWVzdC5odHRwLnBhcmFtZXRlci5jbGllbnRfaWRlbnR9Ii8+PC90ZD48dGQ+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPjxpbnB1dCBuYW1lPSJleHBpcmF0aW9uIiBpZD0iZXhwaXJhdGlvbiIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iJHtnZW5FeHBpcmF0aW9ufSIvPjwvdGQ+PHRkPjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD48aW5wdXQgaWQ9InN1Ym1pdEJ1dHRvbiIgdHlwZT0ic3VibWl0IiB2YWx1ZT0iQWRkIi8+PC90ZD48dGQ+PGlucHV0IHR5cGU9InJlc2V0Ii8+PC90ZD48L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2Zvcm0+Cgo8L2Rpdj4KJHt3ZWJzaXRlX2JvdHRvbX0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Add Client Key"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="keyAdded"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="keyAdded"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[${website_top}
                    &lt;div&gt;
                    &lt;p&gt;&lt;b&gt;ERROR:&lt;/b&gt;The client_key: ${request.http.parameter.client_key} could NOT be
                    added. Please contact support or try again&lt;/p&gt;
                    &lt;/div&gt;
                    ${website_bottom}]]&gt;&lt;/L7p:Content&gt;
                    &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                    &lt;L7p:HttpStatus stringValue="401"/&gt;
                    &lt;/L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.client_key}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.client_ident}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.secret}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.registered_by}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.client_ident"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_ident"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.secret"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="secret"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.registered_by"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="registered_by"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmV4cGlyYXRpb259"/&gt;
                    &lt;L7p:VariableToSet stringValue="expiration"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="expiration"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="expiration"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnN0YXR1c30="/&gt;
                    &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${status}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="status"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="status"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnNjb3BlfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="scope"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${scope}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="scope"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="scope"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmVudmlyb25tZW50fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="environment"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${environment}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="environment"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="environment"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmNhbGxiYWNrfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="callback"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${callback}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="callback"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="callback"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="Y2FsbGJhY2s9JHtjYWxsYmFja30mY2xpZW50X2lkZW50PSR7Y2xpZW50X2lkZW50fSZjbGllbnRfa2V5PSR7Y2xpZW50X2tleX0mZW52aXJvbm1lbnQ9JHtlbnZpcm9ubWVudH0mcmVnaXN0ZXJlZF9ieT0ke3JlZ2lzdGVyZWRfYnl9JnNjb3BlPSR7c2NvcGV9JnNlY3JldD0ke3NlY3JldH0mc3RhdHVzPSR7c3RhdHVzfSZleHBpcmF0aW9uPSR7ZXhwaXJhdGlvbn0="/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/store"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="msg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="storeResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${storeResult.mainpart}"/&gt;
                    &lt;L7p:Expression2 stringValue="persisted"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:RightValue stringValue="persisted"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPGRpdj4KPHA+VGhlIGNsaWVudF8ga2V5ICcke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIuY2xpZW50X2tleX0nIGhhcyBzdWNjZXNzZnVsbHkgYmVlbiByZWdpc3RlcmVkPC9wPgo8L2Rpdj4KJHt3ZWJzaXRlX2JvdHRvbX0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Key added"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="editKey"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="editKey"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2xpZW50X2tleT0ke2NsaWVudF9rZXl9"/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/getKey"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="msg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="clientValues"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathSecret"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:secret/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathStatus"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:status/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathScope"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:scope/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathCallback"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:callback/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathEnvironment"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="clientValues"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/ns:values/ns:value/ns:environment/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="ns"/&gt;
                    &lt;L7p:value stringValue="http://ns.l7tech.com/2012/11/otk-clientstore"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt4cGF0aFN0YXR1cy5yZXN1bHR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="status"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${status}"/&gt;
                    &lt;L7p:Expression2 stringValue="ENABLED"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:RightValue stringValue="ENABLED"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="PG9wdGlvbiB2YWx1ZT0iRU5BQkxFRCIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5FTkFCTEVEPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iRElTQUJMRUQiPkRJU0FCTEVEPC9vcHRpb24+"/&gt;
                    &lt;L7p:VariableToSet stringValue="selectedOption"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="PG9wdGlvbiB2YWx1ZT0iRElTQUJMRUQiIHNlbGVjdGVkPSJzZWxlY3RlZCI+RElTQUJMRUQ8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJFTkFCTEVEIj5FTkFCTEVEPC9vcHRpb24+"/&gt;
                    &lt;L7p:VariableToSet stringValue="selectedOption"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gdmFsaWRhdGVGb3JtKCkKICAgIHsKICAgICAgICB2YXIgYWxlcnRNZXNzYWdlID0gJyc7CiAgICAgICAgdmFyIGNsaWVudFNlY3JldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzZWNyZXQiKS52YWx1ZTsKICAgICAgICBpZihjbGllbnRTZWNyZXQgPT0gbnVsbCB8fCBjbGllbnRTZWNyZXQucmVwbGFjZSgvKF5ccyopfChccyokKS9nLCAiIikubGVuZ3RoPT0wKQogICAgICAgIHsKICAgICAgICAgICAgYWxlcnRNZXNzYWdlID0gYWxlcnRNZXNzYWdlICsgJ1BsZWFzZSBwcm92aWRlIGEgY2xpZW50X2tleSBTZWNyZXRcbic7CiAgICAgICAgfQogICAgICAgIGlmIChhbGVydE1lc3NhZ2UubGVuZ3RoID4gMCkKICAgICAgICB7CiAgICAgICAgICAgIGFsZXJ0KGFsZXJ0TWVzc2FnZSk7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgICAgICByZXR1cm4gY29uZmlybSgiRG8geW91IHJlYWxseSB3YW50IHRvIHVwZGF0ZSB0aGUgY2xpZW50X2tleSAnJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmNsaWVudF9rZXl9Jz8iKTsKICAgIH0KPC9zY3JpcHQ+CjxkaXY+CiAgICA8cD5GaWxsIG91dCB0aGUgZm9ybSB0byBlZGl0IHRoZSBjbGllbnRfa2V5LjwvcD4KICAgIDxmb3JtIGFjdGlvbj0iJHt0aGlzLmFwcC51cmx9IiBtZXRob2Q9IlBPU1QiIGVuY3R5cGU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIgaWQ9ImVkaXRLZXlGb3JtIiBvbnN1Ym1pdD0icmV0dXJuIHZhbGlkYXRlRm9ybSgpIj4KICAgICAgICA8dGFibGUgbmFtZT0idmFsdWVzIj4KICAgICAgICAgICAgPHRyPjx0ZD5DbGllbnQgS2V5PC90ZD48dGQ+PGlucHV0IG5hbWU9ImNsaWVudF9rZXkiIGlkPSJjbGllbnRfa2V5IiB2YWx1ZT0iJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmNsaWVudF9rZXl9IiByZWFkb25seT0icmVhZG9ubHkiIHNpemU9IjEyOCIvPjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD5DbGllbnQgU2VjcmV0PC90ZD48dGQ+PGlucHV0IG5hbWU9InNlY3JldCIgaWQ9InNlY3JldCIgdmFsdWU9IiR7eHBhdGhTZWNyZXQucmVzdWx0fSIgdHlwZT0idGV4dCIgc2l6ZT0iMTI4Ii8+PC90ZD48L3RyPgogICAgICAgICAgICA8dHI+PHRkPlN0YXR1czwvdGQ+PHRkPjxzZWxlY3QgbmFtZT0ic3RhdHVzIj4ke3NlbGVjdGVkT3B0aW9ufTwvc2VsZWN0Pjwvc2VsZWN0PjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD5TY29wZTwvdGQ+PHRkPjxpbnB1dCBuYW1lPSJzY29wZSIgaWQ9InNjb3BlIiBzaXplPSIxMjgiIHZhbHVlPSIke3hwYXRoU2NvcGUucmVzdWx0fSIvPiAodXNlZCB3aXRoIG9hdXRoIDIuMCk8L3RkPjwvdHI+CiAgICAgICAgICAgIDx0cj48dGQ+Q2FsbGJhY2sgVVJMPC90ZD48dGQ+PGlucHV0IG5hbWU9ImNhbGxiYWNrIiBpZD0iY2FsbGJhY2siIHNpemU9IjEyOCIgdmFsdWU9IiR7eHBhdGhDYWxsYmFjay5yZXN1bHR9Ii8+IChpbiBvYXV0aCAyLjAgdGhpcyBpcyBjYWxsZWQgcmVkaXJlY3RfdXJpKTwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD5FbnZpcm9ubWVudDwvdGQ+PHRkPjxpbnB1dCBuYW1lPSJlbnZpcm9ubWVudCIgaWQ9ImVudmlyb25tZW50IiBzaXplPSIxMjgiIHZhbHVlPSIke3hwYXRoRW52aXJvbm1lbnQucmVzdWx0fSIvPjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD48aW5wdXQgbmFtZT0ic3RhdGUiIHR5cGU9ImhpZGRlbiIgdmFsdWU9ImtleUVkaXRlZCIvPjwvdGQ+PHRkPjwvdGQ+PC90cj4KICAgICAgICAgICAgPHRyPjx0ZD48aW5wdXQgaWQ9InN1Ym1pdEJ1dHRvbiIgdHlwZT0ic3VibWl0IiB2YWx1ZT0iU2F2ZSIvPjwvdGQ+PHRkPjxpbnB1dCB0eXBlPSJyZXNldCIvPjwvdGQ+PC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9mb3JtPgoKPC9kaXY+CiR7d2Vic2l0ZV9ib3R0b219"/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Edit client_key"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="keyEdited"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="keyEdited"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.client_key}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.secret}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.status}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.scope}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.callback}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.environment}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.secret"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="secret"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.status"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="status"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.scope"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="scope"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.callback"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="callback"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.environment"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="environment"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="Y2FsbGJhY2s9JHtjYWxsYmFja30mY2xpZW50X2tleT0ke2NsaWVudF9rZXl9JmVudmlyb25tZW50PSR7ZW52aXJvbm1lbnR9JnNjb3BlPSR7c2NvcGV9JnNlY3JldD0ke3NlY3JldH0mc3RhdHVzPSR7c3RhdHVzfQ=="/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/clientstore/update"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="msg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="secret"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="clientValues"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPGRpdj4KPHA+VGhlIGNsaWVudF9rZXk6ICcke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIuY2xpZW50X2tleX0nIGhhcyBzdWNjZXNzZnVsbHkgYmVlbiB1cGRhdGVkPC9wPgo8L2Rpdj4KJHt3ZWJzaXRlX2JvdHRvbX0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Edited client_key"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${state}"/&gt;
                    &lt;L7p:Expression2 stringValue="disableTokens"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="disableTokens"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request.http.parameter.client_key"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="client_key"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2xpZW50X2tleT0ke2NsaWVudF9rZXl9"/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="msg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${host_oauth_clientstore_server}/oauth/tokenstore/disable"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="msg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="revokeResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="200"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="JHt3ZWJzaXRlX3RvcH0KPGRpdj4KPHA+VG9rZW5zIGZvciB0aGUgY2xpZW50X2tleSAnJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmNsaWVudF9rZXl9JyB3ZXJlIHN1Y2Nlc3NmdWxseSBkaXNhYmxlZCE8L3A+CjwvZGl2Pgoke3dlYnNpdGVfYm90dG9tfQ=="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Disable tokens for client_key"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:Policy&gt;
                </l7:Resource>
            </l7:ResourceSet>
        </l7:Resources>
    </l7:Service>
</enumeration>
