<?xml version="1.0" encoding="UTF-8"?>
<enumeration ObjectType="Policy" ExportDate="20120815 0135" ExporterVersion="6.2 (4248)">
    <l7:Policy xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" guid="950d7c13-dcd8-472f-a7ae-2f4d50b8bfdd"
               id="123732005" version="12">
        <l7:PolicyDetail folderId="123600904" guid="950d7c13-dcd8-472f-a7ae-2f4d50b8bfdd" id="123732005" version="12">
            <l7:Name>OAuth 2.0 Context Variables</l7:Name>
            <l7:PolicyType>Include</l7:PolicyType>
            <l7:Properties>
                <l7:Property key="revision">
                    <l7:LongValue>13</l7:LongValue>
                </l7:Property>
                <l7:Property key="soap">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:PolicyDetail>
        <l7:Resources>
            <l7:ResourceSet tag="policy">
                <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy"
                    xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="Policy Fragment: OAuth Context Variables"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0Mw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth_ovp_server"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="QkVBUkVS"/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_token_type"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0Mw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_auth_template_server"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="L2F1dGgvb2F1dGgvdjIvYXV0aG9yaXplL3dlYnNpdGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_auth_template_path"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MTAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_client_max_fail_per_sec"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="MTAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_resource_owner_max_fail_per_sec"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="aHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0Mw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_auth_server"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="L2F1dGgvb2F1dGgvdjIvYXV0aG9yaXpl"/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_auth_path"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ExportVariables&gt;
                    &lt;L7p:ExportedVars stringArrayValue="included"&gt;
                    &lt;L7p:item stringValue="oauth2_auth_path"/&gt;
                    &lt;L7p:item stringValue="oauth2_auth_server"/&gt;
                    &lt;L7p:item stringValue="oauth2_auth_template_path"/&gt;
                    &lt;L7p:item stringValue="oauth2_auth_template_server"/&gt;
                    &lt;L7p:item stringValue="oauth2_client_max_fail_per_sec"/&gt;
                    &lt;L7p:item stringValue="oauth2_resource_owner_max_fail_per_sec"/&gt;
                    &lt;L7p:item stringValue="oauth2_token_type"/&gt;
                    &lt;L7p:item stringValue="oauth_ovp_server"/&gt;
                    &lt;/L7p:ExportedVars&gt;
                    &lt;/L7p:ExportVariables&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:Policy&gt;
                </l7:Resource>
            </l7:ResourceSet>
        </l7:Resources>
    </l7:Policy>
    <l7:Policy xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" guid="478fbcbd-624a-451d-af37-df07e62ba5d4"
               id="123731986" version="0">
        <l7:PolicyDetail folderId="123600909" guid="478fbcbd-624a-451d-af37-df07e62ba5d4" id="123731986" version="0">
            <l7:Name>v2GenerateRequestMacForClient</l7:Name>
            <l7:PolicyType>Include</l7:PolicyType>
            <l7:Properties>
                <l7:Property key="revision">
                    <l7:LongValue>1</l7:LongValue>
                </l7:Property>
                <l7:Property key="soap">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:PolicyDetail>
        <l7:Resources>
            <l7:ResourceSet tag="policy">
                <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy"
                    xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Generates request MAC using HMAC-SHA1 algorithm"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Inputs: timestamp_sec, nonce, http_method, url, ext, mac_key,
                    mac_algorithm"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Outputs: mac"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="========== Validate inputs =========="/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${timestamp_sec}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="timestamp_sec"/&gt;
                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                    &lt;L7p:Regex stringValue="^0+"/&gt;
                    &lt;L7p:RegexName stringValue="Timestamp must not have leading zeros"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="timestamp_sec"/&gt;
                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                    &lt;L7p:Regex stringValue="^-"/&gt;
                    &lt;L7p:RegexName stringValue="Timestamp must be a positive number"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${nonce}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${http_method}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="http_method"/&gt;
                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                    &lt;L7p:Regex stringValue="[a-z]"/&gt;
                    &lt;L7p:RegexName stringValue="HTTP method must be in upper case"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${url}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${mac_key}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${mac_algorithm}"/&gt;
                    &lt;L7p:Expression2 stringValue="hmac-sha-1"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="hmac-sha-1"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="========== Break URL into parts (protocol, hostname+port, path)
                    =========="/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="url_sub_string"/&gt;
                    &lt;L7p:FindAll booleanValue="true"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="url"/&gt;
                    &lt;L7p:Regex stringValue="([a-z]*)://([^/]*)(.*)"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1cmxfc3ViX3N0cmluZ1szXX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="request_uri"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1cmxfc3ViX3N0cmluZ1syXX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="url_hostname_port"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="host"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="port"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="url_hostname_port_sub_string"/&gt;
                    &lt;L7p:FindAll booleanValue="true"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="url_hostname_port"/&gt;
                    &lt;L7p:Regex stringValue="([^:]*):([0-9]*)"/&gt;
                    &lt;L7p:RegexName stringValue="get hostname and port number"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1cmxfaG9zdG5hbWVfcG9ydF9zdWJfc3RyaW5nWzFdfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="host"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1cmxfaG9zdG5hbWVfcG9ydF9zdWJfc3RyaW5nWzJdfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="port"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="port is specified"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1cmxfaG9zdG5hbWVfcG9ydH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="host"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${url_sub_string[1]}"/&gt;
                    &lt;L7p:Expression2 stringValue="http"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="http"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="ODA="/&gt;
                    &lt;L7p:VariableToSet stringValue="port"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${url_sub_string[1]}"/&gt;
                    &lt;L7p:Expression2 stringValue="https"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="https"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NDQz"/&gt;
                    &lt;L7p:VariableToSet stringValue="port"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Use default port"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="port is not specified"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Get hostname and port number"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Check if there are any uppercases in hostname"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:FindAll booleanValue="true"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="host"/&gt;
                    &lt;L7p:Regex stringValue="[A-Z]"/&gt;
                    &lt;L7p:RegexName stringValue="Check for uppercase"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PGhvc3RuYW1lPiR7aG9zdH08L2hvc3RuYW1lPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt4bWx9"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="forXSL"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="forXSL"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                    &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
                    &lt;xsl:output method="text" omit-xml-declaration="yes"/&gt;

                    &lt;xsl:variable name="lowercase" select="'abcdefghijklmnopqrstuvwxyz'"/&gt;
                    &lt;xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/&gt;

                    &lt;xsl:template match="/hostname"&gt;
                    &lt;xsl:value-of select="translate(., $uppercase, $lowercase)"/&gt;
                    &lt;/xsl:template&gt;

                    &lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;/L7p:XslTransformation&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtmb3JYU0wubWFpbnBhcnR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="host"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Change hostname to lowercase"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request_uri}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${host}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${port}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="request_uri"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="request_uri"/&gt;
                    &lt;L7p:TransformType transformType="URL_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="JHt0aW1lc3RhbXBfc2VjfQ0KJHtub25jZX0NCiR7aHR0cF9tZXRob2R9DQoke3JlcXVlc3RfdXJpfQ0KJHtob3N0fQ0KJHtwb3J0fQ0KJHtleHR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="normalized_request"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:GenerateHash&gt;
                    &lt;L7p:DataToSignText stringValue="${normalized_request}"/&gt;
                    &lt;L7p:KeyText stringValue="${mac_key}"/&gt;
                    &lt;L7p:VariableName stringValue="mac"/&gt;
                    &lt;/L7p:GenerateHash&gt;
                    &lt;L7p:EncodeDecode&gt;
                    &lt;L7p:SourceVariableName stringValue="mac"/&gt;
                    &lt;L7p:TargetDataType variableDataType="string"/&gt;
                    &lt;L7p:TargetVariableName stringValue="mac"/&gt;
                    &lt;L7p:TransformType transformType="BASE64_ENCODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:ExportVariables&gt;
                    &lt;L7p:ExportedVars stringArrayValue="included"&gt;
                    &lt;L7p:item stringValue="mac"/&gt;
                    &lt;/L7p:ExportedVars&gt;
                    &lt;/L7p:ExportVariables&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:Policy&gt;
                </l7:Resource>
            </l7:ResourceSet>
        </l7:Resources>
    </l7:Policy>
    <l7:Policy xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" guid="7768a8bc-8228-48a2-80f1-f44884937569"
               id="123731987" version="1">
        <l7:PolicyDetail folderId="123600909" guid="7768a8bc-8228-48a2-80f1-f44884937569" id="123731987" version="1">
            <l7:Name>v2GenerateAuthHeaderForClient</l7:Name>
            <l7:PolicyType>Include</l7:PolicyType>
            <l7:Properties>
                <l7:Property key="revision">
                    <l7:LongValue>2</l7:LongValue>
                </l7:Property>
                <l7:Property key="soap">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:PolicyDetail>
        <l7:Resources>
            <l7:ResourceSet tag="policy">
                <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy"
                    xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Generates Authorization Header"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Inputs: token, target_url, target_http_method"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Outputs: authorization_header"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="bGF5ZXI3"/&gt;
                    &lt;L7p:VariableToSet stringValue="ext"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="at"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="token"/&gt;
                    &lt;L7p:Regex stringValue="\&amp;quot;access_token\&amp;quot;\s*\:\s*\&amp;quot;([^&amp;quot;]*)\&amp;quot;"/&gt;
                    &lt;L7p:RegexName stringValue="isolate the access token itself"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="at"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="token"/&gt;
                    &lt;L7p:Regex stringValue="access_token\=([^&amp;amp;]*)"/&gt;
                    &lt;L7p:RegexName stringValue="isolate the access token itself - for implicit grant_type"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHthdFsxXX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="access_token"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="token_type"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="token"/&gt;
                    &lt;L7p:Regex stringValue="\&amp;quot;token_type\&amp;quot;\s*\:\s*\&amp;quot;([^&amp;quot;]*)\&amp;quot;"/&gt;
                    &lt;L7p:RegexName stringValue="isolate token type"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="token_type"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="token"/&gt;
                    &lt;L7p:Regex stringValue="token_type\=([^&amp;amp;]*)"/&gt;
                    &lt;L7p:RegexName stringValue="isolate token type - for implicit grant_type"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${token_type[1]}"/&gt;
                    &lt;L7p:Expression2 stringValue="Bearer"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="Bearer"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="QmVhcmVyICR7YWNjZXNzX3Rva2VufQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="authorization_header"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="token_type=Bearer"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${token_type[1]}"/&gt;
                    &lt;L7p:Expression2 stringValue="mac"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:RightValue stringValue="mac"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LnRpbWUuc2Vjb25kc30="/&gt;
                    &lt;L7p:VariableToSet stringValue="timestamp_sec"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:UUIDGenerator&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Generate nonce"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:TargetVariable stringValue="nonce"/&gt;
                    &lt;/L7p:UUIDGenerator&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt0YXJnZXRfaHR0cF9tZXRob2R9"/&gt;
                    &lt;L7p:VariableToSet stringValue="http_method"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt0YXJnZXRfdXJsfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="url"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="mk"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="token"/&gt;
                    &lt;L7p:Regex stringValue="\&amp;quot;mac_key\&amp;quot;\s*\:\s*\&amp;quot;([^&amp;quot;]*)\&amp;quot;"/&gt;
                    &lt;L7p:RegexName stringValue="isolate mac key"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="mk"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="token"/&gt;
                    &lt;L7p:Regex stringValue="mac_key\=([^&amp;amp;]*)"/&gt;
                    &lt;L7p:RegexName stringValue="isolate mac key - for implicit grant_type"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtta1sxXX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="mac_key"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="ma"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="token"/&gt;
                    &lt;L7p:Regex stringValue="\&amp;quot;mac_algorithm\&amp;quot;\s*\:\s*\&amp;quot;([^&amp;quot;]*)\&amp;quot;"/&gt;
                    &lt;L7p:RegexName stringValue="isolate mac algorithm"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="ma"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="token"/&gt;
                    &lt;L7p:Regex stringValue="mac_algorithm\=([^&amp;amp;]*)"/&gt;
                    &lt;L7p:RegexName stringValue="isolate mac algorithm - for implicit grant_type"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHttYVsxXX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="mac_algorithm"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue="478fbcbd-624a-451d-af37-df07e62ba5d4"/&gt;
                    &lt;/L7p:Include&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${ext}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="TUFDIGlkPSIke2FjY2Vzc190b2tlbn0iLCB0cz0iJHt0aW1lc3RhbXBfc2VjfSIsIG5vbmNlPSIke25vbmNlfSIsIGV4dD0iJHtleHR9IiwgbWFjPSIke21hY30i"/&gt;
                    &lt;L7p:VariableToSet stringValue="authorization_header"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${ext}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="TUFDIGlkPSIke2FjY2Vzc190b2tlbn0iLCB0cz0iJHt0aW1lc3RhbXBfc2VjfSIsIG5vbmNlPSIke25vbmNlfSIsIG1hYz0iJHttYWN9Ig=="/&gt;
                    &lt;L7p:VariableToSet stringValue="authorization_header"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Build Authorization Header"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="token_type=mac"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="authorization_header"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Invalid token_type"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ExportVariables&gt;
                    &lt;L7p:ExportedVars stringArrayValue="included"&gt;
                    &lt;L7p:item stringValue="authorization_header"/&gt;
                    &lt;/L7p:ExportedVars&gt;
                    &lt;/L7p:ExportVariables&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:Policy&gt;
                </l7:Resource>
            </l7:ResourceSet>
        </l7:Resources>
    </l7:Policy>
    <l7:Policy xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" guid="5b3f8880-588d-424c-bdd5-da7c80119c3a"
               id="123731984" version="1">
        <l7:PolicyDetail folderId="123600908" guid="5b3f8880-588d-424c-bdd5-da7c80119c3a" id="123731984" version="1">
            <l7:Name>Require OAuth 2.0 Token</l7:Name>
            <l7:PolicyType>Include</l7:PolicyType>
            <l7:Properties>
                <l7:Property key="revision">
                    <l7:LongValue>2</l7:LongValue>
                </l7:Property>
                <l7:Property key="soap">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:PolicyDetail>
        <l7:Resources>
            <l7:ResourceSet tag="policy">
                <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy"
                    xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue="950d7c13-dcd8-472f-a7ae-2f4d50b8bfdd"/&gt;
                    &lt;/L7p:Include&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Include this policy in a service policy to authorize api access based
                    on an oauth 2.0 access token"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="auth_scheme"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.header.authorization}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="auth_header"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="request.http.header.authorization"/&gt;
                    &lt;L7p:Regex stringValue="(\b.*\b)\s+.*"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHthdXRoX2hlYWRlclsxXX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="auth_scheme"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Look for authentication scheme in the authorization header, if it
                    exists."/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLmF1dGhvcml6YXRpb259"/&gt;
                    &lt;L7p:VariableToSet stringValue="authorizationHeader"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmFjY2Vzc190b2tlbn0="/&gt;
                    &lt;L7p:VariableToSet stringValue="access_token"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${auth_scheme}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="WWW-Authenticate"/&gt;
                    &lt;L7p:HeaderValue stringValue="${auth_scheme} error=&amp;quot;Missing access token&amp;quot;"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                    &lt;/L7p:AddHeader&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Add WWW-Authenticate header"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="401"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="ewogICJlcnJvciI6ImludmFsaWRfcmVxdWVzdCIsCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiTWlzc2luZyBhY2Nlc3MgdG9rZW4iCn0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
                    &lt;L7p:ResponseStatus stringValue="401"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Check access token"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVycy5hY2Nlc3NfdG9rZW58QEB9"/&gt;
                    &lt;L7p:VariableToSet stringValue="requestParams"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Presence of &amp;quot;@@&amp;quot; indicates duplicate parameters"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="requestParams"/&gt;
                    &lt;L7p:ProceedIfPatternMatches booleanValue="false"/&gt;
                    &lt;L7p:Regex stringValue="@@"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${auth_scheme}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="WWW-Authenticate"/&gt;
                    &lt;L7p:HeaderValue stringValue="${auth_scheme} error=&amp;quot;Duplicate access token&amp;quot;"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                    &lt;/L7p:AddHeader&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Add WWW-Authenticate header"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="401"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="ewogICJlcnJvciI6ImludmFsaWRfcmVxdWVzdCIsCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiRHVwbGljYXRlIGFjY2VzcyB0b2tlbiIKfQ=="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
                    &lt;L7p:ResponseStatus stringValue="401"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Check for duplicate access tokens"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="incoming_token"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="authorizationHeader"/&gt;
                    &lt;L7p:Regex stringValue="Bearer\s+(.*)"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${incoming_token[1]}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="params"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Bearer token in Authorization header"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${access_token}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="YWNjZXNzX3Rva2VuPSR7YWNjZXNzX3Rva2VufQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="params"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Bearer token in access_token parameter"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:CaptureVar stringValue="incoming_token"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="authorizationHeader"/&gt;
                    &lt;L7p:Regex stringValue="MAC\s+(.*)"/&gt;
                    &lt;L7p:Replacement stringValue=""/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:Regex&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAubWV0aG9kfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="request_http_method"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request_http_method}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="request_url"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${request_url}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="aHR0cF9tZXRob2Q9JHtyZXF1ZXN0X2h0dHBfbWV0aG9kfSZ1cmw9JHtyZXF1ZXN0X3VybH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="params"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="MAC token"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${auth_scheme}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="WWW-Authenticate"/&gt;
                    &lt;L7p:HeaderValue stringValue="${auth_scheme} error=&amp;quot;Invalid access token&amp;quot;"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                    &lt;/L7p:AddHeader&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Add WWW-Authenticate header"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="401"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="ewogICJlcnJvciI6ImludmFsaWRfcmVxdWVzdCIsCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiSW52YWxpZCBhY2Nlc3MgdG9rZW4iCn0="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
                    &lt;L7p:ResponseStatus stringValue="401"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Error"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Construct request parameter based on token type"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="========== Route to Authorization Server to validate the access token
                    =========="/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${params}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtwYXJhbXN9"/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="ValidateAccessTokenFormPostMsg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${oauth_ovp_server}/oauth/validation/validate/v2/token"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:CustomizeValue stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Name stringValue="authorization"/&gt;
                    &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="ValidateAccessTokenFormPostMsg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="validationResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Send authorization header and request parameters"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${params}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${oauth_ovp_server}/oauth/validation/validate/v2/token"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:CustomizeValue stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Name stringValue="authorization"/&gt;
                    &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="validationResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Send authorization header only"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${authorizationHeader}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${params}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtwYXJhbXN9"/&gt;
                    &lt;L7p:ContentType stringValue="application/x-www-form-urlencoded"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="ValidateAccessTokenFormPostMsg"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:CurrentSecurityHeaderHandling intValue="3"/&gt;
                    &lt;L7p:FailOnErrorStatus booleanValue="false"/&gt;
                    &lt;L7p:HttpMethod httpMethod="POST"/&gt;
                    &lt;L7p:ProtectedServiceUrl stringValue="${oauth_ovp_server}/oauth/validation/validate/v2/token"/&gt;
                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestHeaderRules&gt;
                    &lt;L7p:RequestMsgSrc stringValue="ValidateAccessTokenFormPostMsg"/&gt;
                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                    &lt;/L7p:RequestParamRules&gt;
                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                    &lt;L7p:item httpPassthroughRule="included"&gt;
                    &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                    &lt;/L7p:ResponseHeaderRules&gt;
                    &lt;L7p:ResponseMsgDest stringValue="validationResult"/&gt;
                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                    &lt;/L7p:HttpRoutingAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Send request parameters only"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue=""/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="validationResult"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/validation/result[text()='valid']"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${auth_scheme}"/&gt;
                    &lt;L7p:Expression2 stringValue=""/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Negated booleanValue="true"/&gt;
                    &lt;L7p:Operator operator="EMPTY"/&gt;
                    &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="WWW-Authenticate"/&gt;
                    &lt;L7p:HeaderValue stringValue="${auth_scheme} error=&amp;quot;Invalid request&amp;quot;"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                    &lt;/L7p:AddHeader&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Add WWW-Authenticate header"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="401"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Base64ResponseBody
                    stringValue="ewogICJlcnJvciI6ImludmFsaWRfcmVxdWVzdCIsCiAgImVycm9yX2Rlc2NyaXB0aW9uIjoiVmFsaWRhdGlvbiBlcnJvciIKfQ=="/&gt;
                    &lt;L7p:EarlyResponse booleanValue="true"/&gt;
                    &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
                    &lt;L7p:ResponseStatus stringValue="401"/&gt;
                    &lt;/L7p:HardcodedResponse&gt;
                    &lt;L7p:FalseAssertion/&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                    &lt;L7p:value stringValue="Check validation result and set returned values"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="========== Add global authorization rules here =========="/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="========== Get token information from response message =========="/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathClientId"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="validationResult"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/validation/client_key/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathOwner"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="validationResult"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/validation/resource_owner/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathScope"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="validationResult"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/validation/scope/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="xpathExpiration"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="validationResult"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                    &lt;L7p:Expression stringValue="/validation/expiration/text()"/&gt;
                    &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="s"/&gt;
                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Namespaces&gt;
                    &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt4cGF0aENsaWVudElkLnJlc3VsdH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="session.client_id"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt4cGF0aE93bmVyLnJlc3VsdH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="session.subscriber_id"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt4cGF0aFNjb3BlLnJlc3VsdH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="session.scope"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt4cGF0aEV4cGlyYXRpb24ucmVzdWx0fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="session.expires_at"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ExportVariables&gt;
                    &lt;L7p:ExportedVars stringArrayValue="included"&gt;
                    &lt;L7p:item stringValue="session.client_id"/&gt;
                    &lt;L7p:item stringValue="session.expires_at"/&gt;
                    &lt;L7p:item stringValue="session.scope"/&gt;
                    &lt;L7p:item stringValue="session.subscriber_id"/&gt;
                    &lt;/L7p:ExportedVars&gt;
                    &lt;/L7p:ExportVariables&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:Policy&gt;
                </l7:Resource>
            </l7:ResourceSet>
        </l7:Resources>
    </l7:Policy>
    <l7:Policy xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" guid="e1431c63-9d2c-4ba1-b254-8eb69f543da7"
               id="123961347" version="6">
        <l7:PolicyDetail folderId="123600909" guid="e1431c63-9d2c-4ba1-b254-8eb69f543da7" id="123961347" version="6">
            <l7:Name>OAuth2 Client Context Variables</l7:Name>
            <l7:PolicyType>Include</l7:PolicyType>
            <l7:Properties>
                <l7:Property key="revision">
                    <l7:LongValue>7</l7:LongValue>
                </l7:Property>
                <l7:Property key="soap">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:PolicyDetail>
        <l7:Resources>
            <l7:ResourceSet tag="policy">
                <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    &lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy"
                    xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NTRmMGM0NTUtNGQ4MC00MjFmLTgyY2EtOTE5NGRmMjQ4NTlk"/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_client_id"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c2NvcGVfdGVzdA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_scope"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="YTBmMjc0MmYtMzFjNy00MzZmLTk4MDItYjcwMTViOGZkOGU2"/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_client_secret"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression
                    stringValue="ZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFKOEFBQUExQ0FNQUFBQm9Rc2xhQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUFNQlFURlJGRkJBTWpJNk83cU9sYTI5dzV1Zm45TWpKNW1GZ3lNaklUMUpTNFR3dDFkZll0TGU0K2ZuNTgvVDBwNmluWFdObStlVGwvdno3K3YzK3E3cTgrdno1K3Uvdy9mbjd3TVBFNm9lSWdJU0cwZExTK2Z2OC9mei85dmo2Ny9Eem82R2ZWVnhmOS9qM3E2NncrZmYwdWJ1OW5xS2tSRUU5Mjl6ZHk4M092OEMrOWZYMTdlN3U2dXZyNHVQazVFeElkM3Q3cnEyclhsdFhob1NCOTlqYWxaaVozK0RnTHl3b1pXUmhzck95OGZIeG5aNmQrUGo3Ky96Ny9QejgvZjM5Ly8vL0FTRERZd0FBREZwSlJFRlVlTnJVV1d0N3Fqb1dOcUxGZWdGaEtCWjMyb3ExRmF1VTNZcHVXNU9zLy8rdlpxMGtJTFoyNW5ubXc1eHpjczYyR0lKNTg2NzdvZ1YvNzlINlIrQlRVa2twaFZENkd3ZWhGTWhBcWI4SlBnVUtFVWtKc0o0YzVvdWNBRXNoYVFJdjFWK1BUeGwwZDVPRXNZUWxneGZnZ1FqMXJQcHJFYllxOFFLSWFabDhac3RsMzJQTTVVRFFDSjhlZnprK2dKMlhNTmRNTGxuaW9aQVJtelFVL25VQXJYd2h6SkprRUFPWElsQ1NpMFhDc2tmU1FRV2FRdmovQU5TN3lPLzJ5L2w2L3JuUlZxSUN4QU44VTVZZFE2Mm05MzlDK0RQdjZvZHJZd3ZmOFVrK0dpRW9kREN4aUJYQ1JGUzdUdDVmZHNqWGtKQTF5Sys3Zk45ZFdVeXF3bWVWdDlwVk5VZmwyaG9UeWpKUjM5YjRBbjR6ZmdRZWNhRUNycmdJT01MS0Z5eEp5c2thMFpQelVlZG4vV0kwcCswMUxERGJHTnRYcCtYcXpOcVVPVTBOVDlvSitSV2ZpdHV2dCtNSXRTOEt3b0NneU0ycUtEeDN4Wnl5bjJvejF0NVFuVW5OL0RaODIxNXZKSnZFV0FkbXI0U3NWMVdjNmNmbDJZTk4rVzZ2cnErdjJ6Y2hpQUFDQkRQS21EUFFkemJNV1d4Q2E4b25RS0EzcktmTS9xZlAwMTF6Tkh0RG1tblpQTVdGSVdtYzQzdEZmTmRYM1VjRmtlQXlMLzJuRDJKTkJnQnVrVXp2eUpJMWg2cnk1cktHSXB1QURBejdXWCtUTmI3R0FVUURkUFZEMVZKUUpuaForUnA4MTllM04xeHk5VkVrNVAwNDJvdFFBbDZlbkRrb0RSQXNDRU9MYXNySlRndWhUNitqbzdUWDFhelFmNFRHWlNjYTRQUTU2a2R3djIvODRYZ2RjeDUwbGdvRWo1UUkwRjRvWjFnK1FZeGlGeUFxSGFIZmpYQS9YQjFvV0lUOWx4aUs0UkNQUkVpRytJbi82VU5pcU1UdmRGZlBSMUpHMFRFMGl5SzlEbjlIeFhFVTR3aGlFZUFmeGIvcW54NVhZWWg3eGZnTENwOElTSnNEY3g2QkY0cHpmVmJBMDIwbXJqdEZueVJCUnFBem5rN211bTZXNHhsZThNSmRJejFDYmFhdTJ4OUJ4NjFHSDJkaDZtYjZ5M1N0UWg0ckNBS1EzZWJZM3NBRitlSVk4NUE4RFI1SUJzaElFQWp0VzVSd2wwWlFXa1lJOGRCcXRaNUJLNmJVMGdjSFovYXROL1FQblI1ZUZTK2tSQVZPRmkvd29PL1J2ejhZbCtEWmZtM3RlMmlISVc3QjFYVnp2SGJEaS95aEZWK2hHb1lTTXhqRUZSTmF5RXRuRUhvKzJ5bEpISklhQ2ZodDhCRzE1TkFGYk41b3cxYXZBeXFsbTYwbEt1OEhJVDBBZkxhcThmWUlCcDhkZTQraUtqNy9CUjljMGovRTE2VzdiVkE4TkJvTkw1N2ordzY4N0o1OGI0U1NESVcyWTgyZkVsYW5VVTFYWnRQbkZhcHBoNjQvWHdBOFpNbjVBTU5mK2M3ZTM3MVVDSTN2YzVNUGVuUWdDREVxeFB3THZxYitqYS9POGFFZWJrbW1LQW51RnI1UCtBUjZ4YVNZWUxRaDhVckxYeWhqUEFVRlFYaEhibWkvZHpUOWlPN3UwUXZRaEljK3ZTUWdqeDg0Um1TYWhPODNia0R3bjljUTQxdzRyZ2FCdVkwYjhnMzU3VmQ4dU9JUmpaYm56UEVOdmdDTmVuTnd5ZzBRcTVhL29ISUpTajJpZUowUzkzdkRmV0ZEQ0E1OGluL2VkaEJxL25xQkRuYlM2dDhEOHV6aXhmT0c0L05oSFN2YlJNOFlnbVorZFZMQUd0LzE3WmhEdi9CbkJoODZBUHo1ZE1reXJyUmJOUHdKVFNaNkRNaHdLNVlqWDg5b3dVSHM2ZHVPNFNrdy9Kbjl1Y1huSWI0SjRmc0FOR0VWb1pESm14RzgxMjNZOUMraENydXYzL0JkdDJIMGFkQVJmeEtmUnArNVNWeUk1Y2wrY1RkQjV3ZTJiKzEvRTZEOWdxeDZRK2I1WU9oRFFNVGZjN2JDZ1c2SFcvbUNodjJHZ3RHdW1ZZGhEQVRrdFJ0RXZKRWZTQjZxN2UwM2ZGZmp6RG5oRTlhcFQzZEEvcmppTDR6STV3aUFQN2hUcmpjc0tPT1J6THFRMytTQXRQM3VuMmxNSTJudy9mbjhMRWo5TWx3ZUNSUFpqQ1cwWTJrVEppdGZqQUxoWS9mcUM3N3I3cjhxZUFaZmhQQW1aWkxCaVQvaVRwQjFrTVcrcmFhRXFrY2lWNXBBUTU4dy9Ka3hpV1hsWDNERjNza3BCZFJueEdnZjNock5EN2hzK0JkU2QxU3Vtelp5MnozRDE2dncvUUU4STBELzA1bjFQQXh6dGYvajJqdEw3VWlJSUdKa2lSSU40WDFQQUI2R1FFNUs4L2RlRk1YN0xsREd2enkvMFdjUG5hTkdSd2xEWlJ0WWFEVGxpeXJMTWQ1Q3VHMjNiN1lYOFNVb1Njam54V3ptOTd3WGltOE4vVk5HdkxYSEpjOFJDbTNDaUpYSU1mWUw2VXVheGp3eS9MSGMxZkx0RThIRzU0KzE4aW5LUTRNbVBzenQwZFBGK2lxK3VvVFB4ZmpxTW0zTVBlOE8vVjNGWDJneXVnOHl4SUl4UmtFRXlaYWhnais0T3h1UlB6SDhXZnNsYVZuNzBDSG5YYXVyVHFpTThtbnllTlN3RDFRQml2d2l4clNGZDcvam15VnBBSzQxRm8xUFdQNVVxRDBnTFBhMEVZNFZUYWU2aEhGSXZLbkJaL2pEQ2dLTFF5bXMvd1ByZGloQ2toQm81NnNiRENka0VHZjhZZFdHa2lKRjRnRzBYOC94emZ3eWg3aFQyWExQTzBKdHY1WVNuUVo0cEFOOUNyZ1paZUVWUHZMaFRmOEgxbjdKLytrZnljSDRlRTFmbHhKeXJrQis2VjloMnNTeCtFQlhPQjUzYnh2NFpuNHlXT2FqeDNrbDZwbEhuR2orOWg2TmgxeW16OXBSVU5xRlNQY01pQTV5enArMDF1cmZzMTd0ZFd6OGZiTHhBLzJsRHVOd280MGprczJtU3V0VTZtRG1URG5WemRWcmU5dStzdmhtdnZQVVh6NFZnNGlkOE4wUkVPOWtFQWZsSWxYRm1xcGxVWWxNMXZnSWEzbGF2UmlxbXIvOGp6a05LVW5RTmRxbi9TQ2MxUittcHFDR1VCRHIvS1c3dlgzRnMweDhoMlg1d08vTkhGWGpRL3NkcGNUZm5nYjVrQldVZVBFQU9rMlk0UHh6U2ljb2FKS3VVT0c4bGxtTS8wK0dFdE9HdmNhWE1wenlYMHluZ3FUV0JhbWFOWHFyV1ZoVGJoZFYrY3YydHN0SGswV2VKYVNFRFh5enczcmFRVmY0enFyUmg5LzRpVjZQV09zOHZMT3lReHdjR0h2UGhwVHVZM1JPNnRVN3hQS0F0NmFVUnl3WnJrWUZKSXNqbVcyMXg2L0x0N1ArcVJKWW5NZU4vQVhMOUE3cnpVejhxUERObkt6ajV1ZGRFdk1sVWpyUHRFN0VGbUFxTWdBYlExaDY4RGpxdEZxYngrc1d6aHRtRFh3cUNNaUV1NmZ3aXlRVnZTcStXWHl6MlFCMkIrTEtWbUttRU1NTHJuUkNxNGVlVjFVUlo1SWNrNGNOVlpYUm1wdkNya1QrWGcyK1FGN0doM2VVaWtVamZ3bEdaZVdnVC9KOXV0ZG5yd0RVdjYrTE9BTkdhbmRXTFJDbnNyRytQQU5KZzRKZXQ5M3Uzb1JWTCtYY1BrQjdIUlh3NklmOFJScDhSY1loRXVlbmw2cXVjeFZ0VkpkUnBxa3RxNlU2c2JYek5xTFY0QU9qY3FpMVhQM1V2MGZwWWhGNk9UOXdPT0Z6RGltRlZqazhVcDBicFZUQTRpWjNSNUpvZEF4K0hkRkRpU2lTUjhRcG96VDlGUVJCTk1SU04rRGg4VTVFRkFXR3VCekw2V0g4SzZhMVE0VEwwNVR1eWFvcDhnTSt2QkZFUCtDREo5OHZONkh1RSswV2g4T3FBNXY1WVhHUHoweFlPVDFDdXNxZ1AwbGgyQi9rbzhNYWZVSEdtSnRpZGIvS0tZUGVlR3lPdFFFZkxkQzhNZHhQSnFnb3kvbkJmWUcwWHpJWHF0YkRqL3pwTkNZZS81Qy9qQmI1a0pPU1NSaE5ITFlaUWQ5M2Q2bU1YU2YzaWh4R3lSTjRDVzQybUQzZCt6bUl6TzlQL0NuQW9NREFBdXRQdGlreGN6M2kyckpjQXpCcW9oeWNhVDZFRGZ1OTlEZXFxbVIreEVmbExiK1l2emdUVUVPdEtoVExZVmVVdUdYZnozTEVWeWFqSFRMelViQk9pZWxLT3VnbGZjVEg1OG5IeGhta2lNOUZCOVF2NW1yaGRPQll6SWZySGFZYkxFRW5PaSttRzB4ajNwUHB2UWhNRStxODdkbjYwbHNOd2t2NWk1OGNkWjlBNkVSWGFud0srck9rM0tpWUpSK2sxS09rR0NRTStUdjRIbk55R1RJMnN2Z3lpQWdmVEJEMjBUOTBQcjBQTVBnR2ZuTEF4RzdKL09RbE1EbSsrdkg5Rm5WYjBJdUYzZXV2K1F1N1Y5YWJtVVROOERkMThpT1h2eGc3NWhnQzdvc3lmU0w1em90K3o4bTVtaWZIa2JNWUlqNFVNdlFSeU1LWDZxN3crSXAxb09KdmczWGF4MlM5OUplYUFWQS82eCttVmhKQkJ2RzJtYi80c3dJMW1Tby8reFlNUThUU1liaDAybU5QVXhDVEdmTFdnWHVuaEtkaUJFUFBPUmIrTHBEOTJaejVmZFF4UHlrbmNGODZpK1FUa3dYUFdiQUNvU1dvc3pDZmxkNE9Pc25ud1YvYlYxZy82eCtsRFFGd3JLWnZ1bFgrNHZkUUhoRmd1b2poSmJEOVF6endsRlIrc01KQUY5MjUyU1RIVU8vMlZUOGJ3bkE1Z2VYaVE4bzBjMWZMUndXNzFXcUI4WVk2V0dqdFlqM0pwdTRJSUtPUDNXRGlidkNSbGRzWDVvM1FmM2gvYVhxak9zaUhZNnhEWDhlVDNxeGMzZ0hJWm9lVGFFeUgxSEJMMHhTTkJzUkl0NmlGYWVoSmdTRXNwVGNWS2swcHRBNXhXVXFDR3cxMTJpVkcxQWRVcVY2THR5aDFlVWxCeVV0dnFsb1hYaEZ3VXNSZzI5N0c2eW1aMTZtQnJPb0dzbW5PNkI2TnN2MXpxQnZRMHJRc2RVTmNMOU9tcFV4SHh4N1VObHUxMWxENm9NeUMvL2IrVjNjZmpSMURhTDIyUE85aU54dmV0c2RyTzdLNnF5eDBGMWlhQnJNUTByYVZxLzYxZmxiVTRidHVzWXZMYi9rdXZKOXVOT09wQ1JKRWxjOVU5ZnNNZVhwNWFMU21sbjdWZjY5YjMrWTFudTFhYXlhMW00TnE3YWxsRDVjUS9qUGVuLzk5eDc4RkdBQ0Q5Z1pIaXo2ZUZnQUFBQUJKUlU1RXJrSmdnZz09"/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_server_logo"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="L2F1dGgvb2F1dGgvdjIvdG9rZW4="/&gt;
                    &lt;L7p:VariableToSet stringValue="oauth2_token_path"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ExportVariables&gt;
                    &lt;L7p:ExportedVars stringArrayValue="included"&gt;
                    &lt;L7p:item stringValue="oauth2_client_id"/&gt;
                    &lt;L7p:item stringValue="oauth2_client_secret"/&gt;
                    &lt;L7p:item stringValue="oauth2_scope"/&gt;
                    &lt;L7p:item stringValue="oauth2_server_logo"/&gt;
                    &lt;L7p:item stringValue="oauth2_token_path"/&gt;
                    &lt;/L7p:ExportedVars&gt;
                    &lt;/L7p:ExportVariables&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:Policy&gt;
                </l7:Resource>
            </l7:ResourceSet>
        </l7:Resources>
    </l7:Policy>
    <l7:Policy xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" guid="d1d995ab-c7c8-4354-b005-ec3deeedc3a5"
               id="123961345" version="4">
        <l7:PolicyDetail folderId="123600896" guid="d1d995ab-c7c8-4354-b005-ec3deeedc3a5" id="123961345" version="4">
            <l7:Name>Token Lifetime Context Variables</l7:Name>
            <l7:PolicyType>Include</l7:PolicyType>
            <l7:Properties>
                <l7:Property key="revision">
                    <l7:LongValue>5</l7:LongValue>
                </l7:Property>
                <l7:Property key="soap">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:PolicyDetail>
        <l7:Resources>
            <l7:ResourceSet tag="policy">
                <l7:Resource type="policy">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
                    &lt;wsp:Policy xmlns:L7p=&quot;http://www.layer7tech.com/ws/policy&quot; xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2002/12/policy&quot;&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;MzYwMA==&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;oauth2_access_token_lifetime_sec&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;MA==&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;oauth_v1_consumer_key_lifetime_m&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;ODY0MDA=&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;oauth_v1_access_token_lifetime_s&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;MzAw&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;oauth_v1_request_token_lifetime_s&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;NjAw&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;oauth2_auth_code_lifetime_sec&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;MzYwMA==&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;oauth2_access_token_lifetime_sec&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;NjA0ODAw&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;oauth2_refresh_token_lifetime_sec&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ExportVariables&gt;
                    &lt;L7p:ExportedVars stringArrayValue=&quot;included&quot;&gt;
                    &lt;L7p:item stringValue=&quot;oauth2_access_token_lifetime_sec&quot;/&gt;
                    &lt;L7p:item stringValue=&quot;oauth2_auth_code_lifetime_sec&quot;/&gt;
                    &lt;L7p:item stringValue=&quot;oauth2_refresh_token_lifetime_sec&quot;/&gt;
                    &lt;L7p:item stringValue=&quot;oauth_v1_access_token_lifetime_s&quot;/&gt;
                    &lt;L7p:item stringValue=&quot;oauth_v1_consumer_key_lifetime_m&quot;/&gt;
                    &lt;L7p:item stringValue=&quot;oauth_v1_request_token_lifetime_s&quot;/&gt;
                    &lt;/L7p:ExportedVars&gt;
                    &lt;/L7p:ExportVariables&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:Policy&gt;
                </l7:Resource>
            </l7:ResourceSet>
        </l7:Resources>
    </l7:Policy>
    <l7:Policy xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" guid="585c3a3d-8fd7-4337-8d91-46846bfc4194"
               id="123731968" version="0">
        <l7:PolicyDetail folderId="123600896" guid="585c3a3d-8fd7-4337-8d91-46846bfc4194" id="123731968" version="0">
            <l7:Name>GenerateOAuthToken</l7:Name>
            <l7:PolicyType>Include</l7:PolicyType>
            <l7:Properties>
                <l7:Property key="revision">
                    <l7:LongValue>15</l7:LongValue>
                </l7:Property>
                <l7:Property key="soap">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:PolicyDetail>
        <l7:Resources>
            <l7:ResourceSet tag="policy">
                <l7:Resource type="policy">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
                    &lt;wsp:Policy xmlns:L7p=&quot;http://www.layer7tech.com/ws/policy&quot; xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2002/12/policy&quot;&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue=&quot;Poilcy issues tokens and token secrets&quot;/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue=&quot;Input: token_type=urt|art|at|ck|ac|at_2|rft&quot;/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue=&quot;urt=unauthorized request token, art=authorized request token,
                    at=access token, ck=client_key&quot;/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue=&quot;ac=authorization_code, at_2=access_token for oauth 2.0,
                    rft=refresh_token&quot;/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue=&quot;Output: genToken, genSecret, genExpiration&quot;/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue=&quot;Configurable values: lifetime for tokens&quot;/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;L7p:Include&gt;
                    &lt;L7p:PolicyGuid stringValue=&quot;d1d995ab-c7c8-4354-b005-ec3deeedc3a5&quot;/&gt;
                    &lt;/L7p:Include&gt;
                    &lt;wsp:OneOrMore wsp:Usage=&quot;Required&quot;&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue=&quot;false&quot;/&gt;
                    &lt;L7p:Expression1 stringValue=&quot;${token_type}&quot;/&gt;
                    &lt;L7p:Operator operatorNull=&quot;null&quot;/&gt;
                    &lt;L7p:Predicates predicates=&quot;included&quot;&gt;
                    &lt;L7p:item regex=&quot;included&quot;&gt;
                    &lt;L7p:Pattern stringValue=&quot;urt|art&quot;/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;&quot;/&gt;
                    &lt;L7p:DataType variableDataType=&quot;dateTime&quot;/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=&quot;${oauth_v1_request_token_lifetime_s}&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;expiration&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue=&quot;included&quot;&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue=&quot;RIGHT.COMMENT&quot;/&gt;
                    &lt;L7p:value stringValue=&quot;unauthorized/ authorized request token&quot;/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue=&quot;${token_type}&quot;/&gt;
                    &lt;L7p:Expression2 stringValue=&quot;at&quot;/&gt;
                    &lt;L7p:Predicates predicates=&quot;included&quot;&gt;
                    &lt;L7p:item binary=&quot;included&quot;&gt;
                    &lt;L7p:RightValue stringValue=&quot;at&quot;/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;&quot;/&gt;
                    &lt;L7p:DataType variableDataType=&quot;dateTime&quot;/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=&quot;${oauth_v1_access_token_lifetime_s}&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;expiration&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue=&quot;included&quot;&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue=&quot;RIGHT.COMMENT&quot;/&gt;
                    &lt;L7p:value stringValue=&quot;access token&quot;/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue=&quot;${token_type}&quot;/&gt;
                    &lt;L7p:Expression2 stringValue=&quot;ck&quot;/&gt;
                    &lt;L7p:Predicates predicates=&quot;included&quot;&gt;
                    &lt;L7p:item binary=&quot;included&quot;&gt;
                    &lt;L7p:RightValue stringValue=&quot;ck&quot;/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage=&quot;Required&quot;&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue=&quot;false&quot;/&gt;
                    &lt;L7p:Expression1 stringValue=&quot;${oauth_v1_consumer_key_lifetime_m}&quot;/&gt;
                    &lt;L7p:Expression2 stringValue=&quot;0&quot;/&gt;
                    &lt;L7p:Operator operator=&quot;GT&quot;/&gt;
                    &lt;L7p:Predicates predicates=&quot;included&quot;&gt;
                    &lt;L7p:item binary=&quot;included&quot;&gt;
                    &lt;L7p:CaseSensitive booleanValue=&quot;false&quot;/&gt;
                    &lt;L7p:Operator operator=&quot;GT&quot;/&gt;
                    &lt;L7p:RightValue stringValue=&quot;0&quot;/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;&quot;/&gt;
                    &lt;L7p:DataType variableDataType=&quot;dateTime&quot;/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=&quot;${oauth_v1_consumer_key_lifetime_m}&quot;/&gt;
                    &lt;L7p:DateOffsetField intValue=&quot;12&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;expiration&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;MA==&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;expiration.millis&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue=&quot;included&quot;&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue=&quot;RIGHT.COMMENT&quot;/&gt;
                    &lt;L7p:value stringValue=&quot;client_key&quot;/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue=&quot;${token_type}&quot;/&gt;
                    &lt;L7p:Expression2 stringValue=&quot;ac&quot;/&gt;
                    &lt;L7p:Predicates predicates=&quot;included&quot;&gt;
                    &lt;L7p:item binary=&quot;included&quot;&gt;
                    &lt;L7p:RightValue stringValue=&quot;ac&quot;/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;&quot;/&gt;
                    &lt;L7p:DataType variableDataType=&quot;dateTime&quot;/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=&quot;${oauth2_auth_code_lifetime_sec}&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;expiration&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue=&quot;included&quot;&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue=&quot;RIGHT.COMMENT&quot;/&gt;
                    &lt;L7p:value stringValue=&quot;authorization_code&quot;/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue=&quot;${token_type}&quot;/&gt;
                    &lt;L7p:Expression2 stringValue=&quot;at_2&quot;/&gt;
                    &lt;L7p:Predicates predicates=&quot;included&quot;&gt;
                    &lt;L7p:item binary=&quot;included&quot;&gt;
                    &lt;L7p:RightValue stringValue=&quot;at_2&quot;/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;&quot;/&gt;
                    &lt;L7p:DataType variableDataType=&quot;dateTime&quot;/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=&quot;${oauth2_access_token_lifetime_sec}&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;expiration&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue=&quot;included&quot;&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue=&quot;RIGHT.COMMENT&quot;/&gt;
                    &lt;L7p:value stringValue=&quot;access token oauth 2.0&quot;/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue=&quot;${token_type}&quot;/&gt;
                    &lt;L7p:Expression2 stringValue=&quot;rft&quot;/&gt;
                    &lt;L7p:Predicates predicates=&quot;included&quot;&gt;
                    &lt;L7p:item binary=&quot;included&quot;&gt;
                    &lt;L7p:RightValue stringValue=&quot;rft&quot;/&gt;
                    &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;&quot;/&gt;
                    &lt;L7p:DataType variableDataType=&quot;dateTime&quot;/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=&quot;${oauth2_refresh_token_lifetime_sec}&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;expiration&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue=&quot;included&quot;&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue=&quot;RIGHT.COMMENT&quot;/&gt;
                    &lt;L7p:value stringValue=&quot;refresh token oauth 2.0&quot;/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue=&quot;included&quot;&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue=&quot;RIGHT.COMMENT&quot;/&gt;
                    &lt;L7p:value stringValue=&quot;Set the lifetime for the token&quot;/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:UUIDGenerator&gt;
                    &lt;L7p:AssertionComment assertionComment=&quot;included&quot;&gt;
                    &lt;L7p:Properties mapValue=&quot;included&quot;&gt;
                    &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue=&quot;RIGHT.COMMENT&quot;/&gt;
                    &lt;L7p:value stringValue=&quot;Generate the token and the secret&quot;/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Quantity stringValue=&quot;2&quot;/&gt;
                    &lt;L7p:TargetVariable stringValue=&quot;tokenSecret&quot;/&gt;
                    &lt;/L7p:UUIDGenerator&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;JHt0b2tlblNlY3JldFswXX0=&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;genToken&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;JHt0b2tlblNlY3JldFsxXX0=&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;genSecret&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;JHtleHBpcmF0aW9uLm1pbGxpc30=&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;genExpiration&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ExportVariables&gt;
                    &lt;L7p:ExportedVars stringArrayValue=&quot;included&quot;&gt;
                    &lt;L7p:item stringValue=&quot;genExpiration&quot;/&gt;
                    &lt;L7p:item stringValue=&quot;genSecret&quot;/&gt;
                    &lt;L7p:item stringValue=&quot;genToken&quot;/&gt;
                    &lt;/L7p:ExportedVars&gt;
                    &lt;/L7p:ExportVariables&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:Policy&gt;
                </l7:Resource>
            </l7:ResourceSet>
        </l7:Resources>
    </l7:Policy>
    <l7:Policy xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" guid="f0eb1f7b-392b-40a4-9f4f-46d00ffad3d3"
               id="123961351" version="2">
        <l7:PolicyDetail folderId="123600896" guid="f0eb1f7b-392b-40a4-9f4f-46d00ffad3d3" id="123961351" version="2">
            <l7:Name>OAuth Client Token Store Context Variables</l7:Name>
            <l7:PolicyType>Include</l7:PolicyType>
            <l7:Properties>
                <l7:Property key="revision">
                    <l7:LongValue>3</l7:LongValue>
                </l7:Property>
                <l7:Property key="soap">
                    <l7:BooleanValue>false</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:PolicyDetail>
        <l7:Resources>
            <l7:ResourceSet tag="policy">
                <l7:Resource type="policy">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
                    &lt;wsp:Policy xmlns:L7p=&quot;http://www.layer7tech.com/ws/policy&quot; xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2002/12/policy&quot;&gt;
                    &lt;wsp:All wsp:Usage=&quot;Required&quot;&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;aHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0Mw==&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;oauth_tokenstore_server&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=&quot;aHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0Mw==&quot;/&gt;
                    &lt;L7p:VariableToSet stringValue=&quot;oauth_clientstore_server&quot;/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;/wsp:Policy&gt;
                </l7:Resource>
            </l7:ResourceSet>
        </l7:Resources>
    </l7:Policy>
</enumeration>
