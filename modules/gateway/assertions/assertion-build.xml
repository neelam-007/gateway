<?xml version="1.0" encoding="UTF-8"?>
<project>
    <!--
      This is the common assertion module build file. It is included into each
      assertion modules build.xml.

      Do not invoke it directly.
    -->
    <property name="moduleName" value="${ant.project.name}"/>
    <property name="moduleFileExtension" value="aar"/>
    <property name="module.package.jar.disabled" value="true"/>
    <property name="module.compile.optimize" value="on"/>
    <property name="module.idea.dependencies.scope" value="PROVIDED"/>
    <property name="jar.sign.pattern" value="*.${moduleFileExtension}"/>

    <property name="src.root" value="../../../../"/>

    <import file="../../../etc/build/build-common.xml"/>

    <target name="package.custom.post" depends="-aar, -clientJar"/>

    <target name="-init">
        <property name="package.classes.dir" value="${classes.main.dir}"/>
    </target>
    <!-- Find the assertions for this module if not declared -->
    <target name="-detect" unless="moduleAssertionList" depends="compile,-init">
        <pathconvert property="moduleAssertionList" pathsep=" " setonempty="false">
            <path>
                <fileset dir="build/classes">
                    <include name="**/*Assertion.class"/>
                    <exclude name="**/console/**/*"/>
                    <exclude name="**/client/**/*"/>
                    <exclude name="**/server/**/*"/>
                </fileset>
            </path>
            <chainedmapper>
                <mapper type="regexp" from=".*[/\\]build[/\\]classes[/\\](.*)" to="\1"/>
                <packagemapper from="*.class" to="*"/>
            </chainedmapper>
        </pathconvert>
        <fail unless="moduleAssertionList">Unable to detect any assertion classes, please declare assertions using the moduleAssertionList property.</fail>
        <echo level="info">Detected assertions: ${moduleAssertionList}</echo>
    </target>
    <target name="-detect-client" unless="clientAssertionList" depends="compile,-init">
        <pathconvert property="clientAssertionList" pathsep=" " setonempty="false">
            <path>
                <fileset dir="build/classes">
                    <include name="**/client/Client*Assertion.class"/>
                </fileset>
            </path>
            <chainedmapper>
                <mapper type="regexp" from=".*[/\\]build[/\\]classes[/\\](.*)" to="\1"/>
                <packagemapper from="*.class" to="*"/>
            </chainedmapper>
        </pathconvert>
        <echo level="info">Detected client assertions: ${clientAssertionList}</echo>
    </target>

    <!-- Create AAR file -->
    <target name="-aar" depends="compile, -detect">
        <property name="privateLibraries" value=""/>

        <!-- Build indexes -->
        <mkdir dir="${package.classes.dir}/AAR-INF"/>
        <fileset id="aar.assertion.fileset" dir="${package.classes.dir}" casesensitive="yes">
            <exclude name="**/console/**/*"/>
            <exclude name="**/client/**/*"/>
            <exclude name="**/server/**/*"/>
        </fileset>
        <pathconvert property="aar.assertion.fileset.property" pathsep="${line.separator}" dirsep="/" refid="aar.assertion.fileset">
            <map from="${package.classes.dir}" to=""/>
        </pathconvert>
        <echo file="${package.classes.dir}/AAR-INF/assertion.index">${aar.assertion.fileset.property}</echo>
        <replaceregexp file="${package.classes.dir}/AAR-INF/assertion.index" match="^[/\\]" replace="" byline="true"/>
        <fileset id="aar.console.fileset" dir="${package.classes.dir}" casesensitive="yes">
            <include name="**/console/**/*"/>
        </fileset>
        <pathconvert property="aar.console.fileset.property" pathsep="${line.separator}" dirsep="/" refid="aar.console.fileset">
            <map from="${package.classes.dir}" to=""/>
        </pathconvert>
        <echo file="${package.classes.dir}/AAR-INF/console.index">${aar.console.fileset.property}</echo>
        <replaceregexp file="${package.classes.dir}/AAR-INF/console.index" match="^[/\\]" replace="" byline="true"/>
        <jar destfile="build/${moduleName}.${moduleFileExtension}" duplicate="fail">
            <manifest>
                <attribute name="Specification-Title" value="ModularAssertion"/>
                <attribute name="Specification-Version" value="3.7.0"/>
                <attribute name="Specification-Vendor" value="${build.vendor}"/>
                <attribute name="Specification-Vendor-Id" value="${build.vendor.id}"/>
                <attribute name="Implementation-Title" value="${moduleName}"/>
                <attribute name="Implementation-Version" value="${build.version}"/>
                <attribute name="Implementation-Vendor" value="${build.vendor}"/>
                <attribute name="Implementation-Vendor-Id" value="${build.vendor.id}"/>
                <attribute name="Built-By" value="${build.user}"/>
                <attribute name="Build-Jdk" value="${java.version}"/>
                <attribute name="Build-Timestamp" value="${build.timestamp}" />
                <attribute name="ModularAssertion-List" value="${moduleAssertionList}"/>

                <!-- space-separated list of filename patterns, with simple * and ? support, ie:  "foov?-L7*.jar blatch*.jar" -->
                <attribute name="ModularAssertion-Private-Libraries" value="${privateLibraries}"/>
            </manifest>

            <fileset dir="${package.classes.dir}"/>
            <zipfileset prefix="AAR-INF/lib" dir="build/dependency"/>
        </jar>
    </target>

    <!-- Create client JAR file -->
    <target name="-clientJar" if="clientAssertionList" depends="compile, -detect, -detect-client">
        <echo>Building client jar</echo>
        <jar destfile="build/${moduleName}-client.${moduleFileExtension}" duplicate="fail">
            <manifest>
                <attribute name="Specification-Title" value="ModularAssertion"/>
                <attribute name="Specification-Version" value="3.7.0"/>
                <attribute name="Specification-Vendor" value="${build.vendor}"/>
                <attribute name="Specification-Vendor-Id" value="${build.vendor.id}"/>
                <attribute name="Implementation-Title" value="${moduleName}"/>
                <attribute name="Implementation-Version" value="${build.version} ${build.timestamp}"/>
                <attribute name="Implementation-Vendor" value="${build.vendor}"/>
                <attribute name="Implementation-Vendor-Id" value="${build.vendor.id}"/>
                <attribute name="Built-By" value="${build.user}"/>
                <attribute name="Build-Jdk" value="${java.version}"/>
                <attribute name="Build-Timestamp" value="${build.timestamp}" />
                <attribute name="ModularAssertion-List" value="${moduleAssertionList}"/>
            </manifest>

            <fileset dir="${package.classes.dir}">
                <include name="**/*"/>
                <exclude name="**/console"/>
                <exclude name="**/console/**/*"/>
                <exclude name="**/server"/>
                <exclude name="**/server/**/*"/>
            </fileset>
        </jar>
    </target>

</project>
