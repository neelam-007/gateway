<project name="GatewayManagementAssertion" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="privateLibraries" value="AAR-INF/lib/hibernate-validator-4.0.2.GA.jar
                                             AAR-INF/lib/layer7-gateway-api-5.3.jar
                                             AAR-INF/lib/layer7-policy-exporter-5.3.jar
                                             AAR-INF/lib/wiseman-1.0.jar"/>    

    <import file="../assertion-build.xml"/>

    <!--
      Override compile-main-resources and add dependency on WSDL generation
    -->
    <target name="compile-main-resources" depends="common.compile-main-resources, compile-tools, generate-wsdl, generate-javadoc, generate-wadl, generate-rest-docs"/>

    <target name="compile-tools" depends="compile-main-java">
        <echo>Compiling tools for Gateway Management service</echo>

        <mkdir dir="${basedir}/build/tools"/>

        <!-- Classpath -->
        <ivy:resolve showprogress="false"
                     checkIfChanged="false"
                     log="quiet"
                     conf="compile"/>
        <ivy:cachepath pathid="gatewaymanagementassertion.tools.path.libs"/>
        <path id="gatewaymanagementassertion.tools.path">
            <pathelement location="${classes.main.dir}"/>
            <pathelement location="${basedir}/build/tools"/>
            <path refid="gatewaymanagementassertion.tools.path.libs"/>
            <path refid="extras.path.id"/>
        </path>

        <!-- Compile tools -->
        <javac debug="on"
               verbose="no"
               source="${module.compile.source}"
               target="${module.compile.target}"
               srcdir="${basedir}/tools"
               destdir="${basedir}/build/tools"
                >
            <classpath refid="gatewaymanagementassertion.tools.path"/>
        </javac>
    </target>

    <target name="generate-wsdl" depends="compile-tools,compile-main-java">
        <echo>Generating WSDL for Gateway Management service</echo>

        <property name="gatewaymanagementassertion.servicetemplate" value="${classes.main.dir}/com/l7tech/external/assertions/gatewaymanagement/server/serviceTemplate"/>
        <mkdir dir="${gatewaymanagementassertion.servicetemplate}"/>
        <mkdir dir="${basedir}/build/etc/wsdl"/>

        <java classname="com.l7tech.external.assertions.gatewaymanagement.tools.WsdlGenerator" classpathref="gatewaymanagementassertion.tools.path" failonerror="true">
            <arg value="${basedir}/build/etc/wsdl"/>
        </java>

        <xslt
            in="${basedir}/build/etc/wsdl/resources.xml"
            out="${basedir}/build/etc/wsdl/gateway-management-8_0.wsdl"
            style="${src.test.res.dir}/com/l7tech/external/assertions/gatewaymanagement/server/gateway-management-wsdl.xsl"
            />

        <copy todir="${gatewaymanagementassertion.servicetemplate}">
            <fileset dir="${basedir}/build/etc/wsdl">
                <include name="*.wsdl"/>
                <include name="*.xsd"/>
            </fileset>
        </copy>
    </target>

    <!-- This target generates the javadoc xml file that is used by Jersey to add java docs to the Jersey WADL -->
    <target name="generate-javadoc" depends="compile-tools">
        <echo>Generating Javadoc for REST Gateway Management service</echo>

        <property name="gatewayrestmanagementassertion.wadlFolder" value="${classes.main.dir}/com/l7tech/external/assertions/gatewaymanagement/server/rest/resource"/>
        <mkdir dir="${gatewayrestmanagementassertion.wadlFolder}"/>

        <property name="gatewaymanagementassertion.javadoc.build.dir" value="${basedir}/build/etc/javadoc"/>
        <mkdir dir="${gatewaymanagementassertion.javadoc.build.dir}"/>
        <path id="javadoc.src.path">
            <pathelement location="${src.main.java.dir}"/>
        </path>
        <path id="javadoc.class.path">
            <path refid="gatewaymanagementassertion.tools.path.libs"/>
            <path refid="gatewaymanagementassertion.tools.path"/>
        </path>
        <!-- Create the java doc -->
        <javadoc sourcepathref="javadoc.src.path"
                 classpathref="javadoc.class.path"
                 packagenames="com.l7tech.external.assertions.gatewaymanagement.server.rest.*"
                 defaultexcludes="yes"
                 version="true"
                 maxmemory="512m"
                 useexternalfile="yes"
                 failonerror="yes">
            <doclet name="org.glassfish.jersey.wadl.doclet.ResourceDoclet" pathref="javadoc.class.path">
                <param name="-output" value="${basedir}/build/etc/javadoc/resourcedoc.xml" />
                <param name="-processors" value="com.l7tech.external.assertions.gatewaymanagement.tools.L7DocProcessor" />
            </doclet>
        </javadoc>

        <!-- Move the javadoc to the classes directory so it get properly aar'd up -->
        <copy todir="${gatewayrestmanagementassertion.wadlFolder}">
            <fileset dir="${gatewaymanagementassertion.javadoc.build.dir}">
                <include name="*.xml"/>
            </fileset>
        </copy>
    </target>

    <!-- This target generates the javadoc xml file that is used by Jersey to add java docs to the Jersey WADL -->
    <target name="generate-wadl" depends="generate-javadoc">
        <echo>Generating WADL for Gateway Management service</echo>

        <mkdir dir="${basedir}/build/etc/wadl"/>

        <java classname="com.l7tech.external.assertions.gatewaymanagement.tools.WadlGenerator" classpathref="gatewaymanagementassertion.tools.path" failonerror="true">
            <arg value="${basedir}/build/etc/wadl"/>
        </java>
        <copy todir="${gatewayrestmanagementassertion.wadlFolder}">
            <fileset dir="${basedir}/build/etc/wadl">
                <include name="*.wadl"/>
            </fileset>
        </copy>
    </target>

    <!-- This target generates the html docs from the wadl -->
    <target name="generate-rest-docs" depends="generate-wadl">
        <echo>Generating Rest Doc for Gateway Management service</echo>

        <property name="gatewayrestmanagementassertion.restDocFolder" value="${classes.main.dir}/com/l7tech/external/assertions/gatewaymanagement/server/rest/doc"/>
        <mkdir dir="${gatewayrestmanagementassertion.restDocFolder}"/>

        <java classname="com.l7tech.external.assertions.gatewaymanagement.tools.DocBuilder" classpathref="gatewaymanagementassertion.tools.path" failonerror="true">
            <arg value="${basedir}/tools/com/l7tech/external/assertions/gatewaymanagement/tools/doccer.xsl"/>
            <arg value="${basedir}/build/etc/wadl/restAPI.wadl"/>
            <arg value="${basedir}/build/etc/wadl/restDoc.html"/>
        </java>
        <copy todir="${gatewayrestmanagementassertion.restDocFolder}">
            <fileset dir="${basedir}/build/etc/wadl">
                <include name="*.html"/>
            </fileset>
        </copy>
    </target>
</project>
