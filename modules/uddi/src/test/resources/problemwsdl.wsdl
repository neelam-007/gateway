<wsdl:definitions targetNamespace="http://schemas.xmlsoap.org/ws/2005/02/trust/wsdl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://schemas.xmlsoap.org/ws/2005/02/trust/wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wst="http://schemas.xmlsoap.org/ws/2005/02/trust" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://schemas.xmlsoap.org/ws/2005/02/trust" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">

      <xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" schemaLocation="http://ambuz2:8080/ssg/wsdl/oasis-200401-wss-wssecurity-secext-1.0.xsd?serviceoid=4882479&amp;servdocoid=5013516"/>
      <xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" schemaLocation="http://ambuz2:8080/ssg/wsdl/oasis-200401-wss-wssecurity-utility-1.0.xsd?serviceoid=4882479&amp;servdocoid=5013512"/>
      <xs:import namespace="http://schemas.xmlsoap.org/ws/2004/09/policy" schemaLocation="http://ambuz2:8080/ssg/wsdl/ws-policy.xsd?serviceoid=4882479&amp;servdocoid=5013517"/>
      <xs:import namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" schemaLocation="http://ambuz2:8080/ssg/wsdl/?serviceoid=4882479&amp;servdocoid=5013514"/>

      <!-- WS-Trust Section 5.1 -->

      <xs:element name="RequestSecurityToken" type="wst:RequestSecurityTokenType"/>
      <xs:complexType name="RequestSecurityTokenType">
        <xs:annotation>
          <xs:documentation>
            Actual content model is non-deterministic, hence wildcard. The following shows intended content model:

            <xs:element minOccurs="0" ref="wst:TokenType"/>
            <xs:element ref="wst:RequestType"/>
            <xs:element minOccurs="0" ref="wsp:AppliesTo"/>
            <xs:element minOccurs="0" ref="wst:Claims"/>

            <xs:element minOccurs="0" ref="wst:Entropy"/>
            <xs:element minOccurs="0" ref="wst:Lifetime"/>
            <xs:element minOccurs="0" ref="wst:AllowPostdating"/>
            <xs:element minOccurs="0" ref="wst:Renewing"/>
            <xs:element minOccurs="0" ref="wst:OnBehalfOf"/>
            <xs:element minOccurs="0" ref="wst:Issuer"/>
            <xs:element minOccurs="0" ref="wst:AuthenticationType"/>
            <xs:element minOccurs="0" ref="wst:KeyType"/>
            <xs:element minOccurs="0" ref="wst:KeySize"/>

            <xs:element minOccurs="0" ref="wst:SignatureAlgorithm"/>
            <xs:element minOccurs="0" ref="wst:Encryption"/>
            <xs:element minOccurs="0" ref="wst:EncryptionAlgorithm"/>
            <xs:element minOccurs="0" ref="wst:CanonicalizationAlgorithm"/>
            <xs:element minOccurs="0" ref="wst:ProofEncryption"/>
            <xs:element minOccurs="0" ref="wst:UseKey"/>
            <xs:element minOccurs="0" ref="wst:SignWith"/>
            <xs:element minOccurs="0" ref="wst:EncryptWith"/>
            <xs:element minOccurs="0" ref="wst:DelegateTo"/>

            <xs:element minOccurs="0" ref="wst:Forwardable"/>
            <xs:element minOccurs="0" ref="wst:Delegatable"/>
            <xs:element minOccurs="0" ref="wsp:Policy"/>
            <xs:element minOccurs="0" ref="wsp:PolicyReference"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>

          </xs:documentation>
        </xs:annotation>
        <xs:sequence>

          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
        </xs:sequence>
        <xs:attribute name="Context" type="xs:anyURI" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:complexType>

      <xs:element name="TokenType" type="xs:anyURI"/>

      <xs:element name="RequestType" type="wst:RequestTypeOpenEnum"/>

      <xs:simpleType name="RequestTypeOpenEnum">
        <xs:union memberTypes="wst:RequestTypeEnum xs:anyURI"/>
      </xs:simpleType>

      <xs:simpleType name="RequestTypeEnum">
        <xs:restriction base="xs:anyURI">
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/Issue"/>
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/Renew"/>
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/Cancel"/>

        </xs:restriction>
      </xs:simpleType>

      <!-- WS-Trust Section 5.2 -->
      <xs:element name="RequestSecurityTokenResponse" type="wst:RequestSecurityTokenResponseType"/>
      <xs:complexType name="RequestSecurityTokenResponseType">
        <xs:annotation>
          <xs:documentation>
            Actual content model is non-deterministic, hence wildcard. The following shows intended content model:

            <xs:element minOccurs="0" ref="wst:TokenType"/>

            <xs:element ref="wst:RequestType"/>
            <xs:element minOccurs="0" ref="wst:RequestedSecurityToken"/>
            <xs:element minOccurs="0" ref="wsp:AppliesTo"/>
            <xs:element minOccurs="0" ref="wst:RequestedAttachedReference"/>
            <xs:element minOccurs="0" ref="wst:RequestedUnattachedReference"/>
            <xs:element minOccurs="0" ref="wst:RequestedProofToken"/>
            <xs:element minOccurs="0" ref="wst:Entropy"/>
            <xs:element minOccurs="0" ref="wst:Lifetime"/>
            <xs:element minOccurs="0" ref="wst:Status"/>

            <xs:element minOccurs="0" ref="wst:AllowPostdating"/>
            <xs:element minOccurs="0" ref="wst:Renewing"/>
            <xs:element minOccurs="0" ref="wst:OnBehalfOf"/>
            <xs:element minOccurs="0" ref="wst:Issuer"/>
            <xs:element minOccurs="0" ref="wst:AuthenticationType"/>
            <xs:element minOccurs="0" ref="wst:Authenticator"/>
            <xs:element minOccurs="0" ref="wst:KeyType"/>
            <xs:element minOccurs="0" ref="wst:KeySize"/>
            <xs:element minOccurs="0" ref="wst:SignatureAlgorithm"/>

            <xs:element minOccurs="0" ref="wst:Encryption"/>
            <xs:element minOccurs="0" ref="wst:EncryptionAlgorithm"/>
            <xs:element minOccurs="0" ref="wst:CanonicalizationAlgorithm"/>
            <xs:element minOccurs="0" ref="wst:ProofEncryption"/>
            <xs:element minOccurs="0" ref="wst:UseKey"/>
            <xs:element minOccurs="0" ref="wst:SignWith"/>
            <xs:element minOccurs="0" ref="wst:EncryptWith"/>
            <xs:element minOccurs="0" ref="wst:DelegateTo"/>
            <xs:element minOccurs="0" ref="wst:Forwardable"/>

            <xs:element minOccurs="0" ref="wst:Delegatable"/>
            <xs:element minOccurs="0" ref="wsp:Policy"/>
            <xs:element minOccurs="0" ref="wsp:PolicyReference"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>

          </xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>

        </xs:sequence>
        <xs:attribute name="Context" type="xs:anyURI" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:complexType>

      <xs:element name="RequestedSecurityToken" type="wst:RequestedSecurityTokenType"/>
      <xs:complexType name="RequestedSecurityTokenType">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax"/>

        </xs:sequence>
      </xs:complexType>

      <!-- WS-Trust Section 5.3 -->
      <xs:element name="BinarySecret" type="wst:BinarySecretType"/>
      <xs:complexType name="BinarySecretType">
        <xs:simpleContent>
          <xs:extension base="xs:base64Binary">
            <xs:attribute name="Type" type="wst:BinarySecretTypeOpenEnum" use="optional"/>

            <xs:anyAttribute namespace="##other" processContents="lax"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>

      <xs:simpleType name="BinarySecretTypeEnum">
        <xs:restriction base="xs:anyURI">
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/AsymmetricKey"/>
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/SymmetricKey"/>

          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/Nonce"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="BinarySecretTypeOpenEnum">
        <xs:union memberTypes="wst:BinarySecretTypeEnum xs:anyURI"/>
      </xs:simpleType>


      <!-- WS-Trust Section 6.1 -->

      <xs:element name="Claims" type="wst:ClaimsType"/>
      <xs:complexType name="ClaimsType">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
        </xs:sequence>
        <xs:attribute name="Dialect" type="xs:anyURI" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:complexType>

      <xs:element name="Entropy" type="wst:EntropyType"/>
        <xs:complexType name="EntropyType">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:complexType>

      <xs:element name="Lifetime" type="wst:LifetimeType"/>

      <xs:complexType name="LifetimeType">
        <xs:sequence>
          <xs:element minOccurs="0" ref="wsu:Created"/>
          <xs:element minOccurs="0" ref="wsu:Expires"/>
        </xs:sequence>
      </xs:complexType>

      <!-- WS-Trust Section 6.2 -->
      <xs:element name="ComputedKey" type="wst:ComputedKeyOpenEnum"/>

      <xs:simpleType name="ComputedKeyEnum">
        <xs:restriction base="xs:anyURI">
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/CK/PSHA1"/>
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/CK/HASH"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="ComputedKeyOpenEnum">
        <xs:union memberTypes="wst:ComputedKeyEnum xs:anyURI"/>

      </xs:simpleType>

      <xs:element name="RequestedAttachedReference" type="wst:RequestedReferenceType"/>
      <xs:element name="RequestedUnattachedReference" type="wst:RequestedReferenceType"/>
      <xs:complexType name="RequestedReferenceType">
        <xs:sequence>
          <xs:element ref="wsse:SecurityTokenReference"/>
        </xs:sequence>
      </xs:complexType>

      <xs:element name="RequestedProofToken" type="wst:RequestedProofTokenType"/>
      <xs:complexType name="RequestedProofTokenType">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax"/>
        </xs:sequence>
      </xs:complexType>

      <!-- WS-Trust Section 6.3 -->
      <xs:element name="RequestSecurityTokenResponseCollection" type="wst:RequestSecurityTokenResponseCollectionType"/>

      <xs:complexType name="RequestSecurityTokenResponseCollectionType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" ref="wst:RequestSecurityTokenResponse"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:complexType>

      <!-- WS-Trust Section 6.4 -->
      <xs:element name="IssuedTokens" type="wst:RequestSecurityTokenResponseCollectionType"/>

      <!-- WS-Trust Section 7 -->
      <xs:element name="RenewTarget" type="wst:RenewTargetType"/>
      <xs:complexType name="RenewTargetType">
        <xs:sequence>
          <xs:any maxOccurs="1" minOccurs="1" namespace="##other"/>
        </xs:sequence>
      </xs:complexType>

      <xs:element name="AllowPostdating" type="wst:AllowPostdatingType"/>

      <xs:complexType name="AllowPostdatingType"/>

      <xs:element name="Renewing" type="wst:RenewingType"/>
      <xs:complexType name="RenewingType">
        <xs:attribute name="Allow" type="xs:boolean" use="optional"/>
        <xs:attribute name="OK" type="xs:boolean" use="optional"/>
      </xs:complexType>

      <!-- WS-Trust Section 8 -->
      <xs:element name="CancelTarget" type="wst:CancelTargetType"/>

      <xs:complexType name="CancelTargetType">
        <xs:sequence>
          <xs:any maxOccurs="1" minOccurs="1" namespace="##other"/>
        </xs:sequence>
      </xs:complexType>

      <xs:element name="RequestedTokenCancelled" type="wst:RequestedTokenCancelledType"/>
      <xs:complexType name="RequestedTokenCancelledType"/>

      <!-- WS-Trust Section 9 -->

      <xs:element name="Status" type="wst:StatusType"/>
      <xs:complexType name="StatusType">
        <xs:sequence>
          <xs:element name="Code" type="wst:StatusCodeOpenEnum"/>
          <xs:element minOccurs="0" name="Reason" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>

      <xs:simpleType name="StatusCodeEnum">

        <xs:restriction base="xs:anyURI">
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/status/valid"/>
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/status/invalid"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="StatusCodeOpenEnum">
        <xs:union memberTypes="wst:StatusCodeEnum xs:anyURI"/>
      </xs:simpleType>

      <!-- WS-Trust Section 10.2 -->
      <xs:element name="SignChallenge" type="wst:SignChallengeType"/>
      <xs:element name="SignChallengeResponse" type="wst:SignChallengeType"/>
      <xs:complexType name="SignChallengeType">
        <xs:sequence>
          <xs:element ref="wst:Challenge"/>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
        </xs:sequence>

        <xs:anyAttribute namespace="##any" processContents="lax"/>
      </xs:complexType>

      <xs:element name="Challenge" type="xs:string"/>


      <!-- WS-Trust Section 10.3 -->
      <xs:element name="BinaryExchange" type="wst:BinaryExchangeType"/>
      <xs:complexType name="BinaryExchangeType">
        <xs:simpleContent>

          <xs:extension base="xs:string">
            <xs:attribute name="ValueType" type="xs:anyURI" use="required"/>
            <xs:attribute name="EncodingType" type="xs:anyURI" use="required"/>
            <xs:anyAttribute namespace="##other" processContents="lax"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>

      <!-- WS-Trust Section 10.4 -->

      <xs:element name="RequestKET" type="wst:RequestKETType"/>
      <xs:complexType name="RequestKETType"/>

      <xs:element name="KeyExchangeToken" type="wst:KeyExchangeTokenType"/>
      <xs:complexType name="KeyExchangeTokenType">
        <xs:sequence>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
        </xs:sequence>
      </xs:complexType>

      <!-- WS-Trust Section 10.9 -->
      <xs:element name="Authenticator" type="wst:AuthenticatorType"/>
      <xs:complexType name="AuthenticatorType">
        <xs:sequence>
          <xs:element minOccurs="0" ref="wst:CombinedHash"/>
          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
      </xs:complexType>

      <xs:element name="CombinedHash" type="xs:base64Binary"/>

      <!-- WS-Trust Section 11.1 -->
      <xs:element name="OnBehalfOf" type="wst:OnBehalfOfType"/>
      <xs:complexType name="OnBehalfOfType">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax"/>
        </xs:sequence>
      </xs:complexType>

      <xs:element name="Issuer" type="wsa:EndpointReferenceType"/>

      <!-- WS-Trust Section 11.2 -->
      <xs:element name="AuthenticationType" type="xs:anyURI"/>

      <xs:element name="KeyType" type="wst:KeyTypeOpenEnum"/>
      <xs:simpleType name="KeyTypeEnum">
        <xs:restriction base="xs:anyURI">
          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/PublicKey"/>

          <xs:enumeration value="http://schemas.xmlsoap.org/ws/2005/02/trust/SymmetricKey"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="KeyTypeOpenEnum">
        <xs:union memberTypes="wst:KeyTypeEnum xs:anyURI"/>
      </xs:simpleType>

      <xs:element name="KeySize" type="xs:unsignedInt"/>

      <xs:element name="SignatureAlgorithm" type="xs:anyURI"/>
      <xs:element name="EncryptionAlgorithm" type="xs:anyURI"/>
      <xs:element name="CanonicalizationAlgorithm" type="xs:anyURI"/>
      <xs:element name="ComputedKeyAlgorithm" type="xs:anyURI"/>

      <xs:element name="Encryption" type="wst:EncryptionType"/>
      <xs:complexType name="EncryptionType">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax"/>

        </xs:sequence>
      </xs:complexType>

      <xs:element name="ProofEncryption" type="wst:ProofEncryptionType"/>
      <xs:complexType name="ProofEncryptionType">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax"/>
        </xs:sequence>
      </xs:complexType>

      <xs:element name="UseKey" type="wst:UseKeyType"/>
      <xs:complexType name="UseKeyType">
        <xs:sequence>
          <xs:any minOccurs="0" namespace="##any" processContents="lax"/>
        </xs:sequence>
        <xs:attribute name="Sig" type="xs:anyURI" use="optional"/>
      </xs:complexType>

      <xs:element name="SignWith" type="xs:anyURI"/>

      <xs:element name="EncryptWith" type="xs:anyURI"/>

      <!-- WS-Trust Section 11.3 -->
      <xs:element name="DelegateTo" type="wst:DelegateToType"/>
      <xs:complexType name="DelegateToType">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax"/>
        </xs:sequence>
      </xs:complexType>

      <xs:element name="Forwardable" type="xs:boolean"/>
      <xs:element name="Delegatable" type="xs:boolean"/>

      <!-- WS-Trust Section 11.5 -->
      <xs:element name="Participants" type="wst:ParticipantsType"/>
      <xs:complexType name="ParticipantsType">
        <xs:sequence>
          <xs:element minOccurs="0" name="Primary" type="wst:ParticipantType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="Participant" type="wst:ParticipantType"/>

          <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="ParticipantType">
        <xs:sequence>
          <xs:any namespace="##any" processContents="lax"/>
        </xs:sequence>
      </xs:complexType>

    </xs:schema>
  </wsdl:types>

  <!-- WS-Trust defines the following GEDs -->
  <wsdl:message name="RequestSecurityTokenMsg">
	<wsdl:part element="wst:RequestSecurityToken" name="request"/>
  </wsdl:message>
  <wsdl:message name="RequestSecurityTokenResponseMsg">
	<wsdl:part element="wst:RequestSecurityTokenResponse" name="response"/>

  </wsdl:message>
  <wsdl:message name="RequestSecurityTokenResponseCollectionMsg">
	<wsdl:part element="wst:RequestSecurityTokenResponseCollection" name="responseCollection"/>
  </wsdl:message>

  <wsdl:portType name="WSTrustSoap">
	<wsdl:operation name="RequestSecurityToken">
	  <wsdl:input message="tns:RequestSecurityTokenMsg"/>
	  <wsdl:output message="tns:RequestSecurityTokenResponseMsg"/>

	</wsdl:operation>
	<wsdl:operation name="RequestSecurityToken2">
	  <wsdl:input message="tns:RequestSecurityTokenMsg"/>
	  <wsdl:output message="tns:RequestSecurityTokenResponseCollectionMsg"/>
	</wsdl:operation>
  </wsdl:portType>

  <wsdl:binding name="WSTrustSoap" type="tns:WSTrustSoap">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>

    <wsdl:operation name="RequestSecurityToken">
	  <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
	<wsdl:operation name="RequestSecurityToken2">

	  <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
	</wsdl:operation>
  </wsdl:binding>

  <wsdl:service name="WSTrustSoapService">
      <wsdl:port binding="wst:WSTrustSoapBinding" name="WSTrustSoap">
          <soap:address location="http://ambuz2:8080/service/4882479"/>
      </wsdl:port>
  </wsdl:service>
</wsdl:definitions>