<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation= "http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <!-- enable automatic proxy generation for any class or superclass annotated with @Transactional -->
    <tx:annotation-driven/>

    <!-- export beans to JMX -->
    <context:mbean-export/>

    <bean id="propertiesInjector" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" depends-on="serverConfig"/>

    <bean id="emProperties"
          class="com.l7tech.server.util.PasswordDecryptingPropertiesFactoryBean"
          depends-on="propertiesInjector">
        <constructor-arg ref="propertiesDecryptor"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="properties">
            <!-- default properties if not overridden by system properties -->
            <props>
                <prop key="em.sharedkey.pass">${com.l7tech.em.sharedkeypass}</prop>
            </props>
        </property>
    </bean>

    <bean id="creationDataSource" class="org.apache.derby.jdbc.EmbeddedDataSource40">
        <property name="databaseName" value="var/db/emsdb"/>
        <property name="createDatabase" value="create"/>
        <property name="connectionAttributes" value="upgrade=true"/>
    </bean>

   <bean id="createDB"
          class="com.l7tech.server.util.TypedMethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="com.l7tech.server.ems.setup.SetupManagerImpl.testDataSource"/>
        <property name="arguments">
            <list>
                <ref local="creationDataSource"/>
                <ref local="serverConfig"/>
                <!--
                  List of SQL script resources to run when database is created.
                -->
                <list>
                    <value>classpath:com/l7tech/server/ems/resources/db/audit.sql</value>
                    <value>classpath:com/l7tech/server/ems/resources/db/version.sql</value>
                </list>
                <!--
                  List of SQL script resources to run when database already exists.
                -->
                <list>
                    <value>file:var/db/update.sql</value>
                </list>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.derby.jdbc.EmbeddedDataSource40" depends-on="createDB">
        <property name="databaseName" value="var/db/emsdb"/>
    </bean>

    <bean id="dataSourceExplorer" class="com.l7tech.server.util.DataSourceExplorer">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <value>com/l7tech/server/resources/audit.hbm.xml</value>
            </list>
        </property>
        <property name="annotatedClasses">
            <list>
                <!-- RBAC Entities -->
                <value>com.l7tech.gateway.common.security.rbac.Role</value>
                <value>com.l7tech.gateway.common.security.rbac.RoleAssignment</value>
                <value>com.l7tech.gateway.common.security.rbac.Permission</value>
                <value>com.l7tech.gateway.common.security.rbac.ScopePredicate</value>
                <value>com.l7tech.gateway.common.security.rbac.AttributePredicate</value>
                <value>com.l7tech.gateway.common.security.rbac.ObjectIdentityPredicate</value>

                <!-- Audit Entities -->
                <value>com.l7tech.gateway.common.mapping.MessageContextMappingKeys</value>
                <value>com.l7tech.gateway.common.mapping.MessageContextMappingValues</value>

                <!-- Enterprise Organization Entities -->
                <value>com.l7tech.server.ems.enterprise.EnterpriseFolder</value>
                <value>com.l7tech.server.ems.enterprise.SsgCluster</value>
                <value>com.l7tech.server.ems.enterprise.SsgNode</value>

                <!-- Reporting -->
                <value>com.l7tech.server.ems.standardreports.StandardReport</value>
                <value>com.l7tech.server.ems.standardreports.StandardReportArtifact</value>
                <value>com.l7tech.server.ems.standardreports.StandardReportSettings</value>

                <!-- Enterprise Migration -->
                <value>com.l7tech.server.ems.migration.MigrationRecord</value>
                <value>com.l7tech.server.ems.migration.MigrationMappingRecord</value>

                <!-- Remote System Monitoring -->
                <value>com.l7tech.server.ems.monitoring.SystemMonitoringNotificationRule</value>
                <value>com.l7tech.server.ems.monitoring.EntityMonitoringPropertySetup</value>
                <value>com.l7tech.server.ems.monitoring.SsgClusterNotificationSetup</value>

                <!-- General -->
                <value>com.l7tech.gateway.common.cluster.ClusterProperty</value>
                <value>com.l7tech.identity.internal.InternalUser</value>
                <value>com.l7tech.identity.internal.PasswordChangeRecord</value>
                <value>com.l7tech.identity.IdentityProviderConfig</value>
                <value>com.l7tech.server.ems.user.UserProperty</value>
                <value>com.l7tech.identity.LogonInfo</value>
                <value>com.l7tech.server.security.keystore.KeystoreFile</value>
                <value>com.l7tech.server.security.sharedkey.SharedKeyRecord</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">com.l7tech.server.ems.util.ExtendedDerbyDialect</prop>
                <prop key="hibernate.validator.apply_to_ddl">false</prop>
                <prop key="javax.persistence.validation.group.pre-persist"> </prop>
                <prop key="javax.persistence.validation.group.pre-update"> </prop>
                <prop key="javax.persistence.validation.group.pre-remove"> </prop>
            </props>
        </property>
        <property name="entityInterceptor" ref="persistenceEventInterceptor"/>
        <property name="schemaUpdate" value="true"/>
    </bean>

    <bean id="schemaExport" class="com.l7tech.server.ems.EsmDbSchemaExport" init-method="init" depends-on="sessionFactory">
        <constructor-arg index="0">
           <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetObject" ref="&amp;sessionFactory"/>
                <property name="targetMethod" value="getConfiguration"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="1" value="var/db/esm.sql"/>
    </bean>

    <bean id="schemaUpdater" class="com.l7tech.server.ems.setup.SchemaUpdaterImpl" init-method="ensureCurrentSchema" depends-on="sessionFactory">
        <constructor-arg index="0" ref="transactionManager"/>
        <constructor-arg index="1">
            <map>
                <entry key="1" value="classpath:com/l7tech/server/ems/resources/db/schema_upgrade_1.sql"/>
                <entry key="2" value="classpath:com/l7tech/server/ems/resources/db/schema_upgrade_2.sql"/>
            </map>
        </constructor-arg>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="persistenceEventInterceptor" class="com.l7tech.server.PersistenceEventInterceptor"/>

    <bean id="managedBackgroundTimer" class="com.l7tech.server.util.ManagedTimer">
        <constructor-arg value="Background timer"/>
    </bean>

    <bean id="whirlyLife" class="com.l7tech.server.WhirlyLifecycle"/>

    <bean id="timerLife" class="com.l7tech.server.ManagedTimerLifecycle"/>

    <bean id="exceptionLogger" class="com.l7tech.util.UncaughtExceptionLogger" factory-method="createAndInstall"/>

    <bean id="timeSource" class="com.l7tech.util.TimeSource"/>

    <!--
    * singleton using the factory method. This is transitional, as it is referencef from
    * too many places.
    -->
    <bean id="serverConfig" class="com.l7tech.server.ServerConfig" factory-method="getInstance">
        <property name="propertyChangeListener">
            <bean class="com.l7tech.server.util.LazyPropertyChangeDispatcher">
                <constructor-arg>
                    <map>
                        <entry key="defaultKey">
                            <list>
                                <value>keyStoreDefaultSslKey</value>
                                <value>keyStoreDefaultCaKey</value>
                                <value>keyStoreAuditViewerKey</value>
                                <value>keyStoreAuditSigningKey</value>
                                <value>keyStoreSearchForAlias</value>
                            </list>
                        </entry>
                        <entry key="servletContainer">
                            <list>
                                <value>keyStoreDefaultSslKey</value>
                                <value>em.server.listenaddr</value>
                                <value>em.server.listenport</value>
                                <value>em.server.session.timeout</value>
                            </list>
                        </entry>
                    </map>
                </constructor-arg>
            </bean>
        </property>
        <property name="clusterPropertyCache" ref="clusterPropertyCache"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="applicationEventProxy" class="com.l7tech.server.util.ApplicationEventProxy"/>
    <bean id="entityInvalidator" class="com.l7tech.server.EntityVersionChecker">
        <property name="applicationEventProxy" ref="applicationEventProxy"/>
        <property name="entityManagers">
            <list>
                <ref bean="clusterPropertyManager"/>
                <ref bean="identityProviderConfigManager"/>
            </list>
        </property>
        <property name="timer">
            <bean class="com.l7tech.server.util.ManagedTimer">
                <constructor-arg value="EntityVersionChecker"/>
            </bean>
        </property>
    </bean>

    <bean id="masterPasswordManager" class="com.l7tech.util.MasterPasswordManager">
        <constructor-arg>
            <bean class="com.l7tech.util.DefaultMasterPasswordFinder">
                <constructor-arg value="etc${file.separator}omp.dat"/>
            </bean>
        </constructor-arg>
    </bean>

    <!-- Current cluster shared key, as raw byte array -->
    <bean id="clusterSharedKey" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="sharedKeyManager"/>
        <property name="targetMethod" value="getSharedKey"/>
    </bean>

    <bean id="propertiesDecryptor" class="com.l7tech.server.util.PropertiesDecryptor">
        <constructor-arg ref="masterPasswordManager"/>
        <property name="passwordProperties">
            <list>
                <value>em.sharedkey.pass</value>
            </list>
        </property>
    </bean>

    <bean id="sharedKeyManager" class="com.l7tech.server.security.sharedkey.SharedKeyManagerImpl">
        <constructor-arg index="0">
            <bean class="com.l7tech.server.util.PropertiesValueFactoryBean">
                <constructor-arg ref="emProperties"/>
                <constructor-arg value="em.sharedkey.pass"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="1" ref="transactionManager"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="keystoreFileManager" class="com.l7tech.server.security.keystore.KeystoreFileManagerImpl" parent="hibernateBean">
        <constructor-arg index="0"><null/></constructor-arg>
    </bean>

    <bean id="ssgKeyStoreManager" class="com.l7tech.server.security.keystore.SsgKeyStoreManagerImpl" depends-on="setupManager">
        <constructor-arg index="0" ref="sharedKeyManager"/>
        <constructor-arg index="1" ref="keystoreFileManager"/>
        <constructor-arg index="2" ref="serverConfig"/>
        <constructor-arg index="3" value=" "/>  <!-- This is for SCA, and we don't have one -->
        <constructor-arg index="4"><null/></constructor-arg>
        <property name="keyAccessFilter">
            <bean class="com.l7tech.server.security.keystore.PermissiveKeyAccessFilter"/>
        </property>
    </bean>

    <!-- server side log manager -->
    <bean id="logRecordManager" class="com.l7tech.server.audit.LogRecordManager">
        <constructor-arg index="0"><null/></constructor-arg>
        <constructor-arg index="1" ref="logRecordRingBuffer"/>
        <constructor-arg index="2"><null/></constructor-arg>
    </bean>

    <!-- server side log ring buffer -->
    <bean id="logRecordRingBuffer" class="com.l7tech.server.log.LogRecordRingBuffer" init-method="init">
        <property name="loggerName" value="com.l7tech"/>
        <property name="bufferSize" value="500"/> <!-- NOTE that the max retrieval block size is 600, this should be less than that -->
    </bean>

    <!-- server side audit record manager -->
    <bean id="auditRecordManager" class="com.l7tech.server.audit.AuditRecordManagerImpl" parent="hibernateBean">
        <property name="serverConfig" ref="serverConfig"/>
    </bean>

    <!-- server side audit download manager -->
    <bean id="auditDownloadManager" class="com.l7tech.server.audit.AuditDownloadManager">
        <constructor-arg ref="defaultKey"/>
    </bean>

    <!-- server side audit exporter -->
    <bean id="auditExporter" class="com.l7tech.server.audit.AuditExporterImpl" scope="prototype">
        <constructor-arg index="0" value="DERBY"/>
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="config" ref="serverConfig"/>
    </bean>

    <bean id="auditContext" class="com.l7tech.server.audit.ThreadLocalAuditContext">
        <property name="targetId" value="auditContextImpl"/>
    </bean>

    <bean id="auditContextImpl" class="com.l7tech.server.audit.AuditContextImpl" scope="prototype">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" ref="auditRecordManager"/>
        <constructor-arg index="2"><null/></constructor-arg>
        <constructor-arg index="3"><null/></constructor-arg>
        <constructor-arg index="4" ref="esmId"/>
        <property name="keystore" ref="defaultKey"/>
        <property name="auditLogListener" ref="auditLogListener"/>
    </bean>

    <bean id="auditLogListener" class="com.l7tech.server.log.LoggingAuditLogListener"/>

    <bean id="auditDetailProcessingAuditListener" class="com.l7tech.server.audit.AuditDetailProcessingAuditListener">
        <constructor-arg ref="auditContext"/>
    </bean>

    <bean id="adminAuditListener" class="com.l7tech.server.audit.AdminAuditListener" depends-on="serverConfig">
        <constructor-arg value="#{serverConfig.getProperty('em.server.id',null)}"/>
        <constructor-arg ref="auditContext"/>
    </bean>

    <bean id="systemAuditListener" class="com.l7tech.server.audit.SystemAuditListener" depends-on="serverConfig">
        <constructor-arg value="#{serverConfig.getProperty('em.server.id',null)}"/>
        <constructor-arg ref="auditContext"/>
    </bean>

    <!-- Abstract "parent" of any bean that needs access to sessionFactory and transactionManager -->
    <bean id="hibernateBean" abstract="true" depends-on="schemaUpdater">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="clusterPropertyManager" class="com.l7tech.server.cluster.ClusterPropertyManagerImpl" parent="hibernateBean"/>

    <bean id="clusterPropertyCache" class="com.l7tech.server.cluster.ClusterPropertyCache" depends-on="schemaUpdater">
        <property name="clusterPropertyManager" ref="clusterPropertyManager"/>
        <!--
          This is not a configuration error, server config listens for cluster property events
          so it can dispatch them to other beans.
        -->
        <property name="clusterPropertyListener" ref="serverConfig"/>
    </bean>

    <bean id="licenseManager" class="com.l7tech.server.ems.EsmLicenseManager">
        <constructor-arg ref="clusterPropertyManager"/>
    </bean>

    <!-- ID provider framework -->
    <bean id="identityProviderFactory" class="com.l7tech.server.identity.IdentityProviderFactory">
        <constructor-arg ref="identityProviderConfigManager"/>
    </bean>
    <bean id="identityProviderConfigManager" class="com.l7tech.server.identity.IdProvConfManagerServer" parent="hibernateBean">
        <!-- roleManager can be null since the EMS currently does not allow ID provider configs to be created or updated -->
        <property name="roleManager"><null/></property>
    </bean>

    <!-- Internal identity provider -->
    <bean id="internalIdentityProviderFactory" class="com.l7tech.server.identity.GenericIdentityProviderFactorySpi">
        <constructor-arg value="com.l7tech.server.identity.internal.InternalIdentityProviderImpl"/>
        <constructor-arg value="internalIdentityProvider"/>
    </bean>
    <bean id="internalUserManager" class="com.l7tech.server.identity.internal.InternalUserManagerImpl" parent="hibernateBean" scope="prototype" >
        <constructor-arg index="0" ref="roleManager"/>
        <constructor-arg index="1"><null/></constructor-arg>
        <constructor-arg index="2" ref="logonManager"/>
        <constructor-arg index="3" ref="passwordHasher"/>
        <constructor-arg>
            <bean class="com.l7tech.server.identity.internal.InternalUserPasswordManagerImpl">
                <constructor-arg ref="serverConfig"/>
                <constructor-arg ref="passwordHasher"/>
            </bean>
        </constructor-arg>
    </bean>
    <bean id="internalIdentityProvider" class="com.l7tech.server.identity.internal.InternalIdentityProviderImpl" scope="prototype">
        <property name="clientCertManager"><null/></property>
        <property name="certificateAuthenticator"><null/></property>
        <property name="userManager" ref="internalUserManager"/>
        <property name="groupManager"><null/></property>
        <property name="passwordHasher" ref="passwordHasher"/>
    </bean>

    <bean id="roleManager" class="com.l7tech.server.security.rbac.RoleManagerImpl" parent="hibernateBean">
        <property name="rbacServices" ref="rbacServices"/>
    </bean>
    <bean id="rbacServices" class="com.l7tech.server.security.rbac.RbacServicesImpl">
        <property name="roleManager" ref="roleManager"/>
        <property name="entityFinder" ref="esmEntityFinder"/>
    </bean>

    <bean id="esmEntityFinder" class="com.l7tech.server.ems.EsmEntityFinderImpl"/>

    <bean id="roleManagerHelper" class="com.l7tech.server.util.TypedMethodInvokingFactoryBean">
        <property name="targetClass" value="com.l7tech.server.security.rbac.RoleManagerImpl"/>
        <property name="targetMethod" value="setIdentitySource"/>
        <property name="arguments">
            <list>
                <ref bean="securityManager"/>
            </list>
        </property>
    </bean>


    <!-- logon manager handles the persistence of login attempts information to the database layer -->
    <bean id="logonManager" class="com.l7tech.server.logon.LogonInfoManagerImpl" parent="hibernateBean"/>

    <!-- Account manager -->
    <bean id="emsAccountManager" class="com.l7tech.server.ems.user.EsmAccountManagerImpl">
        <constructor-arg ref="identityProviderFactory"/>
    </bean>

    <!-- Initial setup manager -->
    <bean id="setupManager" class="com.l7tech.server.ems.setup.SetupManagerImpl" depends-on="internalIdentityProvider">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" ref="transactionManager"/>
        <constructor-arg index="2" ref="identityProviderFactory"/>
        <constructor-arg index="3" ref="identityProviderConfigManager"/>
        <constructor-arg index="4" ref="roleManager"/>
        <constructor-arg index="5" ref="enterpriseFolderManager" />
        <constructor-arg index="6" ref="keystoreFileManager"/>
        <constructor-arg index="7" ref="clusterPropertyManager"/>
    </bean>

    <!-- Ssl setup manager -->
    <bean id="sslSetupManager" class="com.l7tech.server.ems.setup.SslSetupManagerImpl">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" ref="clusterPropertyManager"/>
        <constructor-arg index="2" ref="ssgKeyStoreManager"/>
    </bean>

    <bean id="esmId" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="setupManager"/>
        <property name="targetMethod" value="getEsmId"/>
    </bean>

    <!-- Security Manager -->
    <bean id="securityManager" class="com.l7tech.server.ems.ui.EsmSecurityManagerImpl">
        <constructor-arg index="0" ref="identityProviderFactory"/>
        <constructor-arg index="1" ref="roleManager"/>
        <constructor-arg index="2" ref="licenseManager"/>
        <constructor-arg index="3" ref="passwordHasher"/>
    </bean>

    <bean id="passwordHasher" class="com.l7tech.common.password.Sha512CryptPasswordHasher" />

    <bean id="servletContainer" class="com.l7tech.server.ems.listener.EsmServletContainer">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" ref="defaultKey"/>
        <constructor-arg index="2" ref="managedBackgroundTimer"/>
    </bean>

    <bean id="userPropertyManager" class="com.l7tech.server.ems.user.UserPropertyManagerImpl" parent="hibernateBean"/>

    <bean id="setAuditResourceAuditDownloadManager"
          class="com.l7tech.server.util.TypedMethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="com.l7tech.server.ems.ui.AuditResource.setAuditDownloadManager"/>
        <property name="arguments">
            <list>
                <ref local="auditDownloadManager"/>
            </list>
        </property>
    </bean>

    <bean id="setReportResourceStandardReportManager"
          class="com.l7tech.server.util.TypedMethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="com.l7tech.server.ems.standardreports.ReportResource.setStandardReportManager"/>
        <property name="arguments">
            <list>
                <ref local="standardReportManager"/>
            </list>
        </property>
    </bean>

    <bean id="setReportViewResourceStandardReportManager"
          class="com.l7tech.server.util.TypedMethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="com.l7tech.server.ems.standardreports.ReportViewResource.setStandardReportManager"/>
        <property name="arguments">
            <list>
                <ref local="standardReportManager"/>
            </list>
        </property>
    </bean>

    <bean id="setMigrationResourceMigrationRecordManager"
          class="com.l7tech.server.util.TypedMethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="com.l7tech.server.ems.migration.MigrationArtifactResource.setMigrationRecordManager"/>
        <property name="arguments">
            <list>
                <ref local="migrationRecordManager"/>
            </list>
        </property>
    </bean>

    <bean id="setResourceSecurityManager"
          class="com.l7tech.server.util.TypedMethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="com.l7tech.server.ems.ui.SecureResource.setSecurityManager"/>
        <property name="arguments">
            <list>
                <ref local="securityManager"/>
            </list>
        </property>
    </bean>

    <!-- Enterprise Folder Manager -->
    <bean id="enterpriseFolderManager" class="com.l7tech.server.ems.enterprise.EnterpriseFolderManagerImpl" parent="hibernateBean">
        <property name="ssgClusterManager" ref="ssgClusterManager"/>
    </bean>

    <!-- SSG Cluster Manager -->
    <bean id="ssgClusterManager" class="com.l7tech.server.ems.enterprise.SsgClusterManagerImpl" parent="hibernateBean">
        <constructor-arg index="0" ref="enterpriseFolderManager"/>
        <constructor-arg index="1" ref="roleManager"/>
    </bean>

    <!-- SSG Node Manager -->
    <bean id="ssgNodeManager" class="com.l7tech.server.ems.enterprise.SsgNodeManagerImpl" parent="hibernateBean"/>

    <!-- Migration Manager -->
    <bean id="migrationRecordManager" class="com.l7tech.server.ems.migration.MigrationRecordManagerImpl" parent="hibernateBean"/>

    <bean id="migrationMappingManager" class="com.l7tech.server.ems.migration.MigrationMappingRecordManagerImpl" parent="hibernateBean">
        <constructor-arg index="0" ref="ssgClusterManager"/>
    </bean>

    <!-- Standard Report Settings Manager -->
    <bean id="standardReportSettingsManager" class="com.l7tech.server.ems.standardreports.StandardReportSettingsManagerImpl" parent="hibernateBean"/>

    <!-- System Monitoring Managers -->
    <bean id="systemMonitoringSetupSettingsManager" class="com.l7tech.server.ems.monitoring.SystemMonitoringSetupSettingsManagerImpl">
        <constructor-arg index="0" ref="clusterPropertyManager"/>
        <constructor-arg index="1" ref="serverConfig"/>
    </bean>

    <bean id="systemMonitoringNotificationRulesManager" class="com.l7tech.server.ems.monitoring.SystemMonitoringNotificationRulesManagerImpl" parent="hibernateBean"/>

    <bean id="entityMonitoringPropertySetupManager" class="com.l7tech.server.ems.monitoring.EntityMonitoringPropertySetupManagerImpl" parent="hibernateBean">
        <constructor-arg index="0" ref="ssgClusterNotificationSetupManager"/>
        <constructor-arg index="1" ref="ssgClusterManager"/>
    </bean>

    <bean id="ssgClusterNotificationSetupManager" class="com.l7tech.server.ems.monitoring.SsgClusterNotificationSetupManagerImpl" parent="hibernateBean"/>

    <bean id="monitoringService" class="com.l7tech.server.ems.monitoring.MonitoringServiceImpl">
        <constructor-arg index="0" ref="gatewayContextFactory"/>
        <constructor-arg index="1" ref="entityMonitoringPropertySetupManager"/>
    </bean>

    <!-- keystore root cert and ssl config  -->
    <bean id="defaultKey" class="com.l7tech.server.DefaultKeyImpl">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" ref="clusterPropertyManager"/>
        <constructor-arg index="2" ref="ssgKeyStoreManager"/>
        <constructor-arg index="3" ref="transactionManager"/>
    </bean>

    <bean id="keystoreMutatorSwitch" class="com.l7tech.server.security.keystore.JdkKeyStoreBackedSsgKeyStore$StartupListener"/>

    <bean id="trustTokenFactory" class="com.l7tech.server.ems.gateway.GatewayTrustTokenFactoryImpl">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" ref="securityManager"/>
        <constructor-arg index="2" ref="userPropertyManager" />
        <constructor-arg index="3" ref="defaultKey" />
    </bean>

    <bean id="gatewayClusterClientManager" class="com.l7tech.server.ems.gateway.GatewayClusterClientManagerImpl" depends-on="setupManager">
        <constructor-arg index="0" ref="gatewayContextFactory"/>
        <constructor-arg index="1" ref="ssgClusterManager"/>
    </bean>

    <bean id="gatewayContextFactory" class="com.l7tech.server.ems.gateway.GatewayContextFactoryImpl">
        <constructor-arg index="0" ref="serverConfig"/>
        <constructor-arg index="1" ref="defaultKey" />
        <constructor-arg index="2" ref="userPropertyManager" />
    </bean>

    <bean id="gatewayPoller" class="com.l7tech.server.ems.gateway.GatewayPoller">
        <constructor-arg index="0" ref="transactionManager"/>
        <constructor-arg index="1">
            <bean id="pollerTimer" class="com.l7tech.server.util.ManagedTimer">
                <constructor-arg value="Gateway poller timer"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="2" ref="ssgNodeManager" />
        <constructor-arg index="3" ref="ssgClusterManager" />
        <constructor-arg index="4" ref="gatewayContextFactory" />
        <constructor-arg index="5" ref="userPropertyManager" />
    </bean>

    <bean id="monitoringConfigurationSynchronizer" class="com.l7tech.server.ems.monitoring.MonitoringConfigurationSynchronizer">
        <constructor-arg index="0">
            <bean id="monitoringConfigurationSynchronizerTimer" class="com.l7tech.server.util.ManagedTimer">
                <constructor-arg value="monitoringConfigurationSynchronizerTimer"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="1" ref="timeSource"/>
        <constructor-arg index="2" ref="ssgClusterManager"/>
        <constructor-arg index="3" ref="gatewayContextFactory"/>
        <constructor-arg index="4" ref="ssgClusterNotificationSetupManager"/>
        <constructor-arg index="5" ref="entityMonitoringPropertySetupManager"/>
        <constructor-arg index="6" ref="systemMonitoringSetupSettingsManager"/>
    </bean>

    <bean id="notificationAttemptAuditor" class="com.l7tech.server.ems.monitoring.NotificationAttemptAuditor">
        <constructor-arg index="0">
            <bean id="notificationAttemptAuditorTimer" class="com.l7tech.server.util.ManagedTimer">
                <constructor-arg value="notificationAttemptAuditorTimer"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="1" ref="transactionManager"/>
        <constructor-arg index="2" ref="ssgClusterManager"/>
        <constructor-arg index="3" ref="ssgNodeManager"/>
        <constructor-arg index="4" ref="gatewayContextFactory"/>
    </bean>

    <bean id="standardReportManager" class="com.l7tech.server.ems.standardreports.StandardReportManagerImpl" parent="hibernateBean">
        <constructor-arg index="0" ref="roleManager"/>
    </bean>

    <bean id="reportService" class="com.l7tech.server.ems.standardreports.ReportServiceImpl">
        <constructor-arg index="0" ref="transactionManager"/>
        <constructor-arg index="1" ref="standardReportManager"/>
        <constructor-arg index="2" ref="ssgClusterManager" />
        <constructor-arg index="3" ref="gatewayContextFactory" />
        <constructor-arg index="4">
            <bean class="com.l7tech.server.util.ManagedTimer">
                <constructor-arg value="Report service timer"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="eventPublisher" class="com.l7tech.server.ems.util.ApplicationEventPublisherImpl"/>
</beans>
