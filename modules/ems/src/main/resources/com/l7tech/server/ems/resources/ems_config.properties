#
# Server Configuration Properties (used by ServerConfig)
#

home.description = Enterprise Manager home directory
home.systemProperty = com.l7tech.ems.home
home.default =
home.setSystemProperty = true

fs.description = File separator (/ on Unix, \\ in Windows, etc.)
fs.systemProperty = file.separator
fs.default = /

# General ServerConfig configuration
propertyPrefix = com.l7tech.server
ems.etc = ${ssgHome}${fs}etc
ems.conf = ${ssg.etc}${fs}conf

# Directory for SSG configuration files
configDirectory.description = Directory for Enterprise Manager configuration files
configDirectory.systemProperty = ${propertyPrefix}.configDirectory
configDirectory.default = ${partitionHome}${fs}${partitionName}
configDirectory.setSystemProperty = true

# template for log file pattern
#  0 - partition name
#  1 - sink name (e.g. "ssg")
#  2 - "%g" the generation number to distinguish rotated logs
#  3 - "%u" a unique number to resolve conflicts
#logFileTemplate.description = Template for log filename pattern ('{0}' is partition name, '{1}' is sink name, '{2}' the generation number to distinguish rotated logs, '{3}' a unique number to resolve file conflicts)
#logFileTemplate.default = {0}-{1}_{2}_{3}.log
#logFileTemplate.systemProperty = ${propertyPrefix}.logFileTemplate
#logFileTemplate.clusterProperty = log.filenameTemplate

# customized logger levels
logLevels.description = Log level configuration (one level per line)
logLevels.default = com.l7tech.level = CONFIG
logLevels.clusterProperty = log.levels

# system properties path
systemPropertiesPath.description = System properties path
systemPropertiesPath.default = ${configDirectory}${fs}system.properties
systemPropertiesPath.jndi = ${jndiPrefix}/SystemPropertiesPath
systemPropertiesPath.systemProperty = ${propertyPrefix}.systemPropertiesPath

# Audit settings
auditMessageThreshold.description = Minimum level required of a Message Audit Record for it to be saved to the database (Level)
auditMessageThreshold.default = WARNING
auditMessageThreshold.jndi = ${jndiPrefix}/AuditMessageThreshold
auditMessageThreshold.systemProperty = ${propertyPrefix}.audit.messageThreshold
auditMessageThreshold.clusterProperty = audit.messageThreshold

auditAdminThreshold.description = Minimum level required of an Admin Audit Record for it to be saved to the database (Level)
auditAdminThreshold.default = INFO
auditAdminThreshold.jndi = ${jndiPrefix}/AuditAdminThreshold
auditAdminThreshold.systemProperty = ${propertyPrefix}.audit.adminThreshold
auditAdminThreshold.clusterProperty = audit.adminThreshold

# asssocated logs threshold
auditAssociatedLogsThreshold.default = INFO
auditAssociatedLogsThreshold.description = Minimum level required of an Audit Detail Message for it to be saved to the database (Level)
auditAssociatedLogsThreshold.clusterProperty = audit.detailThreshold

# client component system logs threshold
auditClientSystemLogsThreshold.default = WARNING
auditClientSystemLogsThreshold.description = Minimum level required of an System Audit Record for a client component for it to be saved to the database (Level)
auditClientSystemLogsThreshold.clusterProperty = audit.clientServicesThreshold

auditHintingEnabled.description = Enable audit messages to provide hints for audited information, such as request XML (true/false)
auditHintingEnabled.default = true
auditHintingEnabled.systemProperty = ${propertyPrefix}.audit.hinting
auditHintingEnabled.clusterProperty = audit.hinting

auditAssertionStatusEnabled.description = Use the highest assertion status level when checking if a record should be saved (true/false)
auditAssertionStatusEnabled.default = true
auditAssertionStatusEnabled.systemProperty = ${propertyPrefix}.audit.assertionStatus
auditAssertionStatusEnabled.clusterProperty = audit.assertionStatus

auditAssociatedLogsThresholdRespected.description = Use the audit detail level when checking if a record should be saved (true/false)
auditAssociatedLogsThresholdRespected.default = true
auditAssociatedLogsThresholdRespected.systemProperty = ${propertyPrefix}.audit.detailThresholdRespected
auditAssociatedLogsThresholdRespected.clusterProperty = audit.detailThresholdRespected

auditSigningEnabled.description = Sign audited data (true/false)
auditSigningEnabled.default = false
auditSigningEnabled.systemProperty = ${propertyPrefix}.audit.sign
auditSigningEnabled.clusterProperty = audit.signing

pkixValidation.identity.description = Default certificate validation setting for identity providers (validate/validatepath/revocation)
pkixValidation.identity.default = validate
pkixValidation.identity.clusterProperty = pkix.validation.identityProvider

pkixValidation.routing.description = Default certificate validation setting for message routing (validate/validatepath/revocation)
pkixValidation.routing.default = validate
pkixValidation.routing.clusterProperty = pkix.validation.routing

pkixValidation.other.description = Default certificate validation setting for other uses (validate/validatepath/revocation)
pkixValidation.other.default = validate
pkixValidation.other.clusterProperty = pkix.validation.other

pkixTrust.useDefaultAnchors.description = Should well known Certificate Authorities be included as Trust Anchors (true/false)
pkixTrust.useDefaultAnchors.default = true
pkixTrust.useDefaultAnchors.clusterProperty = pkix.useDefaultTrustAnchors

pkixCRL.expiry.description = Default setting for CRL expiry age (timeunit)
pkixCRL.expiry.default = 1h
pkixCRL.expiry.clusterProperty = pkix.crl.defaultExpiryAge

pkixCRL.minExpiryAge.description = Minimum allowed value for CRL expiry age (timeunit)
pkixCRL.minExpiryAge.default = 1h
pkixCRL.minExpiryAge.clusterProperty = pkix.crl.minExpiryAge

pkixCRL.maxExpiryAge.description = Maximum allowed value for CRL expiry age (timeunit)
pkixCRL.maxExpiryAge.default = 7d
pkixCRL.maxExpiryAge.clusterProperty = pkix.crl.maxExpiryAge

pkixOCSP.expiry.description = Default setting for OCSP response expiry age (timeunit)
pkixOCSP.expiry.default = 1m
pkixOCSP.expiry.clusterProperty = pkix.ocsp.defaultExpiryAge

pkixOCSP.minExpiryAge.description = Minimum allowed value for OCSP response expiry age (timeunit)
pkixOCSP.minExpiryAge.default = 1s
pkixOCSP.minExpiryAge.clusterProperty = pkix.ocsp.minExpiryAge

pkixOCSP.maxExpiryAge.description = Maximum allowed value for OCSP response expiry age (timeunit)
pkixOCSP.maxExpiryAge.default = 15m
pkixOCSP.maxExpiryAge.clusterProperty = pkix.ocsp.maxExpiryAge

pkixOCSP.useNonce.description = Include a nonce in OCSP requests (true/false)
pkixOCSP.useNonce.default = true
pkixOCSP.useNonce.clusterProperty = pkix.ocsp.useNonce

license.expiryWarnAge.description = The period before license/SSL certificate expiry during which a warning should be displayed (timeunit)
license.expiryWarnAge.default = 30d
license.expiryWarnAge.clusterProperty = license.expiryWarningPeriod

# The auth cache tunings need to default to their old system properties, but let their cluster properties take precedence
defaultAuthCacheMaxSuccessTime.default=60000
defaultAuthCacheMaxSuccessTime.systemProperty=${propertyPrefix}.identity.AuthCache.maxSuccessTime
authCacheMaxSuccessTime.description=Milliseconds to cache successful authentications (default 60000)
authCacheMaxSuccessTime.default=${defaultAuthCacheMaxSuccessTime}
authCacheMaxSuccessTime.clusterProperty=authCache.maxSuccessTime

defaultAuthCacheMaxFailureTime.default=30000
defaultAuthCacheMaxFailureTime.systemProperty=${propertyPrefix}.identity.AuthCache.maxFailureTime
authCacheMaxFailureTime.description=Milliseconds to cache failed authentications (default 30000)
authCacheMaxFailureTime.default=${defaultAuthCacheMaxFailureTime}
authCacheMaxFailureTime.clusterProperty=authCache.maxFailureTime

defaultAuthCacheSuccessCacheSize.default=2000
defaultAuthCacheSuccessCacheSize.systemProperty=${propertyPrefix}.identity.AuthCache.successCacheSize
authCacheSuccessCacheSize.description=Milliseconds to cache successful authentications (default 2000)
authCacheSuccessCacheSize.default=${defaultAuthCacheSuccessCacheSize}
authCacheSuccessCacheSize.clusterProperty=authCache.successCacheSize

defaultAuthCacheFailureCacheSize.default=200
defaultAuthCacheFailureCacheSize.systemProperty=${propertyPrefix}.identity.AuthCache.failureCacheSize
authCacheFailureCacheSize.description=Milliseconds to cache failed authentications (default 200)
authCacheFailureCacheSize.default=${defaultAuthCacheFailureCacheSize}
authCacheFailureCacheSize.clusterProperty=authCache.failureCacheSize

defaultAuthCacheGroupMembershipCacheSize.default=5000
defaultAuthCacheGroupMembershipCacheSize.systemProperty=${propertyPrefix}.identity.AuthCache.groupMembershipCacheSize
authCacheGroupMembershipCacheSize.description=Milliseconds to cache successful authentications (default 5000)
authCacheGroupMembershipCacheSize.default=${defaultAuthCacheGroupMembershipCacheSize}
authCacheGroupMembershipCacheSize.clusterProperty=authCache.groupMembershipCacheSize

defaultPrincipalSessionCacheSize.default=100
defaultPrincipalSessionCacheSize.systemProperty=${propertyPrefix}.admin.SessionValidator.cacheSize
principalSessionCacheSize.description=Maximum number of principles to keep in cache
principalSessionCacheSize.default=${defaultPrincipalSessionCacheSize}
principalSessionCacheSize.clusterProperty=groupPrincipalCache.cacheSize

defaultPrincipalSessionCacheMaxTime.default=300000
defaultPrincipalSessionCacheMaxTime.systemProperty=${propertyPrefix}.admin.SessionValidator.cacheMaxTime
principalSessionCacheMaxTime.description=Milliseconds to cache successfull Principal validations
principalSessionCacheMaxTime.default=${defaultPrincipalSessionCacheMaxTime}
principalSessionCacheMaxTime.clusterProperty=principalSessionCache.maxTime

defaultPrincipalSessionCacheMaxPrincipalGroups.default=50
defaultPrincipalSessionCacheMaxPrincipalGroups.systemProperty=${propertyPrefix}.admin.SessionValidator.maxPrincipalGroups
principalSessionCacheMaxPrincipalGroups.description=Number of groups per Principal to store in the cache
principalSessionCacheMaxPrincipalGroups.default=${defaultPrincipalSessionCacheMaxPrincipalGroups}
principalSessionCacheMaxPrincipalGroups.clusterProperty=principalSessionCache.maxPrincipalGroups
