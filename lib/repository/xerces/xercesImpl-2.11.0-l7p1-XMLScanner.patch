*** XMLScanner.java.ORIG	2014-08-08 12:59:16.000000000 -0700
--- XMLScanner.java	2014-08-08 12:58:56.000000000 -0700
***************
*** 55,63 ****
   * @author Andy Clark, IBM
   * @author Arnaud  Le Hors, IBM
   * @author Eric Ye, IBM
   *
!  * @version $Id: XMLScanner.java 965250 2010-07-18 16:04:58Z mrglavas $
   */
  public abstract class XMLScanner 
      implements XMLComponent {
  
--- 55,63 ----
   * @author Andy Clark, IBM
   * @author Arnaud  Le Hors, IBM
   * @author Eric Ye, IBM
   *
!  * @version $Id$
   */
  public abstract class XMLScanner 
      implements XMLComponent {
  
***************
*** 541,549 ****
          // we don't even know what the actual encoding of the
          // document is until we scan the encoding declaration
          // you cannot reliably read any characters outside
          // of the ASCII range here. -- mrglavas
!         String name = fEntityScanner.scanName();
          XMLEntityManager.print(fEntityManager.getCurrentEntity());
          if (name == null) {
              reportFatalError("PseudoAttrNameExpected", null);
          }
--- 541,549 ----
          // we don't even know what the actual encoding of the
          // document is until we scan the encoding declaration
          // you cannot reliably read any characters outside
          // of the ASCII range here. -- mrglavas
!         String name = scanPseudoAttributeName();
          XMLEntityManager.print(fEntityManager.getCurrentEntity());
          if (name == null) {
              reportFatalError("PseudoAttrNameExpected", null);
          }
***************
*** 598,605 ****
--- 598,634 ----
  
      } // scanPseudoAttribute(XMLString):String
      
      /**
+      * Scans the name of a pseudo attribute. The only legal names
+      * in XML 1.0/1.1 documents are 'version', 'encoding' and 'standalone'.
+      * 
+      * @return the name of the pseudo attribute or <code>null</code>
+      * if a legal pseudo attribute name could not be scanned.
+      */
+     private String scanPseudoAttributeName() throws IOException, XNIException {
+         final int ch = fEntityScanner.peekChar();
+         switch (ch) {
+             case 'v':
+                 if (fEntityScanner.skipString(fVersionSymbol)) {
+                     return fVersionSymbol;
+                 }
+                 break;
+             case 'e':
+                 if (fEntityScanner.skipString(fEncodingSymbol)) {
+                     return fEncodingSymbol;
+                 }
+                 break;
+             case 's':
+                 if (fEntityScanner.skipString(fStandaloneSymbol)) {
+                     return fStandaloneSymbol;
+                 }
+                 break;
+         }
+         return null;
+     } // scanPseudoAttributeName()
+     
+     /**
       * Scans a processing instruction.
       * <p>
       * <pre>
       * [16] PI ::= '&lt;?' PITarget (S (Char* - (Char* '?>' Char*)))? '?>'
