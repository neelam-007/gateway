diff -rupN /cygdrive/c/JSON-java-master/src/org/json/XML.java /cygdrive/c/Users/kdiep/workspace/org.json/src/org/json/XML.java
--- /cygdrive/c/JSON-java-master/src/org/json/XML.java	2012-11-30 13:17:54.688322800 -0800
+++ /cygdrive/c/Users/kdiep/workspace/org.json/src/org/json/XML.java	2012-11-30 13:29:48.608822800 -0800
@@ -292,7 +292,7 @@ public class XML {
 
 
     /**
-     * Try to convert a string into a number, boolean, or null. If the string
+     * Try to convert a string into a boolean or null. If the string
      * can't be converted, return the string. This is much less ambitious than
      * JSONObject.stringToValue, especially because it does not attempt to
      * convert plus forms, octal forms, hex forms, or E forms lacking decimal
@@ -313,37 +313,6 @@ public class XML {
         if ("null".equalsIgnoreCase(string)) {
             return JSONObject.NULL;
         }
-        if ("0".equals(string)) {
-            return new Integer(0);
-        }
-
-// If it might be a number, try converting it. If that doesn't work,
-// return the string.
-
-        try {
-            char initial = string.charAt(0);
-            boolean negative = false;
-            if (initial == '-') {
-                initial = string.charAt(1);
-                negative = true;
-            }
-            if (initial == '0' && string.charAt(negative ? 2 : 1) == '0') {
-                return string;
-            }
-            if ((initial >= '0' && initial <= '9')) {
-                if (string.indexOf('.') >= 0) {
-                    return Double.valueOf(string);
-                } else if (string.indexOf('e') < 0 && string.indexOf('E') < 0) {
-                    Long myLong = new Long(string);
-                    if (myLong.longValue() == myLong.intValue()) {
-                        return new Integer(myLong.intValue());
-                    } else {
-                        return myLong;
-                    }
-                }
-            }
-        }  catch (Exception ignore) {
-        }
         return string;
     }
 
@@ -493,8 +462,14 @@ public class XML {
             if (object instanceof JSONArray) {
                 ja = (JSONArray)object;
                 length = ja.length();
+                String tag = tagName == null ? "array" : tagName;
+                if(length == 0){
+                	sb.append("<").append(tag).append("/>");
+                	return sb.toString();
+                }
+                sb.append("<").append(tag).append(">");                
                 for (i = 0; i < length; i += 1) {
-                    sb.append(toString(ja.opt(i), tagName == null ? "array" : tagName));
+                	sb.append("</").append(tag).append(">");
                 }
                 return sb.toString();
             } else {
