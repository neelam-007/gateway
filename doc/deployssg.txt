Layer 7 Technologies, inc.
User: flascelles
Date: Jul 07, 2003

SSG deployment steps for a clean linux box

[user]	command
=========================================
[ROOT]	create user ssg, choose a password for this user, remember it
[ROOT]	check /etc/hosts. make sure first line reads 127.0.0.1 localhost localhost.localdomain
[ROOT]	download and install jdk
[ROOT]	change group on java install dir to ssg
[SSG]	download and uncompress tomcat

[ROOT]	service mysqld start (starts mysql)
[ROOT]	chkconfig mysqld on (make sure mysqld starts at boot)
[ROOT]	Create database (2 steps)
		1. mysql -u root -p -e CREATE DATABASE ssg;
		2. mysql -u root -p ssg < ssg.sql
[ROOT]	create ssg mysql user for runtime (2 steps)
		1. GRANT ALL ON ssg.* TO ssg@localhost IDENTIFIED BY the_ssg_password;
[SSG]	check out UneasyRooster somewhere (3 steps)
		1. cvs -d :pserver:flascell@sarek:/home/cvsuser login
		2. cvs -d :pserver:flascell@sarek:/home/cvsuser co UneasyRooster
		3. cvs -d :pserver:flascell@sarek:/home/cvsuser logout

[ROOT]  copy UneasyRooster/etc/ssgruntimedefs.sh to /etc/profile.d
[SSG]   edit /etc/profile.d/ssgruntimedefs.sh. make sure JAVA_HOME and TOMCAT_HOME point to the right place
[SSG]   edit UneasyRooster/etc/web.xml, uncomment security-constraint and login-config to enforce ssl on admin services

[SSG]	edit default_build.properties change database username and password to "ssg" and it's password
[SSG]	go to root of UneasyRooster and run "./build.sh deploy"
[SSG]	go to UneasyRooster/etc/ and run sslGen.sh
[SSG]	run "resetAdmin.sh ssg the_ssg_password" this creates the admin login + passwd
[SSG]	remove UneasyRooster
[SSG]	startssg (start the server)

SSG SERVER NOW UP AND RUNNING

You can now proceed to the deployment of the console
You will need the file $TOMCAT_HOME/kstores/ssg.cer which contains the ssg ssl certificate

(you might need to set an entry on the console pc etc/hosts file so that the name you chose for the dn of
the certificate points to the right IP address of the ssg server)

